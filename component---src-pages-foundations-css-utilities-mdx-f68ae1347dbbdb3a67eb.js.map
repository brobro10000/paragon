{"version":3,"file":"component---src-pages-foundations-css-utilities-mdx-f68ae1347dbbdb3a67eb.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/LinkedHeading.tsx","webpack://paragon-pattern-library-documentation/./src/components/css-utilities-table/utils.tsx","webpack://paragon-pattern-library-documentation/./src/components/css-utilities-table/Declaration.tsx","webpack://paragon-pattern-library-documentation/./src/components/css-utilities-table/index.tsx","webpack://paragon-pattern-library-documentation/./src/templates/default-mdx-page-template.tsx","webpack://paragon-pattern-library-documentation/./src/utils/getCssSelectors.ts","webpack://paragon-pattern-library-documentation/./src/pages/foundations/css-utilities.mdx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface ILinkedHeading {\n  h: string,\n  children: React.ReactNode,\n  id: string,\n}\n\ntype HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nfunction LinkedHeading({\n  h,\n  children,\n  id,\n}: ILinkedHeading) {\n  const H = `h${h}` as HeadingTag;\n\n  return (\n    <H id={id} className=\"pgn-doc__heading\">\n      {children}\n    </H>\n  );\n}\n\nLinkedHeading.propTypes = {\n  h: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default LinkedHeading;\n","import React from 'react';\n\n/**\n * Convert hex value to [r, g, b] array, hex value must be a string of 6 characters without leading #.\n */\nfunction convertHexToRgb(hexColor: string) {\n  if (hexColor.length !== 6) {\n    throw new Error('Invalid HEX color, it must contain only 6 digits and be without starting #.');\n  }\n  return hexColor.match(/.{1,2}/g)!.map(rgbPart => parseInt(rgbPart, 16));\n}\n\n/**\n * Decides whether to return light color variant or dark one based on contrast value of the input color\n */\nfunction getInverseColorContrast(color: string) {\n  const CONTRAST_THRESHOLD = 128;\n  const BLACK_COLOR = '#000';\n  const WHITE_COLOR = '#FFF';\n\n  let r;\n  let g;\n  let b;\n\n  if (color.startsWith('#')) {\n    let hexColorValue = color.slice(1);\n\n    // conversion of a 3-digit color HEX code to a 6-digit one is necessary for transform to RGB\n    if (hexColorValue.length === 3) {\n      hexColorValue = hexColorValue.split('').map((hex) => hex + hex).join('');\n    }\n\n    [r, g, b] = convertHexToRgb(hexColorValue);\n  } else if (color.startsWith('rgb')) {\n    [r, g, b] = color.match(/(?<=rgba?\\()(.*)(?=\\))/g)![0].split(',').map(Number);\n  } else {\n    throw new Error('Invalid color - expected HEX or RGB/RGBA format.');\n  }\n\n  const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n\n  return (yiq >= CONTRAST_THRESHOLD) ? BLACK_COLOR : WHITE_COLOR;\n}\n\nfunction containsColorValue(value: string) {\n  return value.includes('rgb') || value.includes('#');\n}\n\nexport function containsCSSVariable(value: string) {\n  return value.includes('var(');\n}\n\n/**\n * Loop over CSS declaration string, if color value is found - add respective background color to it.\n */\nexport function colorCSSDeclaration(value: string) {\n  if (!containsColorValue(value)) {\n    return value;\n  }\n\n  // This is a very ugly code to be able to split strings like '1px solid rgb(1, 2, 3)' into\n  // ['1px', 'solid', 'rgb(1, 2, 3)'].\n  // TODO try to split with regex\n  return value.split(' ').map((item, index, originalArray) => {\n    if (item.startsWith('#')) {\n      return (\n        <mark key={item} className=\"mr-1\" style={{ backgroundColor: item, color: getInverseColorContrast(item) }}>\n          {item}\n        </mark>\n      );\n    }\n\n    if (item.startsWith('rgb')) {\n      const elementsToCombineCount = item[3] === 'a' ? 3 : 2;\n      const val = originalArray.slice(index, index + elementsToCombineCount + 1).join(' ');\n\n      for (let i = 1; i <= elementsToCombineCount; i++) {\n        // eslint-disable-next-line no-param-reassign\n        delete originalArray[index + i];\n      }\n\n      return (\n        <mark key={val} className=\"mr-1\" style={{ backgroundColor: val, color: getInverseColorContrast(val) }}>\n          {val}\n        </mark>\n      );\n    }\n\n    return <span key={item} className=\"mr-1\">{item}</span>;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { colorCSSDeclaration, containsCSSVariable } from './utils';\n\nexport default function CSSDeclaration({ declaration, handleMouseEnter, handleMouseLeave }: DeclarationData) {\n  const [attribute, value, importantFlag] = declaration.split(/:|!/);\n\n  if (containsCSSVariable(value)) {\n    return (\n      <code style={{ fontSize: '14px' }} key={declaration} className=\"mb-0 text-muted\">\n        <span>{attribute}: </span>\n        <span\n          onMouseEnter={(e: React.MouseEvent) => handleMouseEnter(e, declaration)}\n          onMouseLeave={() => handleMouseLeave()}\n          style={{ cursor: 'pointer', textDecoration: 'underline dotted' }}\n        >\n          {colorCSSDeclaration(value.trim())}\n        </span>\n        {importantFlag && <span> !important;</span>}\n      </code>\n    );\n  }\n\n  return (\n    <code style={{ fontSize: '14px' }} key={declaration} className=\"mb-0 text-muted\">\n      {colorCSSDeclaration(declaration)}\n    </code>\n  );\n}\n\ninterface DeclarationData {\n  declaration: string,\n  handleMouseEnter: (e: React.MouseEvent, declaration: string) => void,\n  handleMouseLeave: () => void,\n}\n\nCSSDeclaration.propTypes = {\n  declaration: PropTypes.string.isRequired,\n  handleMouseEnter: PropTypes.func.isRequired,\n  handleMouseLeave: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// @ts-ignore\nimport { DataTable, Overlay, Popover } from '~paragon-react'; // eslint-disable-line\nimport CSSDeclaration from './Declaration';\nimport { colorCSSDeclaration } from './utils';\n\nfunction CSSUtilitiesTable({ selectors }: CSSUtilities) {\n  const [showPopover, setShowPopover] = useState<boolean>(false);\n  const [popoverTarget, setPopoverTarget] = useState<EventTarget | undefined>(undefined);\n  const [computedStyle, setComputedStyle] = useState<string>('');\n\n  useEffect(() => {\n    // create an empty div to apply utility classes to it\n    // and compute CSS variables on hover\n    const dummyDiv = document.createElement('div');\n    dummyDiv.id = 'dummyDiv';\n    document.body.appendChild(dummyDiv);\n\n    return () => { document.body.removeChild(dummyDiv); };\n  }, []);\n\n  const handleCSSVariableMouseEnter = (e: React.MouseEvent, declaration: string) => {\n    setPopoverTarget(e.target);\n    setShowPopover(true);\n\n    const propertyName = declaration.split(':')[0];\n    const dummyDiv = document.getElementById('dummyDiv') as HTMLElement;\n    dummyDiv.style.cssText = declaration;\n    const computedProperty = getComputedStyle(dummyDiv).getPropertyValue(propertyName);\n    setComputedStyle(computedProperty);\n  };\n\n  const handleCSSVariableMouseLeave = () => {\n    setShowPopover(false);\n    setPopoverTarget(undefined);\n\n    const dummyDiv = document.getElementById('dummyDiv') as HTMLElement;\n    dummyDiv.style.cssText = '';\n    setComputedStyle('');\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <DataTable\n        data={selectors.map(({ selector, declarations }) => ({\n          selector: <code style={{ fontSize: '14px' }}>.{selector}</code>,\n          declarations: (\n            <div>\n              {declarations.map(declaration => (\n                <CSSDeclaration\n                  key={declaration}\n                  declaration={declaration}\n                  handleMouseEnter={handleCSSVariableMouseEnter}\n                  handleMouseLeave={handleCSSVariableMouseLeave}\n                />\n              ))}\n            </div>\n          ),\n        }))}\n        itemCount={selectors.length}\n        columns={[\n          {\n            Header: 'Utility Class Name',\n            accessor: 'selector',\n          },\n          {\n            Header: 'Styles',\n            accessor: 'declarations',\n          },\n        ]}\n      >\n        <DataTable.Table />\n      </DataTable>\n      <Overlay\n        show={showPopover}\n        target={popoverTarget}\n        placement=\"top\"\n      >\n        <Popover id=\"css-variable-value-popover\">\n          <Popover.Content>\n            {computedStyle ? colorCSSDeclaration(computedStyle) : 'Computing...'}\n          </Popover.Content>\n        </Popover>\n      </Overlay>\n    </div>\n  );\n}\n\ninterface CSSUtilities {\n  selectors: Array<{\n    selector: string,\n    declarations: Array<string>,\n  }>,\n}\n\nCSSUtilitiesTable.propTypes = {\n  selectors: PropTypes.arrayOf(\n    PropTypes.shape({\n      selector: PropTypes.string,\n      declarations: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n};\n\nCSSUtilitiesTable.defaultProps = {\n  selectors: [],\n};\n\nexport default CSSUtilitiesTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport CodeBlock from '../components/CodeBlock';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\nimport LinkedHeading from '../components/LinkedHeading';\n\nconst shortcodes = {\n  h1: (props: HTMLHeadingElement) => <LinkedHeading h=\"1\" {...props} />,\n  h2: (props: HTMLHeadingElement) => <LinkedHeading h=\"2\" {...props} />,\n  h3: (props: HTMLHeadingElement) => <LinkedHeading h=\"3\" {...props} />,\n  h4: (props: HTMLHeadingElement) => <LinkedHeading h=\"4\" {...props} />,\n  h5: (props: HTMLHeadingElement) => <LinkedHeading h=\"5\" {...props} />,\n  h6: (props: HTMLHeadingElement) => <LinkedHeading h=\"6\" {...props} />,\n  pre: (props:\n  JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> &\n  React.HTMLAttributes<HTMLDivElement>) => <div {...props} />,\n  code: CodeBlock,\n  Link,\n};\n\nexport interface IPageTemplateType {\n  children: React.ReactNode,\n  pageContext: {\n    frontmatter: {\n      title: string,\n    },\n  },\n}\n\nexport default function PageTemplate({ children, pageContext }: IPageTemplateType) {\n  return (\n    <Layout>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title={pageContext?.frontmatter?.title} />\n      <Container size=\"md\" className=\"py-5\">\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  // Require mdx files to define their page title using frontmatter\n  pageContext: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","/**\n * Given the `props` and a `fileName` like `aspect-ratio`, return the array of classes that\n * correspond to that file. This function exists to simplify the Thumbprint Atomic MDX.\n */\nconst getCssSelectors = (nodes: [], regExpStr: RegExp) => {\n  // return Object.keys(props.data, fileName);\n  if (!regExpStr) {\n    return nodes;\n  }\n\n  const regex = RegExp(regExpStr);\n  return nodes.filter((rule: { selector: string; }) => regex.test(rule.selector));\n};\n\nexport default getCssSelectors;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/templates/default-mdx-page-template.tsx\";\nimport { graphql } from 'gatsby';\nimport { Table } from '~paragon-react';\nimport getCssSelectors from '../../utils/getCssSelectors.ts';\nimport CSSUtilitiesTable from '../../components/css-utilities-table';\nexport const pageQuery = graphql`\n{\n  utilities: allCssUtilityClasses(\n    filter: {isUtility: {eq: true}},\n    sort: {fields: selector, order: ASC}\n  ) {\n    nodes {\n      selector\n      declarations\n    }\n  }\n}\n`;\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageQuery,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"css-utilities\"\n    }}>{`CSS Utilities`}<a parentName=\"h1\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#css-utilities\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h1>\n    <h3 {...{\n      \"id\": \"utility-classes\"\n    }}>{`Utility Classes`}<a parentName=\"h3\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#utility-classes\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h3>\n    <p>{`Hover on styles with CSS variables to view computed values.`}</p>\n    <CSSUtilitiesTable selectors={getCssSelectors(props.data.utilities.nodes).concat([{\n      selector: 'w-xs-25',\n      declarations: ['@media(min-width: 0px) { width: 25% !important; }']\n    }, {\n      selector: 'w-xs-50',\n      declarations: ['@media(min-width: 0px) { width: 50% !important; }']\n    }, {\n      selector: 'w-xs-75',\n      declarations: ['@media(min-width: 0px) { width: 75% !important; }']\n    }, {\n      selector: 'w-xs-100',\n      declarations: ['@media(min-width: 0px) { width: 100% !important; }']\n    }, {\n      selector: 'w-xs-auto',\n      declarations: ['@media(min-width: 0px) { width: auto !important; }']\n    }, {\n      selector: 'w-sm-25',\n      declarations: ['@media(min-width: 576px) { width: 25% !important; }']\n    }, {\n      selector: 'w-sm-50',\n      declarations: ['@media(min-width: 576px) { width: 50% !important; }']\n    }, {\n      selector: 'w-sm-75',\n      declarations: ['@media(min-width: 576px) { width: 75% !important; }']\n    }, {\n      selector: 'w-sm-100',\n      declarations: ['@media(min-width: 576px) { width: 100% !important; }']\n    }, {\n      selector: 'w-sm-auto',\n      declarations: ['@media(min-width: 576px) { width: auto !important; }']\n    }, {\n      selector: 'w-md-25',\n      declarations: ['@media(min-width: 768px) { width: 25% !important; }']\n    }, {\n      selector: 'w-md-50',\n      declarations: ['@media(min-width: 768px) { width: 50% !important; }']\n    }, {\n      selector: 'w-md-75',\n      declarations: ['@media(min-width: 768px) { width: 75% !important; }']\n    }, {\n      selector: 'w-md-100',\n      declarations: ['@media(min-width: 768px) { width: 100% !important; }']\n    }, {\n      selector: 'w-md-auto',\n      declarations: ['@media(min-width: 768px) { width: auto !important; }']\n    }, {\n      selector: 'w-lg-25',\n      declarations: ['@media(min-width: 992px) { width: 25% !important; }']\n    }, {\n      selector: 'w-lg-50',\n      declarations: ['@media(min-width: 992px) { width: 50% !important; }']\n    }, {\n      selector: 'w-lg-75',\n      declarations: ['@media(min-width: 992px) { width: 75% !important; }']\n    }, {\n      selector: 'w-lg-100',\n      declarations: ['@media(min-width: 992px) { width: 100% !important; }']\n    }, {\n      selector: 'w-lg-auto',\n      declarations: ['@media(min-width: 992px) { width: auto !important; }']\n    }, {\n      selector: 'w-xl-25',\n      declarations: ['@media(min-width: 1200px) { width: 25% !important; }']\n    }, {\n      selector: 'w-xl-50',\n      declarations: ['@media(min-width: 1200px) { width: 50% !important; }']\n    }, {\n      selector: 'w-xl-75',\n      declarations: ['@media(min-width: 1200px) { width: 75% !important; }']\n    }, {\n      selector: 'w-xl-100',\n      declarations: ['@media(min-width: 1200px) { width: 100% !important; }']\n    }, {\n      selector: 'w-xl-auto',\n      declarations: ['@media(min-width: 1200px) { width: auto !important; }']\n    }])} mdxType=\"CSSUtilitiesTable\" />\n\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["h","children","id","H","className","getInverseColorContrast","color","r","g","b","startsWith","hexColorValue","slice","length","split","map","hex","join","hexColor","Error","match","rgbPart","parseInt","convertHexToRgb","Number","colorCSSDeclaration","value","includes","containsColorValue","item","index","originalArray","key","style","backgroundColor","elementsToCombineCount","val","i","CSSDeclaration","declaration","handleMouseEnter","handleMouseLeave","attribute","importantFlag","containsCSSVariable","fontSize","onMouseEnter","e","onMouseLeave","cursor","textDecoration","trim","CSSUtilitiesTable","selectors","showPopover","setShowPopover","useState","popoverTarget","setPopoverTarget","undefined","computedStyle","setComputedStyle","useEffect","dummyDiv","document","createElement","body","appendChild","removeChild","handleCSSVariableMouseEnter","target","propertyName","getElementById","cssText","computedProperty","getComputedStyle","getPropertyValue","handleCSSVariableMouseLeave","DataTable","data","selector","declarations","itemCount","columns","Header","accessor","Overlay","show","placement","Popover","defaultProps","shortcodes","h1","props","h2","h3","h4","h5","h6","pre","code","CodeBlock","Link","PageTemplate","pageContext","title","frontmatter","size","MDXProvider","components","nodes","regExpStr","regex","RegExp","filter","rule","test","_frontmatter","layoutProps","pageQuery","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","getCssSelectors","utilities","concat","isMDXComponent"],"sourceRoot":""}