{"version":3,"file":"component---src-pages-foundations-design-tokens-mdx-4e4d7446a5defddee507.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/LinkedHeading.tsx","webpack://paragon-pattern-library-documentation/./src/templates/default-mdx-page-template.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/design-tokens.mdx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface ILinkedHeading {\n  h: string,\n  children: React.ReactNode,\n  id: string,\n}\n\ntype HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\nfunction LinkedHeading({\n  h,\n  children,\n  id,\n}: ILinkedHeading) {\n  const H = `h${h}` as HeadingTag;\n\n  return (\n    <H id={id} className=\"pgn-doc__heading\">\n      {children}\n    </H>\n  );\n}\n\nLinkedHeading.propTypes = {\n  h: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default LinkedHeading;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { MDXProvider } from '@mdx-js/react';\nimport { Link } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport CodeBlock from '../components/CodeBlock';\nimport Layout from '../components/PageLayout';\nimport SEO from '../components/SEO';\nimport LinkedHeading from '../components/LinkedHeading';\nimport { SettingsContext } from '../context/SettingsContext';\n\nconst shortcodes = {\n  h1: (props: HTMLHeadingElement) => <LinkedHeading h=\"1\" {...props} />,\n  h2: (props: HTMLHeadingElement) => <LinkedHeading h=\"2\" {...props} />,\n  h3: (props: HTMLHeadingElement) => <LinkedHeading h=\"3\" {...props} />,\n  h4: (props: HTMLHeadingElement) => <LinkedHeading h=\"4\" {...props} />,\n  h5: (props: HTMLHeadingElement) => <LinkedHeading h=\"5\" {...props} />,\n  h6: (props: HTMLHeadingElement) => <LinkedHeading h=\"6\" {...props} />,\n  pre: (props:\n  JSX.IntrinsicAttributes & React.ClassAttributes<HTMLDivElement> &\n  React.HTMLAttributes<HTMLDivElement>) => <div {...props} />,\n  code: CodeBlock,\n  Link,\n};\n\nexport interface IPageTemplateType {\n  children: React.ReactNode,\n  pageContext: {\n    frontmatter: {\n      title: string,\n    },\n    githubEditPath: string,\n  },\n}\n\nexport default function PageTemplate({ children, pageContext }: IPageTemplateType) {\n  const { settings } = useContext(SettingsContext);\n\n  return (\n    <Layout isAutoToc githubEditPath={pageContext.githubEditPath}>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title={pageContext?.frontmatter?.title} />\n      <Container size={settings.containerWidth} className=\"py-5\">\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n      </Container>\n    </Layout>\n  );\n}\n\nPageTemplate.propTypes = {\n  children: PropTypes.node.isRequired,\n  // Require mdx files to define their page title using frontmatter\n  pageContext: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n    githubEditPath: PropTypes.string,\n  }).isRequired,\n};\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/paragon/paragon/www/src/templates/default-mdx-page-template.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"design-tokens\"\n    }}>{`Design Tokens`}<a parentName=\"h1\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#design-tokens\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h1>\n    <p>{`Design tokens are names used to express design decisions in your organisation's design language. Design decisions can be a color, a typeface, a border radius, an icon, a font size, a gradient or even an animation duration.`}</p>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}<a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#description\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h2>\n    <p>{`In Paragon Design Tokens are represented as variables in `}<inlineCode parentName=\"p\">{`JSON`}</inlineCode>{` format organized by the categories.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# color.tokens.json\n{\n  \"color\": {\n    \"white\": { \"value\": \"#FFFFFF\", \"themeable\": true, \"source\": \"$white\" },\n    \"black\": { \"value\": \"#000000\", \"themeable\": true, \"source\": \"$black\" },\n    \"blue\": { \"value\": \"#23419F\", \"themeable\": true, \"source\": \"$blue\" },\n    ...\n  },\n}\n# breakpoints.tokens.json\n{\n  \"breakpoint\": {\n    \"xs\": { \"value\": \"0\", \"themeable\": true },\n    \"sm\": { \"value\": \"576px\", \"themeable\": true },\n    \"md\": { \"value\": \"768px\", \"themeable\": true },\n    \"lg\": { \"value\": \"992px\", \"themeable\": true },\n    \"xl\": { \"value\": \"1200px\", \"themeable\": true },\n    \"xxl\": { \"value\": \"1400px\", \"themeable\": true }\n  },\n}\n`}</code></pre>\n    <p>{`They can be transformed into required format like `}<inlineCode parentName=\"p\">{`css`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`scss`}</inlineCode>{` to use in the application code.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# original json\n{\n  \"color\": {\n    \"white\": { \"value\": \"#FFFFFF\", \"themeable\": true, \"source\": \"$white\" },\n  ...\n  },\n}\n# scss\n$pgn-color-white: #FFFFFF !default;\n# css\n--pgn-color-white: #FFFFFF;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`# original json\n{\n  \"breakpoint\": {\n    ...\n    \"md\": { \"value\": \"768px\", \"themeable\": true },\n    \"lg\": { \"value\": \"992px\", \"themeable\": true },\n    ...\n  },\n}\n# scss\n$pgn-breakpoint-md: 768px !default;\n$pgn-breakpoint-lg: 992px !default;\n# css\n--pgn-breakpoint-md: 768px;\n--pgn-breakpoint-lg: 992px;\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"design-token-types\"\n    }}>{`Design token types`}<a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#design-token-types\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h2>\n    <p>{`All tokens can be of two types: general (global) and specific (component) tokens.`}</p>\n    <h3 {...{\n      \"id\": \"global-tokens\"\n    }}>{`Global tokens`}<a parentName=\"h3\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#global-tokens\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h3>\n    <p>{`Color palette, elevation levels, typography, and dimension values are all global tokens. These can be directly used, and are inherited by component-specific tokens.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"color\": {\n  ...\n  \"black\": { \"value\": \"#000000\", \"themeable\": true, \"source\": \"$black\" },\n  ...\n  \"gray\": {\n    \"100\": { \"value\": \"#EBEBEB\", \"themeable\": true, \"source\": \"$gray-100\" },\n    \"200\": { \"value\": \"#CCCCCC\", \"themeable\": true, \"source\": \"$gray-200\" },\n    \"300\": { \"value\": \"#ADADAD\", \"themeable\": true, \"source\": \"$gray-300\" },\n    \"400\": { \"value\": \"#8F8F8F\", \"themeable\": true, \"source\": \"$gray-400\" },\n    \"500\": { \"value\": \"#707070\", \"themeable\": true, \"source\": \"$gray-500\" },\n    \"600\": { \"value\": \"#5C5C5C\", \"themeable\": true, \"source\": \"$gray-600\" },\n    \"700\": { \"value\": \"#454545\", \"themeable\": true, \"source\": \"$gray-700\" },\n  },\n  ...\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"component-specific-tokens\"\n    }}>{`Component-specific tokens`}<a parentName=\"h3\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#component-specific-tokens\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"pgn-doc__anchor\"\n        }}>{`#`}</span></a></h3>\n    <p>{`Component-specific tokens are a comprehensive representation of each value associated with a component. They are often inherited from global tokens, but are named so that engineering teams can apply the tokens as accurately as possible when developing components.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"alert\": {\n  \"color\": {\n    \"title\": {\n      \"value\": \"{color.black.value}\",\n      \"themeable\": true,\n      \"source\": \"$alert-title-color\"\n    },\n    \"content\": {\n      \"value\": \"{color.gray.700.value}\",\n      \"themeable\": true,\n      \"source\": \"$alert-content-color\"\n     }\n  },\n  ...\n},\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_ref","h","children","id","H","React","className","shortcodes","h1","props","LinkedHeading","Object","assign","h2","h3","h4","h5","h6","pre","code","CodeBlock","Link","PageTemplate","_pageContext$frontmat","pageContext","settings","useContext","SettingsContext","Layout","isAutoToc","githubEditPath","SEO","title","frontmatter","Container","size","containerWidth","MDXProvider","components","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_objectWithoutProperties","_excluded","mdx","mdxType","parentName","isMDXComponent"],"sourceRoot":""}