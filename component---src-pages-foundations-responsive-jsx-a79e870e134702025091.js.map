{"version":3,"file":"component---src-pages-foundations-responsive-jsx-a79e870e134702025091.js","mappings":"2PAOA,MAAMA,EAA0B,CAC9BC,WAAY,CAAEC,KAAM,cAAeC,WAAY,MAC/CC,MAAO,CAAEF,KAAM,QAASC,WAAY,MACpCE,OAAQ,CAAEH,KAAM,SAAUC,WAAY,MACtCG,MAAO,CAAEJ,KAAM,QAASC,WAAY,MACpCI,WAAY,CAAEL,KAAM,cAAeC,WAAY,MAC/CK,gBAAiB,CAAEN,KAAM,oBAAqBC,WAAY,QAK5D,SAASM,EAAcC,GAAU,IAAT,IAAEC,GAAKD,EAC7B,OAAOE,EAAAA,cAAA,YAAOD,EAAIE,OAAOV,WAC3B,CACA,SAASW,EAAYC,GAAU,IAAT,IAAEJ,GAAKI,EAC3B,OAAOH,EAAAA,cAAA,YAAOD,EAAIE,OAAOG,SAAY,GAAEL,EAAIE,OAAOG,aAAe,IACnE,CACA,SAASC,EAAYC,GAAU,IAAT,IAAEP,GAAKO,EAC3B,OAAON,EAAAA,cAAA,YAAOD,EAAIE,OAAOM,SAAY,GAAER,EAAIE,OAAOM,aAAe,IACnE,CAiEA,MAAMC,EAAmB,CACvBT,IAAK,CAAC,GAORF,EAAeY,aAAeD,EAC9BN,EAAaO,aAAeD,EAC5BH,EAAaI,aAAeD,EAE5B,UA3EA,WACE,MAAME,EAAkBC,OAAOC,KAAKC,EAAAA,GAAaC,KAAIC,IACnD,MAAM,SAAEX,EAAQ,SAAEG,GAAaM,EAAAA,EAAYE,GACrCC,EAfwBD,IAAe3B,EAAwB2B,IAAe,CAAC,EAe9DE,CAAyBF,GAGhD,OAFAC,EAAeZ,SAAWA,EAC1BY,EAAeT,SAAWA,EACnBS,CAAc,IAGvB,OACEhB,EAAAA,cAACkB,EAAAA,EAAM,KACLlB,EAAAA,cAACmB,EAAAA,EAAS,CAACC,KAAK,KAAKC,UAAU,QAE7BrB,EAAAA,cAACsB,EAAAA,EAAG,CAACC,MAAM,eACXvB,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,UAAI,yBACJA,EAAAA,cAAA,SAAG,6IAIHA,EAAAA,cAACwB,EAAAA,EAAS,CACRH,UAAU,yBACVI,KAAMf,EACNgB,QAAS,CACP,CAAEC,OAAQ,aAAcC,SAAU,QAClC,CAAED,OAAQ,cAAeC,SAAU,aAAcC,KAAMhC,GACvD,CAAE8B,OAAQ,YAAaC,SAAU,WAAYC,KAAM3B,GACnD,CAAEyB,OAAQ,YAAaC,SAAU,WAAYC,KAAMxB,KAGrDL,EAAAA,cAACwB,EAAAA,EAAAA,MAAe,OAElBxB,EAAAA,cAAA,MAAIqB,UAAU,QAAO,eACrBrB,EAAAA,cAAA,SAAG,uDACmDA,EAAAA,cAAA,YAAM,qBAAwB,cAEpFA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,YAAM,MAAS,gBAE1DA,EAAAA,cAAC8B,EAAAA,EAAS,CAACT,UAAU,iBAClB,uFAEHrB,EAAAA,cAAA,SAAG,yCACqCA,EAAAA,cAAA,YAAM,MAAS,gBAEvDA,EAAAA,cAAC8B,EAAAA,EAAS,CAACT,UAAU,iBAClB,sFAKX,C","sources":["webpack://paragon-pattern-library-documentation/./src/pages/foundations/responsive.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DataTable, Container, breakpoints } from '~paragon-react';\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport CodeBlock from '../../components/CodeBlock';\n\nconst BREAKPOINT_DESCRIPTIONS = {\n  extraSmall: { name: 'Extra small', identifier: 'xs' },\n  small: { name: 'Small', identifier: 'xs' },\n  medium: { name: 'Medium', identifier: 'md' },\n  large: { name: 'Large', identifier: 'lg' },\n  extraLarge: { name: 'Extra large', identifier: 'xl' },\n  extraExtraLarge: { name: 'Extra extra large', identifier: 'xxl' },\n};\n\nconst getBreakpointDescription = (breakpoint) => BREAKPOINT_DESCRIPTIONS[breakpoint] || {};\n\nfunction IdentifierCell({ row }) {\n  return <code>{row.values.identifier}</code>;\n}\nfunction MinWidthCell({ row }) {\n  return <code>{row.values.minWidth ? `${row.values.minWidth}px` : '-'}</code>;\n}\nfunction MaxWidthCell({ row }) {\n  return <code>{row.values.maxWidth ? `${row.values.maxWidth}px` : '-'}</code>;\n}\n\nfunction Responsive() {\n  const breakpointsData = Object.keys(breakpoints).map(breakpoint => {\n    const { minWidth, maxWidth } = breakpoints[breakpoint];\n    const breakpointData = getBreakpointDescription(breakpoint);\n    breakpointData.minWidth = minWidth;\n    breakpointData.maxWidth = maxWidth;\n    return breakpointData;\n  });\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Responsive\" />\n        <h1>Responsive</h1>\n        <h2>Available breakpoints</h2>\n        <p>\n          Define the minimum and maximum dimensions at which your layout will change,\n          adapting to different screen sizes, for use in media queries.\n        </p>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={breakpointsData}\n          columns={[\n            { Header: 'Breakpoint', accessor: 'name' },\n            { Header: 'Class infix', accessor: 'identifier', Cell: IdentifierCell },\n            { Header: 'Min width', accessor: 'minWidth', Cell: MinWidthCell },\n            { Header: 'Max Width', accessor: 'maxWidth', Cell: MaxWidthCell },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h2 className=\"mt-3\">Basic usage</h2>\n        <p>\n          To access or change the breakpoints in the scss use <code>$grid-breakpoints</code> variable.\n        </p>\n        <p>\n          Example when the screen is narrower than <code>md</code> breakpoint.\n        </p>\n        <CodeBlock className=\"language-scss\">\n          {'@include media-breakpoint-down(map-get($grid-breakpoints, \\'md\\')) { // styles here }'}\n        </CodeBlock>\n        <p>\n          Example when the screen is wider than <code>lg</code> breakpoint.\n        </p>\n        <CodeBlock className=\"language-scss\">\n          {'@include media-breakpoint-up(map-get($grid-breakpoints, \\'lg\\')) { // styles here }'}\n        </CodeBlock>\n      </Container>\n    </Layout>\n  );\n}\n\nconst cellPropTypes = {\n  row: PropTypes.shape({\n    values: PropTypes.shape({\n      identifier: PropTypes.string,\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n    }),\n  }),\n};\n\nconst cellDefaultProps = {\n  row: {},\n};\n\nIdentifierCell.propTypes = cellPropTypes;\nMinWidthCell.propTypes = cellPropTypes;\nMaxWidthCell.propTypes = cellPropTypes;\n\nIdentifierCell.defaultProps = cellDefaultProps;\nMinWidthCell.defaultProps = cellDefaultProps;\nMaxWidthCell.defaultProps = cellDefaultProps;\n\nexport default Responsive;\n"],"names":["BREAKPOINT_DESCRIPTIONS","extraSmall","name","identifier","small","medium","large","extraLarge","extraExtraLarge","IdentifierCell","_ref","row","React","values","MinWidthCell","_ref2","minWidth","MaxWidthCell","_ref3","maxWidth","cellDefaultProps","defaultProps","breakpointsData","Object","keys","breakpoints","map","breakpoint","breakpointData","getBreakpointDescription","Layout","Container","size","className","SEO","title","DataTable","data","columns","Header","accessor","Cell","CodeBlock"],"sourceRoot":""}