{"version":3,"file":"component---src-pages-foundations-spacing-tsx-11d6d815cf3829ab3f48.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/ComponentsList.tsx","webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/components/Settings.tsx","webpack://paragon-pattern-library-documentation/./src/components/Toc.tsx","webpack://paragon-pattern-library-documentation/./src/components/PageLayout.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/spacing.tsx","webpack://paragon-pattern-library-documentation/./src/config.js","webpack://paragon-pattern-library-documentation/./src/utils/hasFeatureFlagEnabled.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport { ComponentNavItem, IComponentNavItem } from './Menu';\n\nconst componentsQuery = graphql`\n  query componentsQuery {\n    components: allMdx(\n      filter: {\n        parent: {\n          internal: { owner: { nin: \"gatsby-transformer-react-docgen\" } }\n        }\n        frontmatter: { type: {} }\n      }\n      sort: { fields: frontmatter___title }\n    ) {\n      all: nodes {\n        ...ComponentPage\n      }\n    }\n  }\n\n  fragment ComponentPage on Mdx {\n    id\n    frontmatter {\n      categories\n      type\n      title\n      status\n    }\n    fields {\n      slug\n    }\n  }\n`;\n\nfunction ComponentsList() {\n  const { components } = useStaticQuery(componentsQuery);\n  const { all } = components;\n\n  return (\n    <Container className=\"py-3 bg-light-200 border-top border-light-300\">\n      <Container size=\"xl\" className=\"py-5\">\n        <div className=\"pgn-doc__menu-all-components pt-5\">\n          <h3 className=\"mb-4\">All components (A-Z)</h3>\n          <ul className=\"pgn-doc__menu-component-list list-unstyled small mb-4\">\n            {all.map((node: IComponentNavItem) => <ComponentNavItem key={node.id} {...node} />)}\n          </ul>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nexport default ComponentsList;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nfunction MeasuredItem({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) {\n  const { settings } = useContext(SettingsContext);\n  const { theme } = settings;\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Sheet,\n  Form,\n  Icon,\n  IconButton,\n  Stack,\n  Nav,\n} from '~paragon-react';\nimport { Close } from '~paragon-icons';\n\nimport { Link } from 'gatsby';\nimport { LANGUAGES } from '../config';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface ISetting {\n  showMinimizedTitle?: boolean,\n}\n\nfunction Settings({ showMinimizedTitle }: ISetting) {\n  const {\n    settings,\n    handleSettingsChange,\n    showSettings,\n    closeSettings,\n  } = useContext(SettingsContext);\n\n  return (\n    <Sheet\n      position=\"right\"\n      show={showSettings}\n      variant=\"light\"\n      onClose={closeSettings}\n    >\n      <div className=\"pgn-doc__settings\">\n        <div className=\"pgn-doc__settings-title\">\n          <h3 className=\"mb-0\">Settings</h3>\n          <IconButton\n            src={Close}\n            iconAs={Icon}\n            alt=\"Close settings\"\n            onClick={closeSettings}\n            size=\"sm\"\n          />\n        </div>\n        <Stack gap={1}>\n          <Form.Group className=\"pgn-doc__settings-direction\">\n            <Form.Label className=\"pgn-doc__settings-label\">Text direction</Form.Label>\n            <Form.RadioSet\n              name=\"direction\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('direction', e.target.value)}\n              value={settings.direction}\n            >\n              <Form.Radio value=\"ltr\">Left to right</Form.Radio>\n              <Form.Radio value=\"rtl\">Right to left</Form.Radio>\n            </Form.RadioSet>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"pgn-doc__settings-label\">Language</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={settings.language}\n              onChange={(e: { target: { value: string; }; }) => handleSettingsChange('language', e.target.value)}\n            >\n              {LANGUAGES.map(lang => (\n                <option\n                  key={lang.code}\n                  value={lang.code}\n                >\n                  {lang.label}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          {!showMinimizedTitle && (\n            <Form.Group>\n              <Form.Label className=\"pgn-doc__settings-label\">Container Width</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={settings.containerWidth}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('containerWidth', e.target.value)}\n              >\n                <option value=\"xs\">xs</option>\n                <option value=\"sm\">sm</option>\n                <option value=\"md\">md (default)</option>\n                <option value=\"lg\">lg</option>\n                <option value=\"xl\">xl</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          <Nav className=\"pgn-doc__settings-nav--items\">\n            <Nav.Item>\n              <Link className=\"nav-link\" to=\"/changelog\">\n                Changelog\n              </Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"https://github.com/openedx/paragon\">\n                GitHub\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Stack>\n      </div>\n    </Sheet>\n  );\n}\n\nSettings.propTypes = {\n  showMinimizedTitle: PropTypes.bool,\n};\n\nSettings.defaultProps = {\n  showMinimizedTitle: false,\n};\n\nexport default Settings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Sticky } from '~paragon-react';\n\ninterface IItems {\n  url?: string,\n  title?: string,\n  items?: Array<IItems>,\n}\n\nexport interface IToc {\n  data: {\n    items?: Array<IItems>\n  },\n  className?: string,\n}\n\nfunction Toc({ data, className }: IToc) {\n  const [active, setActive] = useState('');\n  const observer = useRef<IntersectionObserver>();\n\n  useEffect(() => {\n    const handleObserver = (entries: IntersectionObserverEntry[]) => {\n      if (entries[0].intersectionRatio >= 0.5) {\n        setActive(entries[0].target.id);\n      }\n    };\n\n    observer.current = new IntersectionObserver(handleObserver, { rootMargin: '-50px 0px -80% 0px', threshold: 0.5 });\n    const elements = document.querySelectorAll('main h2, main h3, main h4, main h5, main h6');\n    elements.forEach((elem) => observer.current?.observe(elem));\n\n    return () => observer.current?.disconnect();\n  }, [data]);\n\n  const generateTree = (headings: { items?: Array<IItems> }) => (headings?.items?.length\n    ? (\n      <ul className=\"pgn-doc__toc-list\">\n        {headings.items.map(heading => (\n          <li key={heading.url}>\n            <a\n              href={heading.url}\n              className={classNames({ active: `#${active}` === heading.url })}\n            >\n              {heading.title}\n            </a>\n            {!!heading.items && generateTree(heading)}\n          </li>\n        ))}\n      </ul>\n    ) : null);\n\n  const tocTree = generateTree(data);\n\n  return tocTree ? (\n    <Sticky\n      offset={6}\n      className={classNames('pgn-doc__toc', className)}\n    >\n      <p className=\"pgn-doc__toc-header\">Contents</p>\n      {tocTree}\n    </Sticky>\n  ) : null;\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nToc.propTypes = {\n  data: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nToc.defaultProps = {\n  className: undefined,\n};\n\nexport default Toc;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport {\n  Container,\n  Nav,\n  Row,\n  Col,\n  Sticky,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport ComponentsList from './ComponentsList';\nimport Header from './header';\nimport Menu from './Menu';\nimport Settings from './Settings';\nimport Toc from './Toc';\nimport { SettingsContext } from '../context/SettingsContext';\n\nif (process.env.NODE_ENV === 'development') {\n  /* eslint-disable-next-line global-require */\n  require('~paragon-style/core/core.scss');\n}\n\nexport interface ILayout {\n  children: React.ReactNode,\n  showMinimizedTitle: boolean,\n  hideFooterComponentMenu: boolean,\n  isMdx: boolean,\n  tocData: Array<number>,\n}\n\nfunction Layout({\n  children,\n  showMinimizedTitle,\n  hideFooterComponentMenu,\n  isMdx,\n  tocData,\n}: ILayout) {\n  const isMobile = useMediaQuery({ maxWidth: breakpoints.extraLarge.minWidth });\n  const { settings } = useContext(SettingsContext);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title || 'Title'}\n        showMinimizedTitle={isMobile || showMinimizedTitle}\n      />\n      <Settings showMinimizedTitle={showMinimizedTitle} />\n      {isMdx || !hideFooterComponentMenu ? (\n        <Container fluid>\n          <Row className=\"flex-xl-nowrap\">\n            <Col className=\"d-none d-xl-block p-0\" xl={settings.containerWidth === 'xl' ? 'auto' : 2}>\n              <Sticky offset={6} className=\"pgn-doc__toc p-0 pt-3\">\n                <Menu />\n              </Sticky>\n            </Col>\n            <Col\n              xl={settings.containerWidth === 'xl' ? 10 : 8}\n              lg={9}\n              md={12}\n              as=\"main\"\n              className=\"flex-grow-1\"\n            >\n              {children}\n            </Col>\n            <Col\n              xl={2}\n              lg={3}\n              as={Toc}\n              data={tocData}\n              className=\"d-none d-lg-block\"\n            />\n          </Row>\n        </Container>\n      ) : (\n        <main className=\"flex-grow-1\">\n          {children}\n        </main>\n      )}\n      {!hideFooterComponentMenu && <ComponentsList />}\n      <Container as=\"footer\" className=\"py-3 border-top border-light-300\">\n        <Nav className=\"d-flex align-items-center\">\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/status\">\n              Library status\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/insights\">\n              Usage insights\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              className=\"muted-link\"\n              href=\"https://github.com/openedx/.github/blob/master/CODE_OF_CONDUCT.md\"\n            >\n              Code of Conduct\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link className=\"muted-link\" href=\"https://open.edx.org/\">\n              Open edX\n            </Nav.Link>\n          </Nav.Item>\n          <div className=\"flex-grow-1\" />\n          <a href=\"https://www.netlify.com\">\n            <img\n              src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\"\n              alt=\"Deploys by Netlify\"\n            />\n          </a>\n        </Nav>\n      </Container>\n    </div>\n  );\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  tocData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }),\n  showMinimizedTitle: PropTypes.bool,\n  hideFooterComponentMenu: PropTypes.bool,\n  isMdx: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  tocData: {},\n  showMinimizedTitle: false,\n  hideFooterComponentMenu: false,\n  isMdx: false,\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Form, Container, DataTable } from '~paragon-react';\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport MeasuredItem from '../../components/MeasuredItem';\n\nconst directions = [\n  { key: '', name: 'all' },\n  { key: 't', name: 'top' },\n  { key: 'r', name: 'right' },\n  { key: 'b', name: 'bottom' },\n  { key: 'l', name: 'left' },\n  { key: 'x', name: 'x direction' },\n  { key: 'y', name: 'y direction' },\n];\n\nconst spacerValues = [0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6];\nconst sizes = [...spacerValues.slice(1).reverse(), ...spacerValues.map(value => -value)];\n\nconst getUtilityClassName = (\n  prefix: string,\n  direction: string,\n  size: number,\n) => `${prefix}${direction}-${size < 0 ? 'n' : ''}${Math.abs(size)}`;\n\nexport type PixelCellTypes = {\n  spacer: number,\n};\n\nfunction PixelCell({ spacer }: PixelCellTypes) {\n  return (\n    <MeasuredItem\n      properties={['margin']}\n      renderAfter={(measurements: { margin: number }) => (\n        <code>\n          {measurements.margin}\n        </code>\n      )}\n    >\n      <div\n        style={{ display: 'none' }}\n        className={`m-${spacer}`}\n      />\n    </MeasuredItem>\n  );\n}\n\nPixelCell.propTypes = {\n  spacer: PropTypes.number.isRequired,\n};\n\nexport type SpaceBlockTypes = {\n  utilityClass: string,\n};\n\nfunction SpaceBlock({ utilityClass }: SpaceBlockTypes) {\n  return (\n    <code\n      className={classNames(utilityClass)}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '5rem',\n        textAlign: 'center',\n        width: '10rem',\n        background: 'rgba(0,0,0,.1)',\n      }}\n    >\n      {utilityClass ? `.${utilityClass}` : null}\n    </code>\n  );\n}\n\nSpaceBlock.propTypes = {\n  utilityClass: PropTypes.string,\n};\n\nSpaceBlock.defaultProps = {\n  utilityClass: '',\n};\n\nexport default function SpacingPage() {\n  const [size, setSize] = useState<number>(3);\n  const [direction, setDirection] = useState<string>('r');\n\n  const utilityClassName = getUtilityClassName('m', direction, size);\n\n  const spacerValuesTableData = spacerValues.map(value => ({\n    spacer: value,\n    pixelValue: <PixelCell spacer={value} />,\n  }));\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Spacing\" />\n        <h1>Spacing</h1>\n        <h2>Spacing according to pixels</h2>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={spacerValuesTableData}\n          columns={[\n            { Header: 'Spacer value', accessor: 'spacer' },\n            { Header: 'Pixel value', accessor: 'pixelValue' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h3 className=\"mt-3\">Margin</h3>\n        <p>\n          Margin utilities are structured as{' '}\n          <code>{'.m{direction}-{level}'}</code>. Negative numbers are\n          represented as <code>n1</code>, <code>n2</code>, <code>n3</code>, etc.\n          Choose a direction and spacing level to change the margin applied to\n          the center block below.\n        </p>\n        <div className=\"border p-4\">\n          <div className=\"d-flex flex-column align-items-center\">\n            <h4>Direction</h4>\n            <div className=\"d-flex flex-wrap mt-2\">\n              {directions.map(({ key, name }) => (\n                <Form.Radio\n                  key={key}\n                  className=\"mx-2 mb-3\"\n                  name=\"direction\"\n                  value={key}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDirection(e.target.value)}\n                >\n                  {name}\n                </Form.Radio>\n              ))}\n            </div>\n            <Form.Group>\n              <Form.Label className=\"d-block\">\n                <span className=\"d-block text-center\">Spacing Level: {size}</span>\n              </Form.Label>\n              <div\n                className=\"d-flex align-items-center\"\n                style={{ maxWidth: '20rem' }}\n              >\n                -6\n                <Form.Control\n                  className=\"mx-2\"\n                  type=\"range\"\n                  min={-6}\n                  step={0.5}\n                  max={6}\n                  value={size}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSize(parseInt(e.target.value, 10))}\n                />\n                6\n              </div>\n            </Form.Group>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n            <div className=\"border border-danger  p-0\" style={{}}>\n              <SpaceBlock utilityClass={utilityClassName} />\n            </div>\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n        </div>\n        <h3>Padding</h3>\n        <p>\n          Padding utilities are structured the same way:{' '}\n          <code>{'.p{direction}-{level}'}</code>.\n        </p>\n\n        <h3>All Spacing Utility Classes</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>All directions</th>\n              <th>Top</th>\n              <th>Right</th>\n              <th>Bottom</th>\n              <th>Left</th>\n              <th>X Direction</th>\n              <th>Y Direction</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th colSpan={7}>Margin</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('m', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n            <tr>\n              <th colSpan={7}>Padding</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('p', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n","/* eslint-disable */\nconst hasFeatureFlagEnabled = require('./utils/hasFeatureFlagEnabled');\n/* eslint-enable */\n\n// Feature flags used throughout the site should be configured here.\n// You should generally allow two ways of enabling a feature flag:\n// 1. Through environment variables which will enable a feature flag at build time\n//    without a way of disabling it, to do so during local development edit the\n//    .env.development file located at the root of docs site project (note that\n//    you will need to restart development server for the changes to take effect).\n//    See DIRECTION_SWITCHER feature for example of configuring feature flags this way.\n// 2. As a query parameter in the URL, using`hasFeatureFlagEnabled` util function.\n//    This will allow to enable feature flag by providing its name as a feature?\n//    query parameter in the URL. (e.g. to enable LANGUAGE_SWITCHER feature you would append\n//    '?feature=LANGUAGE_SWITCHER' to the URL)\nconst FEATURES = {};\n\nconst LANGUAGES = [\n  {\n    label: 'English',\n    code: 'en',\n  },\n  {\n    label: 'Arabic',\n    code: 'ar',\n  },\n  {\n    label: 'Catalan',\n    code: 'ca',\n  },\n  {\n    label: 'Chinese',\n    code: 'zh-cn',\n  },\n  {\n    label: 'French',\n    code: 'fr',\n  },\n  {\n    label: 'Hebrew',\n    code: 'he',\n  },\n  {\n    label: 'Indonesian',\n    code: 'id',\n  },\n  {\n    label: 'Italian (Italy)',\n    code: 'it-it',\n  },\n  {\n    label: 'Polish',\n    code: 'pl',\n  },\n  // {\n  //   label: 'Portuguese (Brazil)',\n  //   code: 'pt-br',\n  // },\n  {\n    label: 'Portuguese (Portugal)',\n    code: 'pt-pt',\n  },\n  {\n    label: 'Russian',\n    code: 'ru',\n  },\n  {\n    label: 'Spanish',\n    code: 'es-419',\n  },\n  {\n    label: 'Spanish (Argentina)',\n    code: 'es-ar',\n  },\n  {\n    label: 'Spanish (Spain)',\n    code: 'es-es',\n  },\n  {\n    label: 'Thai',\n    code: 'th',\n  },\n  {\n    label: 'Ukrainian',\n    code: 'uk',\n  },\n  // {\n  //   label: 'Korean',\n  //   code: 'ko-kr',\n  // },\n  {\n    label: 'Turkish (Turkey)',\n    code: 'tr-tr',\n  },\n];\n\nconst INSIGHTS_TABS = Object.freeze({\n  SUMMARY: 'Summary',\n  PROJECTS: 'Projects',\n  COMPONENTS: 'Components',\n  HOOKS: 'Hooks',\n  UTILS: 'Utils',\n  ICONS: 'Icons',\n});\n\nconst INSIGHTS_PAGES = [\n  {\n    tab: INSIGHTS_TABS.SUMMARY,\n    path: '/insights',\n  },\n  {\n    tab: INSIGHTS_TABS.PROJECTS,\n    path: '/insights/projects',\n  },\n  {\n    tab: INSIGHTS_TABS.COMPONENTS,\n    path: '/insights/components',\n  },\n  {\n    tab: INSIGHTS_TABS.HOOKS,\n    path: '/insights/hooks',\n  },\n  {\n    tab: INSIGHTS_TABS.UTILS,\n    path: '/insights/utils',\n  },\n  {\n    tab: INSIGHTS_TABS.ICONS,\n    path: '/insights/icons',\n  },\n];\n\nmodule.exports = {\n  INSIGHTS_TABS,\n  INSIGHTS_PAGES,\n  FEATURES,\n  LANGUAGES,\n};\n","/**\n * Determines whether a specified feature flag is enabled.\n *\n * @param {string} featureFlag\n * @returns true if feature flag is in `?feature` query parameter\n */\nfunction hasFeatureFlagEnabled(featureFlag) {\n  const { location } = global;\n  if (!location) {\n    return false;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  const features = searchParams.getAll('feature');\n  return features.includes(featureFlag);\n}\n\nmodule.exports = hasFeatureFlagEnabled;\n"],"names":["components","useStaticQuery","all","React","Container","className","size","map","node","ComponentNavItem","Object","assign","key","id","initialMeasurements","MeasuredItem","_ref","properties","renderBefore","renderAfter","children","settings","useContext","SettingsContext","theme","measurements","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","measure","current","computedStyle","getComputedStyle","measurementsItems","reduce","acc","property","getPropertyValue","clearTimeout","ref","defaultProps","undefined","Settings","showMinimizedTitle","handleSettingsChange","showSettings","closeSettings","Sheet","position","show","variant","onClose","IconButton","src","Close","iconAs","Icon","alt","onClick","Stack","gap","Form","name","onChange","e","target","value","direction","as","language","LANGUAGES","lang","code","label","containerWidth","Nav","Link","to","href","Toc","data","active","setActive","observer","IntersectionObserver","entries","intersectionRatio","rootMargin","threshold","document","querySelectorAll","forEach","elem","_observer$current","observe","_observer$current2","disconnect","generateTree","headings","_headings$items","items","length","heading","url","classNames","title","tocTree","Sticky","offset","itemsShape","PropTypes","Layout","_data$site$siteMetada","hideFooterComponentMenu","isMdx","tocData","isMobile","useMediaQuery","maxWidth","breakpoints","Header","siteTitle","site","siteMetadata","fluid","Row","Col","xl","Menu","lg","md","ComponentsList","directions","spacerValues","sizes","concat","_toConsumableArray","slice","reverse","getUtilityClassName","prefix","Math","abs","PixelCell","spacer","margin","style","display","SpaceBlock","_ref2","utilityClass","alignItems","justifyContent","height","textAlign","width","background","SpacingPage","setSize","setDirection","utilityClassName","spacerValuesTableData","pixelValue","SEO","DataTable","columns","accessor","_ref3","type","min","step","max","parseInt","colSpan","_ref4","_size","_ref5","require","INSIGHTS_TABS","freeze","SUMMARY","PROJECTS","COMPONENTS","HOOKS","UTILS","ICONS","INSIGHTS_PAGES","tab","path","module","exports","FEATURES","featureFlag","location","global","URLSearchParams","search","getAll","includes"],"sourceRoot":""}