{"version":3,"file":"component---src-pages-foundations-spacing-tsx-3c4f714c78b7a2c31011.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/spacing.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nfunction MeasuredItem({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) {\n  const { settings } = useContext(SettingsContext);\n  const { theme } = settings;\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Form, DataTable, Container } from '~paragon-react'; // eslint-disable-line\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport MeasuredItem from '../../components/MeasuredItem';\nimport { SettingsContext } from '../../context/SettingsContext';\n\nconst directions = [\n  { key: '', name: 'all' },\n  { key: 't', name: 'top' },\n  { key: 'r', name: 'right' },\n  { key: 'b', name: 'bottom' },\n  { key: 'l', name: 'left' },\n  { key: 'x', name: 'x direction' },\n  { key: 'y', name: 'y direction' },\n];\n\nconst spacerValues = [0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6];\nconst sizes = [...spacerValues.slice(1).reverse(), ...spacerValues.map(value => -value)];\n\nconst getUtilityClassName = (\n  prefix: string,\n  direction: string,\n  size: number,\n) => `${prefix}${direction}-${size < 0 ? 'n' : ''}${Math.abs(size)}`;\n\nexport type PixelCellTypes = {\n  spacer: number,\n};\n\nfunction PixelCell({ spacer }: PixelCellTypes) {\n  return (\n    <MeasuredItem\n      properties={['margin']}\n      renderAfter={(measurements: { margin: number }) => (\n        <code>\n          {measurements.margin}\n        </code>\n      )}\n    >\n      <div\n        style={{ display: 'none' }}\n        className={`m-${spacer}`}\n      />\n    </MeasuredItem>\n  );\n}\n\nPixelCell.propTypes = {\n  spacer: PropTypes.number.isRequired,\n};\n\nexport type SpaceBlockTypes = {\n  utilityClass: string,\n};\n\nfunction SpaceBlock({ utilityClass }: SpaceBlockTypes) {\n  return (\n    <code\n      className={classNames(utilityClass)}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '5rem',\n        textAlign: 'center',\n        width: '10rem',\n        background: 'rgba(0,0,0,.1)',\n      }}\n    >\n      {utilityClass ? `.${utilityClass}` : null}\n    </code>\n  );\n}\n\nSpaceBlock.propTypes = {\n  utilityClass: PropTypes.string,\n};\n\nSpaceBlock.defaultProps = {\n  utilityClass: '',\n};\n\nexport default function SpacingPage() {\n  const { settings } = useContext(SettingsContext);\n  const [size, setSize] = useState<number>(3);\n  const [direction, setDirection] = useState<string>('r');\n\n  const utilityClassName = getUtilityClassName('m', direction, size);\n\n  const spacerValuesTableData = spacerValues.map(value => ({\n    spacer: value,\n    pixelValue: <PixelCell spacer={value} />,\n  }));\n\n  const createUtilityClassesTabel = (prefix) => sizes.map(el => {\n    const rowData = {};\n\n    directions.forEach(({ key, name }) => {\n      rowData[name] = <code>.{getUtilityClassName(prefix, key, el)}</code>;\n    });\n\n    return rowData;\n  });\n\n  return (\n    <Layout isAutoToc>\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <SEO title=\"Spacing\" />\n      <Container size={settings.containerWidth} className=\"py-5\">\n        <h1>Spacing</h1>\n        <h2>Spacing according to pixels</h2>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={spacerValuesTableData}\n          columns={[\n            { Header: 'Spacer value', accessor: 'spacer' },\n            { Header: 'Pixel value', accessor: 'pixelValue' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h3 className=\"mt-3\">Margin</h3>\n        <p>\n          Margin utilities are structured as{' '}\n          <code>{'.m{direction}-{level}'}</code>. Negative numbers are\n          represented as <code>n1</code>, <code>n2</code>, <code>n3</code>, etc.\n          Choose a direction and spacing level to change the margin applied to\n          the center block below.\n        </p>\n        <div className=\"border p-4\">\n          <div className=\"d-flex flex-column align-items-center\">\n            <Form.Group className=\"d-flex flex-column align-items-center\">\n              <Form.Label className=\"font-weight-bolder\">Direction</Form.Label>\n              <Form.RadioSet\n                name=\"direction-selector\"\n                value={direction}\n                isInline\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDirection(e.target.value)}\n              >\n                {directions.map(({ key, name }) => (\n                  <Form.Radio\n                    id={`set-direction-${key}`}\n                    key={key}\n                    className=\"mt-0\"\n                    value={key}\n                  >\n                    {name}\n                  </Form.Radio>\n                ))}\n              </Form.RadioSet>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label className=\"d-block\">\n                <span className=\"d-block text-center\">Spacing Level: {size}</span>\n              </Form.Label>\n              <div\n                className=\"d-flex align-items-center mt-1\"\n                style={{ maxWidth: '20rem' }}\n              >\n                -6\n                <Form.Control\n                  type=\"range\"\n                  id=\"set-size\"\n                  className=\"mx-2\"\n                  min={-6}\n                  step={0.5}\n                  max={6}\n                  value={size}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSize(parseInt(e.target.value, 10))}\n                />\n                6\n              </div>\n            </Form.Group>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n            <div className=\"border border-danger  p-0\" style={{}}>\n              <SpaceBlock utilityClass={utilityClassName} />\n            </div>\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n        </div>\n        <h3>Padding</h3>\n        <p>\n          Padding utilities are structured the same way:{' '}\n          <code>{'.p{direction}-{level}'}</code>.\n        </p>\n\n        <h3 className=\"mt-4\">All Spacing Utility Classes</h3>\n\n        <h4 className=\"mt-3\">Margin</h4>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={createUtilityClassesTabel('m')}\n          columns={[\n            { Header: 'All directions', accessor: 'all' },\n            { Header: 'Top', accessor: 'top' },\n            { Header: 'Right', accessor: 'right' },\n            { Header: 'Bottom', accessor: 'bottom' },\n            { Header: 'Left', accessor: 'left' },\n            { Header: 'X Direction', accessor: 'x direction' },\n            { Header: 'Y Direction', accessor: 'y direction' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h4 className=\"mt-3\">Padding</h4>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={createUtilityClassesTabel('p')}\n          columns={[\n            { Header: 'All directions', accessor: 'all' },\n            { Header: 'Top', accessor: 'top' },\n            { Header: 'Right', accessor: 'right' },\n            { Header: 'Bottom', accessor: 'bottom' },\n            { Header: 'Left', accessor: 'left' },\n            { Header: 'X Direction', accessor: 'x direction' },\n            { Header: 'Y Direction', accessor: 'y direction' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["initialMeasurements","MeasuredItem","_ref","properties","renderBefore","renderAfter","children","settings","useContext","SettingsContext","theme","measurements","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","measure","current","computedStyle","getComputedStyle","measurementsItems","reduce","acc","property","getPropertyValue","clearTimeout","React","ref","defaultProps","undefined","directions","key","name","spacerValues","sizes","concat","_toConsumableArray","slice","reverse","map","value","getUtilityClassName","prefix","direction","size","Math","abs","PixelCell","spacer","margin","style","display","className","SpaceBlock","_ref2","utilityClass","classNames","alignItems","justifyContent","height","textAlign","width","background","SpacingPage","setSize","setDirection","utilityClassName","spacerValuesTableData","pixelValue","createUtilityClassesTabel","el","rowData","forEach","_ref3","Layout","isAutoToc","SEO","title","Container","containerWidth","DataTable","data","columns","Header","accessor","Form","isInline","onChange","e","target","_ref4","id","maxWidth","type","min","step","max","parseInt"],"sourceRoot":""}