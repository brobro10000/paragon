{"version":3,"file":"component---src-pages-foundations-spacing-tsx-af4654e41b67e06c1130.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/spacing.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nfunction MeasuredItem({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) {\n  const { settings } = useContext(SettingsContext);\n  const { theme } = settings;\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Form, Container, DataTable } from '~paragon-react';\nimport SEO from '../../components/SEO';\nimport Layout from '../../components/PageLayout';\nimport MeasuredItem from '../../components/MeasuredItem';\n\nconst directions = [\n  { key: '', name: 'all' },\n  { key: 't', name: 'top' },\n  { key: 'r', name: 'right' },\n  { key: 'b', name: 'bottom' },\n  { key: 'l', name: 'left' },\n  { key: 'x', name: 'x direction' },\n  { key: 'y', name: 'y direction' },\n];\n\nconst spacerValues = [0, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6];\nconst sizes = [...spacerValues.slice(1).reverse(), ...spacerValues.map(value => -value)];\n\nconst getUtilityClassName = (\n  prefix: string,\n  direction: string,\n  size: number,\n) => `${prefix}${direction}-${size < 0 ? 'n' : ''}${Math.abs(size)}`;\n\nexport type PixelCellTypes = {\n  spacer: number,\n};\n\nfunction PixelCell({ spacer }: PixelCellTypes) {\n  return (\n    <MeasuredItem\n      properties={['margin']}\n      renderAfter={(measurements: { margin: number }) => (\n        <code>\n          {measurements.margin}\n        </code>\n      )}\n    >\n      <div\n        style={{ display: 'none' }}\n        className={`m-${spacer}`}\n      />\n    </MeasuredItem>\n  );\n}\n\nPixelCell.propTypes = {\n  spacer: PropTypes.number.isRequired,\n};\n\nexport type SpaceBlockTypes = {\n  utilityClass: string,\n};\n\nfunction SpaceBlock({ utilityClass }: SpaceBlockTypes) {\n  return (\n    <code\n      className={classNames(utilityClass)}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '5rem',\n        textAlign: 'center',\n        width: '10rem',\n        background: 'rgba(0,0,0,.1)',\n      }}\n    >\n      {utilityClass ? `.${utilityClass}` : null}\n    </code>\n  );\n}\n\nSpaceBlock.propTypes = {\n  utilityClass: PropTypes.string,\n};\n\nSpaceBlock.defaultProps = {\n  utilityClass: '',\n};\n\nexport default function SpacingPage() {\n  const [size, setSize] = useState<number>(3);\n  const [direction, setDirection] = useState<string>('r');\n\n  const utilityClassName = getUtilityClassName('m', direction, size);\n\n  const spacerValuesTableData = spacerValues.map(value => ({\n    spacer: value,\n    pixelValue: <PixelCell spacer={value} />,\n  }));\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Spacing\" />\n        <h1>Spacing</h1>\n        <h2>Spacing according to pixels</h2>\n        <DataTable\n          className=\"pgn-doc__spacing-table\"\n          data={spacerValuesTableData}\n          columns={[\n            { Header: 'Spacer value', accessor: 'spacer' },\n            { Header: 'Pixel value', accessor: 'pixelValue' },\n          ]}\n        >\n          <DataTable.Table />\n        </DataTable>\n        <h3 className=\"mt-3\">Margin</h3>\n        <p>\n          Margin utilities are structured as{' '}\n          <code>{'.m{direction}-{level}'}</code>. Negative numbers are\n          represented as <code>n1</code>, <code>n2</code>, <code>n3</code>, etc.\n          Choose a direction and spacing level to change the margin applied to\n          the center block below.\n        </p>\n        <div className=\"border p-4\">\n          <div className=\"d-flex flex-column align-items-center\">\n            <h4>Direction</h4>\n            <div className=\"d-flex flex-wrap mt-2\">\n              {directions.map(({ key, name }) => (\n                <Form.Radio\n                  key={key}\n                  className=\"mx-2 mb-3\"\n                  name=\"direction\"\n                  value={key}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setDirection(e.target.value)}\n                >\n                  {name}\n                </Form.Radio>\n              ))}\n            </div>\n            <Form.Group>\n              <Form.Label className=\"d-block\">\n                <span className=\"d-block text-center\">Spacing Level: {size}</span>\n              </Form.Label>\n              <div\n                className=\"d-flex align-items-center\"\n                style={{ maxWidth: '20rem' }}\n              >\n                -6\n                <Form.Control\n                  className=\"mx-2\"\n                  type=\"range\"\n                  min={-6}\n                  step={0.5}\n                  max={6}\n                  value={size}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSize(parseInt(e.target.value, 10))}\n                />\n                6\n              </div>\n            </Form.Group>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n            <div className=\"border border-danger  p-0\" style={{}}>\n              <SpaceBlock utilityClass={utilityClassName} />\n            </div>\n            <SpaceBlock />\n          </div>\n          <div className=\"d-flex justify-content-center\">\n            <SpaceBlock />\n          </div>\n        </div>\n        <h3>Padding</h3>\n        <p>\n          Padding utilities are structured the same way:{' '}\n          <code>{'.p{direction}-{level}'}</code>.\n        </p>\n\n        <h3>All Spacing Utility Classes</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>All directions</th>\n              <th>Top</th>\n              <th>Right</th>\n              <th>Bottom</th>\n              <th>Left</th>\n              <th>X Direction</th>\n              <th>Y Direction</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th colSpan={7}>Margin</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('m', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n            <tr>\n              <th colSpan={7}>Padding</th>\n            </tr>\n            <tr>\n              {directions.map(({ key }) => (\n                <td>\n                  {sizes.map(_size => (\n                    <code className=\"d-block\">\n                      .{getUtilityClassName('p', key, _size)}\n                    </code>\n                  ))}\n                </td>\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["initialMeasurements","MeasuredItem","_ref","properties","renderBefore","renderAfter","children","settings","useContext","SettingsContext","theme","measurements","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","measure","current","computedStyle","getComputedStyle","measurementsItems","reduce","acc","property","getPropertyValue","clearTimeout","React","ref","defaultProps","undefined","directions","key","name","spacerValues","sizes","concat","_toConsumableArray","slice","reverse","map","value","getUtilityClassName","prefix","direction","size","Math","abs","PixelCell","spacer","margin","style","display","className","SpaceBlock","_ref2","utilityClass","classNames","alignItems","justifyContent","height","textAlign","width","background","SpacingPage","setSize","setDirection","utilityClassName","spacerValuesTableData","pixelValue","Layout","Container","SEO","title","DataTable","data","columns","Header","accessor","_ref3","Form","onChange","e","target","maxWidth","type","min","step","max","parseInt","colSpan","_ref4","_size","_ref5"],"sourceRoot":""}