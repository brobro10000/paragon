{"version":3,"file":"component---src-pages-foundations-typography-tsx-ef38f725aa2675663d81.js","mappings":"oNAKA,MAAMA,EAAe,aAiDrB,IAlBA,WACE,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,gBAAeF,IAChC,IAAEG,GAAQF,EAEhB,OACEG,EAAAA,cAACC,EAAAA,EAAS,CAACC,UAAU,iDACnBF,EAAAA,cAACC,EAAAA,EAAS,CAACE,KAAK,KAAKD,UAAU,QAC7BF,EAAAA,cAAA,OAAKE,UAAU,qCACbF,EAAAA,cAAA,MAAIE,UAAU,QAAO,wBACrBF,EAAAA,cAAA,MAAIE,UAAU,yDACXH,EAAIK,KAAKC,GAA4BL,EAAAA,cAACM,EAAAA,EAAgBC,OAAAC,OAAA,CAACC,IAAKJ,EAAKK,IAAQL,SAMtF,C,iIC3CA,SAASM,EAAaC,GAA+C,IAA9C,UAAEC,GAAyCD,EAA3BE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAC1C,MACMC,EAAgB,6GADLC,EAAAA,EAAAA,eACyHC,0DACpIC,EAAyB,iBAEzBC,EAA0BA,KAC9BC,EAAAA,EAAOC,UAAUC,MAAM,8CAA8C,EAGvE,OAAIX,EAEAb,EAAAA,cAACyB,EAAAA,GAAAA,KAAQlB,OAAAC,OAAA,CACPkB,QAASL,EACTM,KAAMV,EACNW,OAAO,SACPC,IAAI,uBACAf,GAEHM,GAMLpB,EAAAA,cAAC8B,EAAAA,GAAMvB,OAAAC,OAAA,CACLuB,GAAIC,EAAAA,GACJC,YAAahB,EACbd,KAAK,KACL+B,QAAQ,kBACRR,QAASL,EACTO,OAAO,UACHd,GAEHM,EAGP,CAMAT,EAAcwB,aAAe,CAC3BtB,WAAW,GAGb,K,+DCtCA,MAAMuB,EAAsB,CAAC,EAE7B,SAASC,EAAYzB,GAKF,IALG,WACpB0B,EAAU,aACVC,EAAY,YACZC,EAAW,SACXC,GACc7B,EACd,MAAM,SAAE8B,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,kBAC1B,MAAEC,GAAUH,GACZ,EAACI,EAAa,EAACC,IAAmBC,EAAAA,EAAAA,UAASZ,GAC3Ca,GAAUC,EAAAA,EAAAA,UAuBhB,OArBAC,EAAAA,EAAAA,YACE,KAaEJ,EAAgBX,GAChB,MAAMgB,EAAUC,YAbAC,KACd,IAAKL,EAAQM,QACX,OAEF,MAAMC,EAAgBC,iBAAiBR,EAAQM,SACzCG,EAAoBpB,EAAWqB,QAAO,CAACC,EAA+BC,KAC1ED,EAAIC,GAAYL,EAAcM,iBAAiBD,GACxCD,IACN,CAAC,GACJb,EAAgBW,EAAkB,GAIA,KACpC,MAAO,IAAMK,aAAaX,EAAQ,GAEpC,CAACP,EAAOP,IAIRtC,EAAAA,cAAAA,EAAAA,SAAA,KACGuC,EAAeA,EAAaO,GAAgB,KAC5C9C,EAAAA,aAAmByC,EAAgC,CAAEuB,IAAKf,IAC1DT,EAAcA,EAAYM,GAAgB,KAGjD,CASAT,EAAaF,aAAe,CAC1BG,WAAY,GACZC,kBAAc0B,EACdzB,iBAAayB,GAGf,K,yTCpDA,SAASC,EAAQtD,GAAoC,IAAnC,mBAAEuD,GAA8BvD,EAChD,MAAM,SACJ8B,EAAQ,qBACR0B,EAAoB,aACpBC,EAAY,cACZC,IACE3B,EAAAA,EAAAA,YAAWC,EAAAA,iBAEf,OACE5C,EAAAA,cAACuE,EAAAA,GAAK,CACJC,SAAS,QACTC,KAAMJ,EACNnC,QAAQ,QACRwC,QAASJ,GAETtE,EAAAA,cAAA,OAAKE,UAAU,qBACbF,EAAAA,cAAA,OAAKE,UAAU,2BACbF,EAAAA,cAAA,MAAIE,UAAU,QAAO,YACrBF,EAAAA,cAAC2E,EAAAA,EAAU,CACTC,IAAKC,EAAAA,EACLC,OAAQC,EAAAA,EACRC,IAAI,iBACJtD,QAAS4C,EACTnE,KAAK,QAGTH,EAAAA,cAACiF,EAAAA,EAAK,CAACC,IAAK,GACVlF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACjF,UAAU,+BACpBF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACjF,UAAU,2BAA0B,kBAChDF,EAAAA,cAACmF,EAAAA,GAAAA,SAAa,CACZC,KAAK,YACLC,SAAWC,GAA4ClB,EAAqB,YAAakB,EAAE1D,OAAO2D,OAClGA,MAAO7C,EAAS8C,WAEhBxF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACI,MAAM,OAAM,iBACxBvF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACI,MAAM,OAAM,mBAG5BvF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,KACTnF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACjF,UAAU,2BAA0B,YAChDF,EAAAA,cAACmF,EAAAA,GAAAA,QAAY,CACXpD,GAAG,SACHwD,MAAO7C,EAAS+C,SAChBJ,SAAWC,GAAuClB,EAAqB,WAAYkB,EAAE1D,OAAO2D,QAE3FG,EAAAA,UAAAA,KAAcC,GACb3F,EAAAA,cAAA,UACES,IAAKkF,EAAKC,KACVL,MAAOI,EAAKC,MAEXD,EAAKE,YAKZ1B,GACAnE,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,KACTnF,EAAAA,cAACmF,EAAAA,GAAAA,MAAU,CAACjF,UAAU,2BAA0B,mBAChDF,EAAAA,cAACmF,EAAAA,GAAAA,QAAY,CACXpD,GAAG,SACHwD,MAAO7C,EAASoD,eAChBT,SAAWC,GAA4ClB,EAAqB,iBAAkBkB,EAAE1D,OAAO2D,QAEvGvF,EAAAA,cAAA,UAAQuF,MAAM,MAAK,MACnBvF,EAAAA,cAAA,UAAQuF,MAAM,MAAK,MACnBvF,EAAAA,cAAA,UAAQuF,MAAM,MAAK,gBACnBvF,EAAAA,cAAA,UAAQuF,MAAM,MAAK,MACnBvF,EAAAA,cAAA,UAAQuF,MAAM,MAAK,QAIzBvF,EAAAA,cAACyB,EAAAA,GAAG,CAACvB,UAAU,gCACbF,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAAC+F,EAAAA,KAAI,CAAC7F,UAAU,WAAW8F,GAAG,cAAa,cAI7ChG,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,CAACE,KAAK,sCAAqC,cASlE,CAMAuC,EAAS/B,aAAe,CACtBgC,oBAAoB,GAGtB,Q,oBCpGA,SAAS8B,EAAGrF,GAA6B,IAA5B,KAAEsF,EAAI,UAAEhG,GAAiBU,EACpC,MAAM,EAACuF,EAAO,EAACC,IAAapD,EAAAA,EAAAA,UAAS,IAC/BqD,GAAWnD,EAAAA,EAAAA,WAEjBC,EAAAA,EAAAA,YAAU,KAORkD,EAAS9C,QAAU,IAAI+C,sBANCC,IAClBA,EAAQ,GAAGC,mBAAqB,IAClCJ,EAAUG,EAAQ,GAAG3E,OAAOlB,GAC9B,GAG0D,CAAE+F,WAAY,qBAAsBC,UAAW,KAI3G,OAHiBC,SAASC,iBAAiB,+CAClCC,SAASC,IAAI,IAAAC,EAAA,OAAqB,QAArBA,EAAKV,EAAS9C,eAAO,IAAAwD,OAAA,EAAhBA,EAAkBC,QAAQF,EAAK,IAEnD,SAAAG,EAAA,OAAsB,QAAtBA,EAAMZ,EAAS9C,eAAO,IAAA0D,OAAA,EAAhBA,EAAkBC,YAAY,IAC1C,CAAChB,IAEJ,MAAMiB,EAAgBC,IAAmC,IAAAC,EAAA,OAAMD,SAAe,QAAPC,EAARD,EAAUE,aAAK,IAAAD,GAAfA,EAAiBE,OAE5EvH,EAAAA,cAAA,MAAIE,UAAU,qBACXkH,EAASE,MAAMlH,KAAIoH,GAClBxH,EAAAA,cAAA,MAAIS,IAAK+G,EAAQC,KACfzH,EAAAA,cAAA,KACE2B,KAAM6F,EAAQC,IACdvH,UAAWwH,IAAW,CAAEvB,OAAS,IAAGA,MAAaqB,EAAQC,OAExDD,EAAQG,SAERH,EAAQF,OAASH,EAAaK,OAIrC,IAAI,EAEJI,EAAUT,EAAajB,GAE7B,OAAO0B,EACL5H,EAAAA,cAAC6H,EAAAA,EAAM,CACLC,OAAQ,EACR5H,UAAWwH,IAAW,eAAgBxH,IAEtCF,EAAAA,cAAA,KAAGE,UAAU,uBAAsB,YAClC0H,GAED,IACN,CAEA,MAAMG,EAAa,CACjBN,IAAKO,IAAAA,OACLL,MAAOK,IAAAA,OACPV,MAAOU,IAAAA,OAETD,EAAWT,MAAQU,IAAAA,QAAkBA,IAAAA,MAAgBD,IASrD9B,EAAI9D,aAAe,CACjBjC,eAAW+D,GAGb,Q,WC3CA,SAASgE,EAAMrH,GAMF,IAADsH,EAAA,IANI,SACdzF,EAAQ,mBACR0B,EAAkB,wBAClBgE,EAAuB,MACvBC,EAAK,QACLC,GACQzH,EACR,MAAM0H,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAUC,EAAAA,EAAAA,WAAAA,YACrC,SAAE/F,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,iBAC1BsD,GAAOpG,EAAAA,EAAAA,gBAAe,cAU5B,OACEE,EAAAA,cAAA,OAAKE,UAAU,sBACbF,EAAAA,cAAC0I,EAAAA,EAAM,CACLC,WAAiC,QAAtBT,EAAAhC,EAAK0C,KAAKC,oBAAY,IAAAX,OAAA,EAAtBA,EAAwBP,QAAS,QAC5CxD,mBAAoBmE,GAAYnE,IAElCnE,EAAAA,cAACkE,EAAQ,CAACC,mBAAoBA,IAC7BiE,IAAUD,EACTnI,EAAAA,cAACC,EAAAA,EAAS,CAAC6I,OAAK,GACd9I,EAAAA,cAAC+I,EAAAA,EAAG,CAAC7I,UAAU,kBACbF,EAAAA,cAACgJ,EAAAA,EAAG,CAAC9I,UAAU,wBAAwB+I,GAAgC,OAA5BvG,EAASoD,eAA0B,OAAS,GACrF9F,EAAAA,cAAC6H,EAAAA,EAAM,CAACC,OAAQ,EAAG5H,UAAU,yBAC3BF,EAAAA,cAACkJ,EAAAA,EAAI,QAGTlJ,EAAAA,cAACgJ,EAAAA,EAAG,CACFC,GAAgC,OAA5BvG,EAASoD,eAA0B,GAAK,EAC5CqD,GAAI,EACJC,GAAI,GACJrH,GAAG,OACH7B,UAAU,eAETuC,EACDzC,EAAAA,cAACC,EAAAA,EAAS,CAACE,KAAK,MACdH,EAAAA,cAAA,WACAA,EAAAA,cAACW,EAAAA,EAAa,CAACT,UAAU,WAG7BF,EAAAA,cAACgJ,EAAAA,EAAG,CACFC,GAAI,EACJE,GAAI,EACJpH,GAAIkE,EACJC,KAAMmC,EACNnI,UAAU,wBAKhBF,EAAAA,cAAA,QAAME,UAAU,eACbuC,IAGH0F,GAA2BnI,EAAAA,cAACqJ,EAAAA,EAAc,MAC5CrJ,EAAAA,cAACC,EAAAA,EAAS,CAAC8B,GAAG,SAAS7B,UAAU,oCAC/BF,EAAAA,cAACyB,EAAAA,GAAG,CAACvB,UAAU,6BACbF,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAAC+F,EAAAA,KAAI,CAAC7F,UAAU,sBAAsB8F,GAAG,WAAU,mBAIrDhG,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAAC+F,EAAAA,KAAI,CAAC7F,UAAU,sBAAsB8F,GAAG,aAAY,mBAIvDhG,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,CACPvB,UAAU,aACVyB,KAAK,oEACLC,OAAO,SACPC,IAAI,uBACL,oBAIH7B,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,CACPvB,UAAU,aACVyB,KAAK,wBACLC,OAAO,SACPC,IAAI,uBACL,aAIH7B,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,KACPzB,EAAAA,cAACW,EAAAA,EAAa,CAACT,UAAU,aAAaW,WAAS,KAEjDb,EAAAA,cAAA,OAAKE,UAAU,gBACfF,EAAAA,cAACyB,EAAAA,GAAAA,KAAQ,CACPvB,UAAU,aACVyB,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAEJ7B,EAAAA,cAAA,OACE4E,IAAI,8DACJI,IAAI,0BAOlB,CAEA,MAAM+C,EAAa,CACjBN,IAAKO,IAAAA,OACLL,MAAOK,IAAAA,OACPV,MAAOU,IAAAA,OAETD,EAAWT,MAAQU,IAAAA,QAAkBA,IAAAA,MAAgBD,IAYrDE,EAAO9F,aAAe,CACpBkG,QAAS,CAAC,EACVlE,oBAAoB,EACpBgE,yBAAyB,EACzBC,OAAO,GAGT,O,6ICzKA,MAAMkB,EAAkC,CACtC,IAAK,QACL,IAAK,QACL,IAAK,UACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,SAGDC,EAAoB,CACxBjH,WAAY,CAAC,YAAa,cAAe,cAAe,eACxDE,YAAcM,IACZ,MAAM0G,EAAa1G,EAAa,eAC5BA,EAAa,eAAe2G,MAAM,KAAK,GACvC,KACEC,EAASJ,EAAaxG,EAAa,gBAEnC6G,EAAWC,KAAKC,MAAqD,GAA/CC,OAAOC,WAAWjH,EAAa,eAAsB,GAC3EkH,EAAaJ,KAAKC,MAAuD,GAAjDC,OAAOC,WAAWjH,EAAa,iBAAwB,GAErF,OACE9C,EAAAA,cAAA,KAAGE,UAAU,kBACXF,EAAAA,cAAA,QAAME,UAAU,QACbsJ,EAAW,IAAEE,GAEfC,EAAS,QAAMK,EAAW,KACzB,GAKK,SAASC,IACtB,OACEjK,EAAAA,cAACiI,EAAAA,EAAM,KACLjI,EAAAA,cAACC,EAAAA,EAAS,CAACE,KAAK,KAAKD,UAAU,QAE7BF,EAAAA,cAACkK,EAAAA,EAAG,CAACvC,MAAM,eACX3H,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,SAAOE,UAAU,qCACfF,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,MAAIE,UAAU,QAAO,cAGzBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAI,cAEL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGI,KAAIgK,GACtBpK,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAY,QAAOkK,KAAe,WAC1BA,KAIfpK,EAAAA,cAAA,MAAIE,UAAU,eACZF,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAY,QAAOkK,KAAe,WAC1BA,KAIfpK,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,KAAGoK,OAIfpK,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,iBAAgB,kBAChB,kEAGjBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,qBAIZA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,MAAIE,UAAU,QAAO,UAGzBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GAAG,oBAChBnK,EAAAA,cAAA,UAAI,cAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,YAAW,gBAG5BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,WAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,OAAM,WAIzBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,aAAY,gBAG7BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,YAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,eAAc,sBAG/BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,cAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAU,aAAY,gBAG7BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,aAIZA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,MAAIE,UAAU,QAAO,aAGzBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,UAAI,cAEL,CAAC,EAAG,EAAG,EAAG,GAAGI,KAAIiK,GAChBrK,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAY,eAAcmK,KAAe,WACjCA,KAIfrK,EAAAA,cAAA,MAAIE,UAAU,eACZF,EAAAA,cAACqC,EAAAA,EAAiBkH,EAChBvJ,EAAAA,cAAA,KAAGE,UAAY,eAAcmK,KAAe,WACjCA,KAIfrK,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,YAAUqK,QAKxBrK,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,MAAIE,UAAU,QAAO,WAGzBF,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,KAAG2B,KAAK,KAAI,oBAEd3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,aAAO,yBACiBA,EAAAA,cAAA,YAAM,KAAQ,gCAClCA,EAAAA,cAAA,YAAM,KAAQ,WAItBA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,SAAG,KACE,IACHA,EAAAA,cAAA,KAAGE,UAAU,cAAcyB,KAAK,KAAI,eAE/B,IAAI,mBAIb3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,aAAO,sBACcA,EAAAA,cAAA,YAAM,KAAQ,eAAa,IAC9CA,EAAAA,cAAA,YAAM,gBAAmB,kBAI/BA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,KAAGE,UAAU,aAAayB,KAAK,KAAI,2BAIrC3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,YAAM,eAAkB,aAAUA,EAAAA,cAAA,YAAM,KAAQ,WAItDA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,SAAG,KACE,IACHA,EAAAA,cAAA,KAAGE,UAAU,yBAAyByB,KAAK,KAAI,sBAE1C,IAAI,mBAIb3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,aAAO,OACDA,EAAAA,cAAA,YAAM,eAAkB,mBAAgBA,EAAAA,cAAA,YAAM,KAAQ,gBACjDA,EAAAA,cAAA,YAAM,gBAAmB,oBAO5CA,EAAAA,cAAA,SAAOE,UAAU,qCACfF,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,UAAI,6BAGRA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,cAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,kBAAiB,oBAEhCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,qBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,kBAAiB,oBAEhCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,qBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,mBAAkB,qBAEjCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,sBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,wBAAuB,oBAEtCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,2BAIVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,eAAc,iBAE7BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,kBAIVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,oBAAmB,eAElCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,uBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,sBAAqB,kBAEpCF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,2BAMdA,EAAAA,cAAA,SAAOE,UAAU,qCACfF,EAAAA,cAAA,aACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,MAAImK,QAAS,GACXnK,EAAAA,cAAA,UAAI,eAGRA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,cAENA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,aAAY,eAE3BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,gBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,cAAa,gBAE5BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,iBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,eAAc,iBAE7BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,kBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,gBAAe,iBAC5BF,EAAAA,cAAA,KACEE,UAAU,gCACVoK,MAAO,CAAE9B,SAAU,UACpB,iIAMHxI,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,mBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,aAAY,eAE3BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,gBAGVA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,KAAGE,UAAU,eAAc,iBAE7BF,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,qBAQtB,C,wBC3Y8BuK,EAAQ,OAAtC,MA+FMC,EAAgBjK,OAAOkK,OAAO,CAClCC,QAAS,UACTC,SAAU,WACVC,WAAY,aACZC,MAAO,QACPC,MAAO,QACPC,MAAO,UAGHC,EAAiB,CACrB,CACEC,IAAKT,EAAcE,QACnBQ,KAAM,aAER,CACED,IAAKT,EAAcG,SACnBO,KAAM,sBAER,CACED,IAAKT,EAAcI,WACnBM,KAAM,wBAER,CACED,IAAKT,EAAcK,MACnBK,KAAM,mBAER,CACED,IAAKT,EAAcM,MACnBI,KAAM,mBAER,CACED,IAAKT,EAAcO,MACnBG,KAAM,oBAIVC,EAAOC,QAAU,CACfZ,gBACAQ,iBACAK,SAxHe,CAAC,EAyHhB3F,UAvHgB,CAChB,CACEG,MAAO,UACPD,KAAM,MAER,CACEC,MAAO,SACPD,KAAM,MAER,CACEC,MAAO,UACPD,KAAM,MAER,CACEC,MAAO,UACPD,KAAM,SAER,CACEC,MAAO,SACPD,KAAM,MAER,CACEC,MAAO,SACPD,KAAM,MAER,CACEC,MAAO,aACPD,KAAM,MAER,CACEC,MAAO,kBACPD,KAAM,SAER,CACEC,MAAO,SACPD,KAAM,MAMR,CACEC,MAAO,wBACPD,KAAM,SAER,CACEC,MAAO,UACPD,KAAM,MAER,CACEC,MAAO,UACPD,KAAM,UAER,CACEC,MAAO,sBACPD,KAAM,SAER,CACEC,MAAO,kBACPD,KAAM,SAER,CACEC,MAAO,OACPD,KAAM,MAER,CACEC,MAAO,YACPD,KAAM,MAMR,CACEC,MAAO,mBACPD,KAAM,U,wBC5EVuF,EAAOC,QAVP,SAA+BE,GAC7B,MAAM,SAAEC,GAAajK,EAAAA,EACrB,QAAKiK,GAGgB,IAAIC,gBAAgBD,EAASE,QACpBC,OAAO,WACrBC,SAASL,EAC3B,C","sources":["webpack://paragon-pattern-library-documentation/./src/components/ComponentsList.tsx","webpack://paragon-pattern-library-documentation/./src/components/LeaveFeedback.tsx","webpack://paragon-pattern-library-documentation/./src/components/MeasuredItem.tsx","webpack://paragon-pattern-library-documentation/./src/components/Settings.tsx","webpack://paragon-pattern-library-documentation/./src/components/Toc.tsx","webpack://paragon-pattern-library-documentation/./src/components/PageLayout.tsx","webpack://paragon-pattern-library-documentation/./src/pages/foundations/typography.tsx","webpack://paragon-pattern-library-documentation/./src/config.js","webpack://paragon-pattern-library-documentation/./src/utils/hasFeatureFlagEnabled.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport { ComponentNavItem, IComponentNavItem } from './Menu';\n\nconst componentsQuery = graphql`\n  query componentsQuery {\n    components: allMdx(\n      filter: {\n        parent: {\n          internal: { owner: { nin: \"gatsby-transformer-react-docgen\" } }\n        }\n        frontmatter: { type: {} }\n      }\n      sort: { fields: frontmatter___title }\n    ) {\n      all: nodes {\n        ...ComponentPage\n      }\n    }\n  }\n\n  fragment ComponentPage on Mdx {\n    id\n    frontmatter {\n      categories\n      type\n      title\n      status\n    }\n    fields {\n      slug\n    }\n  }\n`;\n\nfunction ComponentsList() {\n  const { components } = useStaticQuery(componentsQuery);\n  const { all } = components;\n\n  return (\n    <Container className=\"py-3 bg-light-200 border-top border-light-300\">\n      <Container size=\"xl\" className=\"py-5\">\n        <div className=\"pgn-doc__menu-all-components pt-5\">\n          <h3 className=\"mb-4\">All components (A-Z)</h3>\n          <ul className=\"pgn-doc__menu-component-list list-unstyled small mb-4\">\n            {all.map((node: IComponentNavItem) => <ComponentNavItem key={node.id} {...node} />)}\n          </ul>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nexport default ComponentsList;\n","import React, { AnchorHTMLAttributes } from 'react';\nimport PropTypes from 'prop-types';\nimport { Nav, Button, Hyperlink } from '~paragon-react';\nimport { useLocation } from '@reach/router';\n\nexport interface LeaveFeedbackProps extends Partial<AnchorHTMLAttributes<HTMLAnchorElement>> {\n  isNavLink?: boolean;\n}\n\nfunction LeaveFeedback({ isNavLink, ...props }: LeaveFeedbackProps) {\n  const location = useLocation();\n  const FEEDBACK_URL = `https://github.com/openedx/paragon/issues/new?title=%5Bparagon-openedx.netlify.app%5D%20Feedback%20(on%20${location.pathname})&amp;labels=docs&template=feedback_template.md`;\n  const leaveFeedbackLinkTitle = 'Leave feedback';\n\n  const handleLinkFeedbackClick = () => {\n    global.analytics.track('openedx.paragon.docs.leave_feedback.clicked');\n  };\n\n  if (isNavLink) {\n    return (\n      <Nav.Link\n        onClick={handleLinkFeedbackClick}\n        href={FEEDBACK_URL}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        {...props}\n      >\n        {leaveFeedbackLinkTitle}\n      </Nav.Link>\n    );\n  }\n\n  return (\n    <Button\n      as={Hyperlink}\n      destination={FEEDBACK_URL}\n      size=\"sm\"\n      variant=\"outline-primary\"\n      onClick={handleLinkFeedbackClick}\n      target=\"_blank\"\n      {...props}\n    >\n      {leaveFeedbackLinkTitle}\n    </Button>\n  );\n}\n\nLeaveFeedback.propTypes = {\n  isNavLink: PropTypes.bool,\n};\n\nLeaveFeedback.defaultProps = {\n  isNavLink: false,\n};\n\nexport default LeaveFeedback;\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface IMeasuredItem {\n  properties: string[],\n  renderBefore?: Function,\n  renderAfter?: Function,\n  children: React.ReactNode,\n}\n\nconst initialMeasurements = {};\n\nfunction MeasuredItem({\n  properties,\n  renderBefore,\n  renderAfter,\n  children,\n}: IMeasuredItem) {\n  const { settings } = useContext(SettingsContext);\n  const { theme } = settings;\n  const [measurements, setMeasurements] = useState(initialMeasurements);\n  const itemRef = useRef();\n\n  useEffect(\n    () => {\n      const measure = () => {\n        if (!itemRef.current) {\n          return;\n        }\n        const computedStyle = getComputedStyle(itemRef.current);\n        const measurementsItems = properties.reduce((acc: { [x: string]: string; }, property: string) => {\n          acc[property] = computedStyle.getPropertyValue(property);\n          return acc;\n        }, {});\n        setMeasurements(measurementsItems);\n      };\n      // Needs a moment to finish switching theme and re-render children to DOM first.\n      setMeasurements(initialMeasurements);\n      const timeout = setTimeout(measure, 1000);\n      return () => clearTimeout(timeout);\n    },\n    [theme, properties],\n  );\n\n  return (\n    <>\n      {renderBefore ? renderBefore(measurements) : null}\n      {React.cloneElement(children as React.ReactElement, { ref: itemRef })}\n      {renderAfter ? renderAfter(measurements) : null}\n    </>\n  );\n}\n\nMeasuredItem.propTypes = {\n  properties: PropTypes.arrayOf(PropTypes.string),\n  renderBefore: PropTypes.func,\n  renderAfter: PropTypes.func,\n  children: PropTypes.node.isRequired,\n};\n\nMeasuredItem.defaultProps = {\n  properties: [],\n  renderBefore: undefined,\n  renderAfter: undefined,\n};\n\nexport default MeasuredItem;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Sheet,\n  Form,\n  Icon,\n  IconButton,\n  Stack,\n  Nav,\n} from '~paragon-react';\nimport { Close } from '~paragon-icons';\n\nimport { Link } from 'gatsby';\nimport { LANGUAGES } from '../config';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface ISetting {\n  showMinimizedTitle?: boolean,\n}\n\nfunction Settings({ showMinimizedTitle }: ISetting) {\n  const {\n    settings,\n    handleSettingsChange,\n    showSettings,\n    closeSettings,\n  } = useContext(SettingsContext);\n\n  return (\n    <Sheet\n      position=\"right\"\n      show={showSettings}\n      variant=\"light\"\n      onClose={closeSettings}\n    >\n      <div className=\"pgn-doc__settings\">\n        <div className=\"pgn-doc__settings-title\">\n          <h3 className=\"mb-0\">Settings</h3>\n          <IconButton\n            src={Close}\n            iconAs={Icon}\n            alt=\"Close settings\"\n            onClick={closeSettings}\n            size=\"sm\"\n          />\n        </div>\n        <Stack gap={1}>\n          <Form.Group className=\"pgn-doc__settings-direction\">\n            <Form.Label className=\"pgn-doc__settings-label\">Text direction</Form.Label>\n            <Form.RadioSet\n              name=\"direction\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('direction', e.target.value)}\n              value={settings.direction}\n            >\n              <Form.Radio value=\"ltr\">Left to right</Form.Radio>\n              <Form.Radio value=\"rtl\">Right to left</Form.Radio>\n            </Form.RadioSet>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"pgn-doc__settings-label\">Language</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={settings.language}\n              onChange={(e: { target: { value: string; }; }) => handleSettingsChange('language', e.target.value)}\n            >\n              {LANGUAGES.map(lang => (\n                <option\n                  key={lang.code}\n                  value={lang.code}\n                >\n                  {lang.label}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          {!showMinimizedTitle && (\n            <Form.Group>\n              <Form.Label className=\"pgn-doc__settings-label\">Container Width</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={settings.containerWidth}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('containerWidth', e.target.value)}\n              >\n                <option value=\"xs\">xs</option>\n                <option value=\"sm\">sm</option>\n                <option value=\"md\">md (default)</option>\n                <option value=\"lg\">lg</option>\n                <option value=\"xl\">xl</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          <Nav className=\"pgn-doc__settings-nav--items\">\n            <Nav.Item>\n              <Link className=\"nav-link\" to=\"/changelog\">\n                Changelog\n              </Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"https://github.com/openedx/paragon\">\n                GitHub\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Stack>\n      </div>\n    </Sheet>\n  );\n}\n\nSettings.propTypes = {\n  showMinimizedTitle: PropTypes.bool,\n};\n\nSettings.defaultProps = {\n  showMinimizedTitle: false,\n};\n\nexport default Settings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Sticky } from '~paragon-react';\n\ninterface IItems {\n  url?: string,\n  title?: string,\n  items?: Array<IItems>,\n}\n\nexport interface IToc {\n  data: {\n    items?: Array<IItems>\n  },\n  className?: string,\n}\n\nfunction Toc({ data, className }: IToc) {\n  const [active, setActive] = useState('');\n  const observer = useRef<IntersectionObserver>();\n\n  useEffect(() => {\n    const handleObserver = (entries: IntersectionObserverEntry[]) => {\n      if (entries[0].intersectionRatio >= 0.5) {\n        setActive(entries[0].target.id);\n      }\n    };\n\n    observer.current = new IntersectionObserver(handleObserver, { rootMargin: '-50px 0px -80% 0px', threshold: 0.5 });\n    const elements = document.querySelectorAll('main h2, main h3, main h4, main h5, main h6');\n    elements.forEach((elem) => observer.current?.observe(elem));\n\n    return () => observer.current?.disconnect();\n  }, [data]);\n\n  const generateTree = (headings: { items?: Array<IItems> }) => (headings?.items?.length\n    ? (\n      <ul className=\"pgn-doc__toc-list\">\n        {headings.items.map(heading => (\n          <li key={heading.url}>\n            <a\n              href={heading.url}\n              className={classNames({ active: `#${active}` === heading.url })}\n            >\n              {heading.title}\n            </a>\n            {!!heading.items && generateTree(heading)}\n          </li>\n        ))}\n      </ul>\n    ) : null);\n\n  const tocTree = generateTree(data);\n\n  return tocTree ? (\n    <Sticky\n      offset={6}\n      className={classNames('pgn-doc__toc', className)}\n    >\n      <p className=\"pgn-doc__toc-header\">Contents</p>\n      {tocTree}\n    </Sticky>\n  ) : null;\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nToc.propTypes = {\n  data: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nToc.defaultProps = {\n  className: undefined,\n};\n\nexport default Toc;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport {\n  Container,\n  Nav,\n  Row,\n  Col,\n  Sticky,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport ComponentsList from './ComponentsList';\nimport Header from './header';\nimport Menu from './Menu';\nimport Settings from './Settings';\nimport Toc from './Toc';\nimport { SettingsContext } from '../context/SettingsContext';\nimport LeaveFeedback from './LeaveFeedback';\n\nif (process.env.NODE_ENV === 'development') {\n  /* eslint-disable-next-line global-require */\n  require('~paragon-style/core/core.scss');\n}\n\nexport interface ILayout {\n  children: React.ReactNode,\n  showMinimizedTitle: boolean,\n  hideFooterComponentMenu: boolean,\n  isMdx: boolean,\n  tocData: Array<number>,\n}\n\nfunction Layout({\n  children,\n  showMinimizedTitle,\n  hideFooterComponentMenu,\n  isMdx,\n  tocData,\n}: ILayout) {\n  const isMobile = useMediaQuery({ maxWidth: breakpoints.extraLarge.minWidth });\n  const { settings } = useContext(SettingsContext);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title || 'Title'}\n        showMinimizedTitle={isMobile || showMinimizedTitle}\n      />\n      <Settings showMinimizedTitle={showMinimizedTitle} />\n      {isMdx || !hideFooterComponentMenu ? (\n        <Container fluid>\n          <Row className=\"flex-xl-nowrap\">\n            <Col className=\"d-none d-xl-block p-0\" xl={settings.containerWidth === 'xl' ? 'auto' : 2}>\n              <Sticky offset={6} className=\"pgn-doc__toc p-0 pt-3\">\n                <Menu />\n              </Sticky>\n            </Col>\n            <Col\n              xl={settings.containerWidth === 'xl' ? 10 : 8}\n              lg={9}\n              md={12}\n              as=\"main\"\n              className=\"flex-grow-1\"\n            >\n              {children}\n              <Container size=\"md\">\n                <hr />\n                <LeaveFeedback className=\"mb-5\" />\n              </Container>\n            </Col>\n            <Col\n              xl={2}\n              lg={3}\n              as={Toc}\n              data={tocData}\n              className=\"d-none d-lg-block\"\n            />\n          </Row>\n        </Container>\n      ) : (\n        <main className=\"flex-grow-1\">\n          {children}\n        </main>\n      )}\n      {!hideFooterComponentMenu && <ComponentsList />}\n      <Container as=\"footer\" className=\"py-3 border-top border-light-300\">\n        <Nav className=\"d-flex align-items-center\">\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/status\">\n              Library status\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/insights\">\n              Usage insights\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              className=\"muted-link\"\n              href=\"https://github.com/openedx/.github/blob/master/CODE_OF_CONDUCT.md\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Code of Conduct\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              className=\"muted-link\"\n              href=\"https://open.edx.org/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Open edX\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <LeaveFeedback className=\"muted-link\" isNavLink />\n          </Nav.Item>\n          <div className=\"flex-grow-1\" />\n          <Nav.Link\n            className=\"muted-link\"\n            href=\"https://www.netlify.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\"\n              alt=\"Deploys by Netlify\"\n            />\n          </Nav.Link>\n        </Nav>\n      </Container>\n    </div>\n  );\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  tocData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }),\n  showMinimizedTitle: PropTypes.bool,\n  hideFooterComponentMenu: PropTypes.bool,\n  isMdx: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  tocData: {},\n  showMinimizedTitle: false,\n  hideFooterComponentMenu: false,\n  isMdx: false,\n};\n\nexport default Layout;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Container } from '~paragon-react';\nimport SEO from '../../components/SEO';\nimport MeasuredItem from '../../components/MeasuredItem';\nimport Layout from '../../components/PageLayout';\n\nexport type WeightLabelsTypes = {\n  [key: string]: string,\n};\n\nconst weightLabels: WeightLabelsTypes = {\n  200: 'Light',\n  300: 'Light',\n  400: 'Regular',\n  500: 'Medium',\n  600: 'Medium',\n  700: 'Bold',\n  800: 'Black',\n};\n\nconst measuredTypeProps = {\n  properties: ['font-size', 'line-height', 'font-family', 'font-weight'],\n  renderAfter: (measurements: { [x: string]: string; }) => {\n    const fontFamily = measurements['font-family']\n      ? measurements['font-family'].split(',')[0]\n      : null;\n    const weight = weightLabels[measurements['font-weight']];\n    // only one significant digit if needed\n    const fontSize = Math.round(Number.parseFloat(measurements['font-size']) * 10) / 10;\n    const lineHeight = Math.round(Number.parseFloat(measurements['line-height']) * 10) / 10;\n\n    return (\n      <p className=\"m-0 text-muted\">\n        <span className=\"mr-2\">\n          {fontFamily} {weight}\n        </span>\n        {fontSize}px / {lineHeight}px\n      </p>\n    );\n  },\n};\n\nexport default function TypographyPage() {\n  return (\n    <Layout>\n      <Container size=\"xl\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Typography\" />\n        <h1>Typography</h1>\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Headings</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4, 5, 6].map(headingSize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 h${headingSize}`}>\n                      Heading {headingSize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.h{headingSize}</code>\n                </td>\n              </tr>\n            ))}\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"heading-label\">Heading Label</p>\n                </MeasuredItem>\n                A heading label is usually paired with and proceeds a Heading.\n              </td>\n              <td>\n                <code>.heading-label</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Body</h2>\n              </th>\n            </tr>\n            <tr>\n              <th colSpan={2}>Desktop & Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"lead m-0\">Large Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.lead</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={3}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"m-0\">Body</p>\n                </MeasuredItem>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"small m-0\">Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"x-small m-0\">Extra Small Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.x-small</code>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <MeasuredItem {...measuredTypeProps}>\n                  <p className=\"micro m-0\">Micro Body</p>\n                </MeasuredItem>\n              </td>\n              <td>\n                <code>.micro</code>\n              </td>\n            </tr>\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Display</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Desktop</th>\n              <th>Mobile</th>\n              <th>CSS Class</th>\n            </tr>\n            {[1, 2, 3, 4].map(displaySize => (\n              <tr>\n                <td>\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td className=\"mobile-type\">\n                  <MeasuredItem {...measuredTypeProps}>\n                    <p className={`m-0 display-${displaySize}`}>\n                      Display {displaySize}\n                    </p>\n                  </MeasuredItem>\n                </td>\n                <td>\n                  <code>.display-{displaySize}</code>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n          <tbody>\n            <tr>\n              <th colSpan={3}>\n                <h2 className=\"mt-3\">Links</h2>\n              </th>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <a href=\"#\">Standalone Link</a>\n              </td>\n              <td>\n                <small>\n                  The default style for <code>a</code> tags that don&apos;t appear in\n                  a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <p>\n                  An{' '}\n                  <a className=\"inline-link\" href=\"#\">\n                    inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For links inside a <code>p</code> or with the{' '}\n                  <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <a className=\"muted-link\" href=\"#\">\n                  Muted, Standalone Link\n                </a>\n              </td>\n              <td>\n                <small>\n                  <code>.muted-link</code> not in a <code>p</code> tag.\n                </small>\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                <p>\n                  An{' '}\n                  <a className=\"muted-link inline-link\" href=\"#\">\n                    muted, inline link\n                  </a>{' '}\n                  in a sentence.\n                </p>\n              </td>\n              <td>\n                <small>\n                  For <code>.muted-link</code> links inside a <code>p</code> or\n                  with the <code>.inline-link</code> class name.\n                </small>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={2}>\n                <h2>Decoration and Emphasis</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-lowercase\">Lowercase text.</p>\n              </td>\n              <td>\n                <code>.text-lowercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-uppercase\">uppercase text.</p>\n              </td>\n              <td>\n                <code>.text-uppercase</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-capitalize\">capitalize text.</p>\n              </td>\n              <td>\n                <code>.text-capitalize</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-decoration-none\">No decorations.</p>\n              </td>\n              <td>\n                <code>.text-decoration-none</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"text-italic\">Italic text.</p>\n              </td>\n              <td>\n                <code>.text-italic</code>\n              </td>\n            </tr>\n\n            <tr>\n              <td>\n                <p className=\"font-weight-bold\">Bold text.</p>\n              </td>\n              <td>\n                <code>.font-weight-bold</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"font-weight-normal\">Regular text.</p>\n              </td>\n              <td>\n                <code>.font-weight-normal</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <table className=\"w-100 table pgn-doc__status-table\">\n          <tbody>\n            <tr>\n              <th colSpan={2}>\n                <h2>Alignment</h2>\n              </th>\n            </tr>\n            <tr>\n              <th>Style</th>\n              <th>CSS Class</th>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-left\">left text.</p>\n              </td>\n              <td>\n                <code>.text-left</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-right\">right text.</p>\n              </td>\n              <td>\n                <code>.text-right</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-center\">center text.</p>\n              </td>\n              <td>\n                <code>.text-center</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-justify\">justify text.</p>\n                <p\n                  className=\"text-justify text-muted small\"\n                  style={{ maxWidth: '20rem' }}\n                >\n                  At the edge of forever tendrils of gossamer clouds corpus\n                  callosum culture Vangelis dispassionate extraterrestrial\n                  observer.\n                </p>\n              </td>\n              <td>\n                <code>.text-justify</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-wrap\">wrap text.</p>\n              </td>\n              <td>\n                <code>.text-wrap</code>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <p className=\"text-nowrap\">nowrap text.</p>\n              </td>\n              <td>\n                <code>.text-nowrap</code>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Container>\n    </Layout>\n  );\n}\n","/* eslint-disable */\nconst hasFeatureFlagEnabled = require('./utils/hasFeatureFlagEnabled');\n/* eslint-enable */\n\n// Feature flags used throughout the site should be configured here.\n// You should generally allow two ways of enabling a feature flag:\n// 1. Through environment variables which will enable a feature flag at build time\n//    without a way of disabling it, to do so during local development edit the\n//    .env.development file located at the root of docs site project (note that\n//    you will need to restart development server for the changes to take effect).\n//    See DIRECTION_SWITCHER feature for example of configuring feature flags this way.\n// 2. As a query parameter in the URL, using`hasFeatureFlagEnabled` util function.\n//    This will allow to enable feature flag by providing its name as a feature?\n//    query parameter in the URL. (e.g. to enable LANGUAGE_SWITCHER feature you would append\n//    '?feature=LANGUAGE_SWITCHER' to the URL)\nconst FEATURES = {};\n\nconst LANGUAGES = [\n  {\n    label: 'English',\n    code: 'en',\n  },\n  {\n    label: 'Arabic',\n    code: 'ar',\n  },\n  {\n    label: 'Catalan',\n    code: 'ca',\n  },\n  {\n    label: 'Chinese',\n    code: 'zh-cn',\n  },\n  {\n    label: 'French',\n    code: 'fr',\n  },\n  {\n    label: 'Hebrew',\n    code: 'he',\n  },\n  {\n    label: 'Indonesian',\n    code: 'id',\n  },\n  {\n    label: 'Italian (Italy)',\n    code: 'it-it',\n  },\n  {\n    label: 'Polish',\n    code: 'pl',\n  },\n  // {\n  //   label: 'Portuguese (Brazil)',\n  //   code: 'pt-br',\n  // },\n  {\n    label: 'Portuguese (Portugal)',\n    code: 'pt-pt',\n  },\n  {\n    label: 'Russian',\n    code: 'ru',\n  },\n  {\n    label: 'Spanish',\n    code: 'es-419',\n  },\n  {\n    label: 'Spanish (Argentina)',\n    code: 'es-ar',\n  },\n  {\n    label: 'Spanish (Spain)',\n    code: 'es-es',\n  },\n  {\n    label: 'Thai',\n    code: 'th',\n  },\n  {\n    label: 'Ukrainian',\n    code: 'uk',\n  },\n  // {\n  //   label: 'Korean',\n  //   code: 'ko-kr',\n  // },\n  {\n    label: 'Turkish (Turkey)',\n    code: 'tr-tr',\n  },\n];\n\nconst INSIGHTS_TABS = Object.freeze({\n  SUMMARY: 'Summary',\n  PROJECTS: 'Projects',\n  COMPONENTS: 'Components',\n  HOOKS: 'Hooks',\n  UTILS: 'Utils',\n  ICONS: 'Icons',\n});\n\nconst INSIGHTS_PAGES = [\n  {\n    tab: INSIGHTS_TABS.SUMMARY,\n    path: '/insights',\n  },\n  {\n    tab: INSIGHTS_TABS.PROJECTS,\n    path: '/insights/projects',\n  },\n  {\n    tab: INSIGHTS_TABS.COMPONENTS,\n    path: '/insights/components',\n  },\n  {\n    tab: INSIGHTS_TABS.HOOKS,\n    path: '/insights/hooks',\n  },\n  {\n    tab: INSIGHTS_TABS.UTILS,\n    path: '/insights/utils',\n  },\n  {\n    tab: INSIGHTS_TABS.ICONS,\n    path: '/insights/icons',\n  },\n];\n\nmodule.exports = {\n  INSIGHTS_TABS,\n  INSIGHTS_PAGES,\n  FEATURES,\n  LANGUAGES,\n};\n","/**\n * Determines whether a specified feature flag is enabled.\n *\n * @param {string} featureFlag\n * @returns true if feature flag is in `?feature` query parameter\n */\nfunction hasFeatureFlagEnabled(featureFlag) {\n  const { location } = global;\n  if (!location) {\n    return false;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  const features = searchParams.getAll('feature');\n  return features.includes(featureFlag);\n}\n\nmodule.exports = hasFeatureFlagEnabled;\n"],"names":["componentsQuery","components","useStaticQuery","all","React","Container","className","size","map","node","ComponentNavItem","Object","assign","key","id","LeaveFeedback","_ref","isNavLink","props","_objectWithoutProperties","_excluded","FEEDBACK_URL","useLocation","pathname","leaveFeedbackLinkTitle","handleLinkFeedbackClick","global","analytics","track","Nav","onClick","href","target","rel","Button","as","Hyperlink","destination","variant","defaultProps","initialMeasurements","MeasuredItem","properties","renderBefore","renderAfter","children","settings","useContext","SettingsContext","theme","measurements","setMeasurements","useState","itemRef","useRef","useEffect","timeout","setTimeout","measure","current","computedStyle","getComputedStyle","measurementsItems","reduce","acc","property","getPropertyValue","clearTimeout","ref","undefined","Settings","showMinimizedTitle","handleSettingsChange","showSettings","closeSettings","Sheet","position","show","onClose","IconButton","src","Close","iconAs","Icon","alt","Stack","gap","Form","name","onChange","e","value","direction","language","LANGUAGES","lang","code","label","containerWidth","Link","to","Toc","data","active","setActive","observer","IntersectionObserver","entries","intersectionRatio","rootMargin","threshold","document","querySelectorAll","forEach","elem","_observer$current","observe","_observer$current2","disconnect","generateTree","headings","_headings$items","items","length","heading","url","classNames","title","tocTree","Sticky","offset","itemsShape","PropTypes","Layout","_data$site$siteMetada","hideFooterComponentMenu","isMdx","tocData","isMobile","useMediaQuery","maxWidth","breakpoints","Header","siteTitle","site","siteMetadata","fluid","Row","Col","xl","Menu","lg","md","ComponentsList","weightLabels","measuredTypeProps","fontFamily","split","weight","fontSize","Math","round","Number","parseFloat","lineHeight","TypographyPage","SEO","colSpan","headingSize","displaySize","style","require","INSIGHTS_TABS","freeze","SUMMARY","PROJECTS","COMPONENTS","HOOKS","UTILS","ICONS","INSIGHTS_PAGES","tab","path","module","exports","FEATURES","featureFlag","location","URLSearchParams","search","getAll","includes"],"sourceRoot":""}