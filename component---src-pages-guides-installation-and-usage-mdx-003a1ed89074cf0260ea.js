"use strict";(self.webpackChunkparagon_pattern_library_documentation=self.webpackChunkparagon_pattern_library_documentation||[]).push([[173],{83615:function(e,n,t){var a=t(27378);n.Z=function(e){let{h:n,children:t,id:r}=e;const o=`h${n}`;return a.createElement(o,{id:r,className:"pgn-doc__heading"},t)}},78115:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(27378),r=t(35318),o=t(58391),s=t(85403),m=t(7552),i=t(46197),c=t(42980),l=t(83615),d=t(40504);const p={h1:e=>a.createElement(l.Z,Object.assign({h:"1"},e)),h2:e=>a.createElement(l.Z,Object.assign({h:"2"},e)),h3:e=>a.createElement(l.Z,Object.assign({h:"3"},e)),h4:e=>a.createElement(l.Z,Object.assign({h:"4"},e)),h5:e=>a.createElement(l.Z,Object.assign({h:"5"},e)),h6:e=>a.createElement(l.Z,Object.assign({h:"6"},e)),pre:e=>a.createElement("div",e),code:m.Z,Link:o.Link};function u(e){var n;let{children:t,pageContext:o}=e;const{settings:m}=(0,a.useContext)(d.SettingsContext);return a.createElement(i.Z,{isAutoToc:!0},a.createElement(c.Z,{title:null==o||null===(n=o.frontmatter)||void 0===n?void 0:n.title}),a.createElement(s.Z,{size:m.containerWidth,className:"py-5"},a.createElement(r.MDXProvider,{components:p},t)))}},84504:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return l}});var a=t(53782),r=(t(27378),t(35318)),o=t(78115);const s=["components"],m={},i={_frontmatter:m},c=o.Z;function l(e){let{components:n}=e,t=(0,a.Z)(e,s);return(0,r.mdx)(c,Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"installation-and-usage"},"Installation and usage",(0,r.mdx)("a",{parentName:"h1","aria-hidden":"true",tabIndex:-1,href:"#installation-and-usage"},(0,r.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,r.mdx)("p",null,"Paragon components require React 16 or higher. To install Paragon into your project:"),(0,r.mdx)("p",null,"In terminal:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre"},"npm i --save @edx/paragon\n")),(0,r.mdx)("p",null,"In your React project:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { ComponentName } from '@edx/paragon';\n")),(0,r.mdx)("h2",{id:"scss-foundation"},"SCSS Foundation",(0,r.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#scss-foundation"},(0,r.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,r.mdx)("p",null,"Usage with no theme:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-scss"},'@import "@edx/paragon/styles/scss/core/core.scss";\n')),(0,r.mdx)("p",null,"Usage with a theme:"),(0,r.mdx)("p",null,"When working with a theme the order of imports is important: if you need to override Paragon's variables you must import theme's variables before Paragon core (that's because all variables in Paragon use ",(0,r.mdx)("inlineCode",{parentName:"p"},"!default")," flag which allows you to override them before importing, you can read more ",(0,r.mdx)("a",{parentName:"p",href:"https://sass-lang.com/documentation/variables#default-values"},"here"),"), while to override Paragon's styles, the theme's style overrides must be imported after."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-scss"},'@import "@my-brand/fonts.scss";\n@import "@my-brand/variables.scss";\n// Import the Paragon core after setting brand-themed variables.\n@import "@edx/paragon/styles/scss/core/core.scss";\n// Import brand overrides after the Paragon core.\n@import "@my-brand/overrides.scss";\n')),(0,r.mdx)("p",null,"Note that including fonts will affect load performance.  In some pages you may choose not to load the custom font."))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-guides-installation-and-usage-mdx-003a1ed89074cf0260ea.js.map