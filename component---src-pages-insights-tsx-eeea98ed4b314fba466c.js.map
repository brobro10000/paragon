{"version":3,"file":"component---src-pages-insights-tsx-eeea98ed4b314fba466c.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/ComponentsList.tsx","webpack://paragon-pattern-library-documentation/./src/components/Settings.tsx","webpack://paragon-pattern-library-documentation/./src/components/Toc.tsx","webpack://paragon-pattern-library-documentation/./src/components/PageLayout.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/SummaryUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ProjectUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ComponentUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/utils/getGithubProjectUrl.ts","webpack://paragon-pattern-library-documentation/./src/pages/insights.tsx","webpack://paragon-pattern-library-documentation/./src/config.js","webpack://paragon-pattern-library-documentation/./src/utils/hasFeatureFlagEnabled.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport { ComponentNavItem, IComponentNavItem } from './Menu';\n\nconst componentsQuery = graphql`\n  query componentsQuery {\n    components: allMdx(\n      filter: {\n        parent: {\n          internal: { owner: { nin: \"gatsby-transformer-react-docgen\" } }\n        }\n        frontmatter: { type: {} }\n      }\n      sort: { fields: frontmatter___title }\n    ) {\n      all: nodes {\n        ...ComponentPage\n      }\n    }\n  }\n\n  fragment ComponentPage on Mdx {\n    id\n    frontmatter {\n      categories\n      type\n      title\n      status\n    }\n    fields {\n      slug\n    }\n  }\n`;\n\nfunction ComponentsList() {\n  const { components } = useStaticQuery(componentsQuery);\n  const { all } = components;\n\n  return (\n    <Container className=\"py-3 bg-light-200 border-top border-light-300\">\n      <Container size=\"xl\" className=\"py-5\">\n        <div className=\"pgn-doc__menu-all-components pt-5\">\n          <h3 className=\"mb-4\">All components (A-Z)</h3>\n          <ul className=\"pgn-doc__menu-component-list list-unstyled small mb-4\">\n            {all.map((node: IComponentNavItem) => <ComponentNavItem key={node.id} {...node} />)}\n          </ul>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nexport default ComponentsList;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Sheet,\n  Form,\n  Icon,\n  IconButton,\n  Stack,\n  Nav,\n} from '~paragon-react';\nimport { Close } from '~paragon-icons';\n\nimport { Link } from 'gatsby';\nimport { LANGUAGES } from '../config';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface ISetting {\n  showMinimizedTitle?: boolean,\n}\n\nfunction Settings({ showMinimizedTitle }: ISetting) {\n  const {\n    settings,\n    handleSettingsChange,\n    showSettings,\n    closeSettings,\n  } = useContext(SettingsContext);\n\n  return (\n    <Sheet\n      position=\"right\"\n      show={showSettings}\n      variant=\"light\"\n      onClose={closeSettings}\n    >\n      <div className=\"pgn-doc__settings\">\n        <div className=\"pgn-doc__settings-title\">\n          <h3 className=\"mb-0\">Settings</h3>\n          <IconButton\n            src={Close}\n            iconAs={Icon}\n            alt=\"Close settings\"\n            onClick={closeSettings}\n            size=\"sm\"\n          />\n        </div>\n        <Stack gap={1}>\n          <Form.Group className=\"pgn-doc__settings-direction\">\n            <Form.Label className=\"pgn-doc__settings-label\">Text direction</Form.Label>\n            <Form.RadioSet\n              name=\"direction\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('direction', e.target.value)}\n              value={settings.direction}\n            >\n              <Form.Radio value=\"ltr\">Left to right</Form.Radio>\n              <Form.Radio value=\"rtl\">Right to left</Form.Radio>\n            </Form.RadioSet>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"pgn-doc__settings-label\">Language</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={settings.language}\n              onChange={(e: { target: { value: string; }; }) => handleSettingsChange('language', e.target.value)}\n            >\n              {LANGUAGES.map(lang => (\n                <option\n                  key={lang.code}\n                  value={lang.code}\n                >\n                  {lang.label}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          {!showMinimizedTitle && (\n            <Form.Group>\n              <Form.Label className=\"pgn-doc__settings-label\">Container Width</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={settings.containerWidth}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('containerWidth', e.target.value)}\n              >\n                <option value=\"xs\">xs</option>\n                <option value=\"sm\">sm</option>\n                <option value=\"md\">md (default)</option>\n                <option value=\"lg\">lg</option>\n                <option value=\"xl\">xl</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          <Nav className=\"pgn-doc__settings-nav--items\">\n            <Nav.Item>\n              <Link className=\"nav-link\" to=\"/changelog\">\n                Changelog\n              </Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"https://github.com/openedx/paragon\">\n                GitHub\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Stack>\n      </div>\n    </Sheet>\n  );\n}\n\nSettings.propTypes = {\n  showMinimizedTitle: PropTypes.bool,\n};\n\nSettings.defaultProps = {\n  showMinimizedTitle: false,\n};\n\nexport default Settings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Sticky } from '~paragon-react';\n\ninterface IItems {\n  url?: string,\n  title?: string,\n  items?: Array<IItems>,\n}\n\nexport interface IToc {\n  data: {\n    items?: Array<IItems>\n  },\n  className?: string,\n}\n\nfunction Toc({ data, className }: IToc) {\n  const [active, setActive] = useState('');\n  const observer = useRef<IntersectionObserver>();\n\n  useEffect(() => {\n    const handleObserver = (entries: IntersectionObserverEntry[]) => {\n      if (entries[0].intersectionRatio >= 0.5) {\n        setActive(entries[0].target.id);\n      }\n    };\n\n    observer.current = new IntersectionObserver(handleObserver, { rootMargin: '-50px 0px -80% 0px', threshold: 0.5 });\n    const elements = document.querySelectorAll('main h2, main h3, main h4, main h5, main h6');\n    elements.forEach((elem) => observer.current?.observe(elem));\n\n    return () => observer.current?.disconnect();\n  }, [data]);\n\n  const generateTree = (headings: { items?: Array<IItems> }) => (headings?.items?.length\n    ? (\n      <ul className=\"pgn-doc__toc-list\">\n        {headings.items.map(heading => (\n          <li key={heading.url}>\n            <a\n              href={heading.url}\n              className={classNames({ active: `#${active}` === heading.url })}\n            >\n              {heading.title}\n            </a>\n            {!!heading.items && generateTree(heading)}\n          </li>\n        ))}\n      </ul>\n    ) : null);\n\n  const tocTree = generateTree(data);\n\n  return tocTree ? (\n    <Sticky\n      offset={6}\n      className={classNames('pgn-doc__toc', className)}\n    >\n      <p className=\"pgn-doc__toc-header\">Contents</p>\n      {tocTree}\n    </Sticky>\n  ) : null;\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nToc.propTypes = {\n  data: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nToc.defaultProps = {\n  className: undefined,\n};\n\nexport default Toc;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport {\n  Container,\n  Nav,\n  Row,\n  Col,\n  Sticky,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport ComponentsList from './ComponentsList';\nimport Header from './header';\nimport Menu from './Menu';\nimport Settings from './Settings';\nimport Toc from './Toc';\nimport { SettingsContext } from '../context/SettingsContext';\n\nif (process.env.NODE_ENV === 'development') {\n  /* eslint-disable-next-line global-require */\n  require('~paragon-style/core/core.scss');\n}\n\nexport interface ILayout {\n  children: React.ReactNode,\n  showMinimizedTitle: boolean,\n  hideFooterComponentMenu: boolean,\n  isMdx: boolean,\n  tocData: Array<number>,\n}\n\nfunction Layout({\n  children,\n  showMinimizedTitle,\n  hideFooterComponentMenu,\n  isMdx,\n  tocData,\n}: ILayout) {\n  const isMobile = useMediaQuery({ maxWidth: breakpoints.extraLarge.minWidth });\n  const { settings } = useContext(SettingsContext);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title || 'Title'}\n        showMinimizedTitle={isMobile || showMinimizedTitle}\n      />\n      <Settings showMinimizedTitle={showMinimizedTitle} />\n      {isMdx || !hideFooterComponentMenu ? (\n        <Container fluid>\n          <Row className=\"flex-xl-nowrap\">\n            <Col className=\"d-none d-xl-block p-0\" xl={settings.containerWidth === 'xl' ? 'auto' : 2}>\n              <Sticky offset={6} className=\"pgn-doc__toc p-0 pt-3\">\n                <Menu />\n              </Sticky>\n            </Col>\n            <Col\n              xl={settings.containerWidth === 'xl' ? 10 : 8}\n              lg={9}\n              md={12}\n              as=\"main\"\n              className=\"flex-grow-1\"\n            >\n              {children}\n            </Col>\n            <Col\n              xl={2}\n              lg={3}\n              as={Toc}\n              data={tocData}\n              className=\"d-none d-lg-block\"\n            />\n          </Row>\n        </Container>\n      ) : (\n        <main className=\"flex-grow-1\">\n          {children}\n        </main>\n      )}\n      {!hideFooterComponentMenu && <ComponentsList />}\n      <Container as=\"footer\" className=\"py-3 border-top border-light-300\">\n        <Nav className=\"d-flex align-items-center\">\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/status\">\n              Library status\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/insights\">\n              Usage insights\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              className=\"muted-link\"\n              href=\"https://github.com/openedx/.github/blob/master/CODE_OF_CONDUCT.md\"\n            >\n              Code of Conduct\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link className=\"muted-link\" href=\"https://open.edx.org/\">\n              Open edX\n            </Nav.Link>\n          </Nav.Item>\n          <div className=\"flex-grow-1\" />\n          <a href=\"https://www.netlify.com\">\n            <img\n              src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\"\n              alt=\"Deploys by Netlify\"\n            />\n          </a>\n        </Nav>\n      </Container>\n    </div>\n  );\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  tocData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }),\n  showMinimizedTitle: PropTypes.bool,\n  hideFooterComponentMenu: PropTypes.bool,\n  isMdx: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  tocData: {},\n  showMinimizedTitle: false,\n  hideFooterComponentMenu: false,\n  isMdx: false,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\nexport interface ISummaryUsageExamples {\n  row: {\n    original: {\n      usages: [],\n    },\n  }\n}\n\nfunction SummaryUsageExamples({ row }: ISummaryUsageExamples) {\n  interface IProjectUsages {\n    filePath: string,\n    line: number,\n  }\n\n  interface IComponentUsages {\n    name: string,\n    usages: [IProjectUsages],\n    repositoryUrl: string,\n  }\n  const componentUsages = row.original.usages;\n  const componentUsagesExample = componentUsages.map(({\n    name: projectName,\n    usages: projectUsages,\n    repositoryUrl,\n  }: IComponentUsages) => (\n    <div className=\"pgn-doc__summary-usages__project mb-4\" key={projectName}>\n      <h5 className=\"font-weight-bold\">{projectName}</h5>\n      <ul className=\"list-unstyled\">\n        {projectUsages.map(({\n          filePath,\n          line,\n        }: IProjectUsages) => (\n          <li key={`${filePath}L#${line}`}>\n            {repositoryUrl ? (\n              <>\n                <Hyperlink\n                  destination={`${repositoryUrl}/${filePath}#L${line}`}\n                  target=\"_blank\"\n                >\n                  {filePath.split('/').slice(-1)}\n                </Hyperlink>\n                {' '}(line {line})\n              </>\n            ) : (\n              <>{filePath.split('/').slice(-1)} (line {line})</>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  ));\n\n  return <div>{componentUsagesExample}</div>;\n}\n\nSummaryUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default SummaryUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\ntype IProjectUsages = {\n  filePath: string,\n  line: number,\n};\n\nexport interface IProjectUsageExamples {\n  row: {\n    original: {\n      name: string,\n      repositoryUrl?: string,\n      usages: { [key: string]: Array<IProjectUsages> },\n    },\n  },\n}\n\nfunction ProjectUsageExamples({ row }: IProjectUsageExamples) {\n  const { repositoryUrl, usages } = row.original;\n\n  const orderedComponentUsages: { [key: string]: Array<IProjectUsages> } = Object.keys(usages)\n    .sort().reduce((obj: { [index: string]: any }, key) => {\n    // eslint-disable-next-line no-param-reassign\n      obj[key] = usages[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      {Object.keys(usages).length === 0 && (\n        <p>This project does not import any Paragon components, but may still use its SCSS styles.</p>\n      )}\n      {Object.entries(orderedComponentUsages).map(([componentName, usagesArray]) => (\n        <div className=\"pgn-doc__usages-modal mb-4\" key={componentName}>\n          <h5 className=\"font-weight-bold\">{componentName}</h5>\n          <ul className=\"list-unstyled\">\n            {usagesArray.map((usage) => (\n              <li key={`${usage.filePath}L#${usage.line}`}>\n                {repositoryUrl ? (\n                  <>\n                    <Hyperlink\n                      destination={`${repositoryUrl}/${usage.filePath}#L${usage.line}`}\n                      target=\"_blank\"\n                    >\n                      {usage.filePath}\n                    </Hyperlink>\n                    {' '}(line {usage.line})\n                  </>\n                ) : (\n                  <>{usage.filePath} (line {usage.line})</>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </>\n  );\n}\n\nProjectUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\ntype ProjectUsagesTypes = {\n  filePath: string,\n  line: number,\n};\n\nexport interface IComponentUsageExamples {\n  row: {\n    original: {\n      name: string,\n      repositoryUrl?: string,\n      usages: Array<ProjectUsagesTypes>,\n    },\n  },\n}\n\nfunction ComponentUsageExamples({ row }: IComponentUsageExamples) {\n  const { repositoryUrl, usages } = row.original;\n\n  return (\n    <div className=\"pgn-doc__component-usage__project\">\n      <ul className=\"list-unstyled\">\n        {usages.map(usage => (\n          <li key={`${usage.filePath}#L${usage.line}`}>\n            {repositoryUrl ? (\n              <>\n                <Hyperlink\n                  destination={`${repositoryUrl}/${usage.filePath}#L${usage.line}`}\n                  target=\"_blank\"\n                >\n                  {usage.filePath}\n                </Hyperlink>\n                {' '}(line {usage.line})\n              </>\n            ) : (\n              <>{usage.filePath} (line {usage.line})</>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nComponentUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ComponentUsageExamples;\n","const getGithubProjectUrl = (repository?: string | { type: string, url: string }): string | undefined => {\n  let repositoryUrl;\n  if (typeof repository === 'string') {\n    repositoryUrl = repository;\n  } else if (repository?.url) {\n    repositoryUrl = repository.url;\n  } else {\n    // unsupported repository field\n    return undefined;\n  }\n  const parts = repositoryUrl.split('/');\n  const githubDomainIndex = parts.findIndex((part: string) => part === 'github.com');\n  parts.splice(0, githubDomainIndex);\n  const parsedRepositoryUrl = parts.join('/').replace('.git', '');\n  return `https://${parsedRepositoryUrl}/blob/master`;\n};\n\nexport default getGithubProjectUrl;\n","import React, { useContext } from 'react';\nimport { navigate } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  DataTable,\n  Tabs,\n  Tab,\n  Container,\n  TextFilter,\n  CheckboxFilter,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\nimport SummaryUsageExamples, { ISummaryUsageExamples } from '../components/insights/SummaryUsageExamples';\nimport ProjectUsageExamples, { IProjectUsageExamples } from '../components/insights/ProjectUsageExamples';\nimport ComponentUsageExamples, { IComponentUsageExamples } from '../components/insights/ComponentUsageExamples';\nimport getGithubProjectUrl from '../utils/getGithubProjectUrl';\n// @ts-ignore\nimport dependentProjectsAnalysis from '../../../dependent-usage.json'; // eslint-disable-line\nimport { INSIGHTS_TABS, INSIGHTS_PAGES } from '../config';\nimport InsightsContext from '../context/InsightsContext';\n\nconst ICON_TYPE = 'Icon';\nconst TABLE_PAGE_SIZE = 10;\n\nconst {\n  lastModified: analysisLastUpdated,\n  projectUsages: dependentProjectsUsages,\n} = dependentProjectsAnalysis;\n\ninterface IUsage {\n  filePath: string,\n  line: number,\n  column: number,\n  version: string,\n}\n\ninterface IDependentUsage {\n  version?: string,\n  name?: string,\n  repository?: { type: string, url: string },\n  repositoryUrl?: string,\n  count: number,\n  folderName?: string,\n  usages: {\n    [key: string]: IUsage[],\n  },\n}\n\ninterface IComponentUsageData {\n  componentUsageCount: number,\n  folderName: string,\n  name: string,\n  repositoryUrl: string,\n  usages: IUsage[],\n  version: string,\n}\n\ninterface IInsightsContext {\n  paragonTypes: {\n    [key: string]: string\n  },\n  isParagonIcon: Function,\n}\n\ninterface IFilterData {\n  name: string,\n  number: number | undefined,\n  value: string\n}\n\ninterface TabsDataType {\n  components: string[],\n  hooks: string[],\n  utils: string[],\n  icons: string[],\n}\n\nexport interface IComponentUsage {\n  name: string,\n  componentUsageInProjects: IComponentUsageData[],\n}\n\nconst dependentProjects: IDependentUsage[] = [];\n\nconst componentsUsage: Record<string, IComponentUsageData[]> = dependentProjectsUsages\n  .reduce((accumulator: any, project: any) => {\n    dependentProjects.push({\n      ...project,\n      repositoryUrl: getGithubProjectUrl(project.repository),\n      count: Object.values<IUsage[]>(project.usages).reduce((acc, usage) => acc + usage.length, 0),\n    });\n\n    Object.keys(project.usages).forEach(componentName => {\n      if (!accumulator[componentName]) {\n        accumulator[componentName] = [];\n      }\n      accumulator[componentName] = accumulator[componentName].concat({\n        name: project.name,\n        folderName: project.folderName,\n        version: project.version,\n        repositoryUrl: getGithubProjectUrl(project.repository),\n        componentUsageCount: project.usages[componentName].length,\n        usages: project.usages[componentName],\n      });\n    });\n    return accumulator;\n  }, {});\n\nconst componentsInUsage = Object.keys(componentsUsage);\n\nconst round = (n: number) => Math.round(n * 10) / 10;\n\nconst getEmptyMessage = (text: string) => `Currently there are no ${text} usage yet`;\n\nfunction SummaryUsage() {\n  const { paragonTypes = {}, isParagonIcon = () => false } = useContext(InsightsContext) as IInsightsContext;\n  const isMedium = useMediaQuery({ minWidth: breakpoints.large.minWidth });\n\n  const typeCount = Object.keys(paragonTypes)\n    .reduce((accumulator: { [key: string]: number | undefined }, componentName) => {\n      const type = paragonTypes[componentName] || (isParagonIcon(componentName) && ICON_TYPE);\n      if (componentsInUsage.includes(componentName)) {\n        accumulator[type] = (accumulator[type] || 0) + 1;\n      }\n      return accumulator;\n    }, {});\n\n  const filterValues: IFilterData[] = Object.keys(paragonTypes)\n    .map((key) => paragonTypes[key])\n    .filter((v, i, a) => a.indexOf(v) === i)\n    .map(type => ({ name: type, number: typeCount[type], value: type }));\n  // Number of Icons is calculated in the statement below. Initialized as `undefined` to not display '0'.\n  const iconsType: IFilterData = { name: ICON_TYPE, number: undefined, value: ICON_TYPE };\n\n  const summaryComponentsUsage = Object.entries<IComponentUsageData[]>(componentsUsage).map(\n    ([componentName, usages]) => {\n      const componentUsageCounts = usages\n        .reduce((accumulator, project) => accumulator + project.componentUsageCount, 0);\n      let type = paragonTypes[componentName];\n      if (!type && isParagonIcon(componentName)) {\n        type = ICON_TYPE;\n        iconsType.number = (iconsType.number || 0) + 1;\n      }\n      return {\n        name: componentName,\n        count: componentUsageCounts,\n        usages: componentsUsage[componentName],\n        type,\n      };\n    },\n  );\n  filterValues.push(iconsType);\n  typeCount[ICON_TYPE] = iconsType.number;\n\n  const summaryTableData = summaryComponentsUsage.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    return nameA < nameB ? -1 : 1;\n  });\n\n  const averageComponentsUsedPerProject = dependentProjects\n    .reduce((accumulator, project) => accumulator + project.count, 0) / dependentProjects.length;\n\n  return (\n    <div className=\"pt-5 mb-5\">\n      <div className=\"mb-5\">\n        <h2>Overview</h2>\n        <p>\n          Paragon is used by at least <strong>{dependentProjects.length} projects</strong>, with an average\n          of <strong>{round(averageComponentsUsedPerProject)} imports</strong> per project.\n        </p>\n      </div>\n      <h3>Overall usage</h3>\n      <DataTable\n        isPaginated\n        isExpandable\n        isSortable\n        showFiltersInSidebar={isMedium}\n        isFilterable\n        defaultColumnValues={{ Filter: TextFilter }}\n        itemCount={summaryTableData.length}\n        data={summaryTableData}\n        renderRowSubComponent={({ row }: ISummaryUsageExamples) => <SummaryUsageExamples row={row} />}\n        initialState={{ pageSize: TABLE_PAGE_SIZE }}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Component Name',\n            accessor: 'name',\n          },\n          {\n            Header: 'Instance Count',\n            accessor: 'count',\n            disableFilters: true,\n          },\n          {\n            Header: 'Type',\n            accessor: 'type',\n            Filter: CheckboxFilter,\n            filter: 'includesValue',\n            filterChoices: filterValues,\n          },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No summary available\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n}\n\n// Paragon version in all projects\nfunction ProjectsUsage() {\n  return (\n    <div className=\"pt-5 mb-5\">\n      <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n      <DataTable\n        isExpandable\n        isSortable\n        itemCount={dependentProjects.length}\n        data={dependentProjects}\n        renderRowSubComponent={({ row }: IProjectUsageExamples) => <ProjectUsageExamples row={row} />}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Project Name',\n            accessor: 'folderName',\n          },\n          { Header: 'Paragon Version', accessor: 'version' },\n          { Header: 'Import Count', accessor: 'count' },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No projects\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n}\n\n// Usage info about a single component\nfunction ComponentUsage({ name, componentUsageInProjects }: IComponentUsage) {\n  return (\n    <div className=\"mb-5\">\n      <h3 className=\"mb-4\">{name}</h3>\n      <DataTable\n        isExpandable\n        isSortable\n        itemCount={componentUsageInProjects.length} // eslint-disable-line\n        data={componentUsageInProjects}\n        renderRowSubComponent={({ row }: IComponentUsageExamples) => <ComponentUsageExamples row={row} />}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Project Name',\n            accessor: 'folderName',\n          },\n          { Header: 'Paragon Version', accessor: 'version' },\n          { Header: 'Instance Count', accessor: 'componentUsageCount' },\n        ]}\n      >\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No usages\" />\n      </DataTable>\n    </div>\n  );\n}\n\n// Usage info for all components\nfunction ComponentsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('components')}\n    </div>\n  );\n}\n\n// Usage info for all hooks\nfunction HooksUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('hooks')}\n    </div>\n  );\n}\n\n// Usage info for all utils\nfunction UtilsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('utils')}\n    </div>\n  );\n}\n\n// Usage info for all utils\nfunction IconsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('utils')}\n    </div>\n  );\n}\n\nexport default function InsightsPage({ pageContext: { tab } }: { pageContext: { tab: string } }) {\n  const { paragonTypes = {}, isParagonIcon = () => false } = useContext(InsightsContext) as IInsightsContext;\n  const {\n    components, hooks, utils, icons,\n  } = Object.keys(componentsUsage).reduce<TabsDataType>((acc, usage) => {\n    if (paragonTypes[usage] === 'Component') {\n      acc.components.push(usage);\n    } else if (paragonTypes[usage] === 'Hook') {\n      acc.hooks.push(usage);\n    } else if (['Text', 'Function', 'Object'].includes(paragonTypes[usage])) {\n      acc.utils.push(usage);\n    } else if (isParagonIcon(usage)) {\n      acc.icons.push(usage);\n    }\n    return acc;\n  }, {\n    components: [], hooks: [], utils: [], icons: [],\n  });\n\n  const handleOnSelect = (value: string) => {\n    if (value !== tab) {\n      global.analytics.track(`openedx.paragon.docs.insights.tabs.${value.toLowerCase().trim()}.clicked`);\n      navigate(INSIGHTS_PAGES.find(item => item.tab === value)!.path);\n    }\n  };\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Usage Insights\" />\n        <header className=\"mb-5\">\n          <h1>Usage Insights</h1>\n          <p>Last updated: {new Date(analysisLastUpdated).toLocaleDateString()}</p>\n        </header>\n        <Tabs\n          activeKey={tab}\n          id=\"uncontrolled-tab-example\"\n          onSelect={handleOnSelect}\n        >\n          <Tab eventKey={INSIGHTS_TABS.SUMMARY} title=\"Summary\">\n            {tab === INSIGHTS_TABS.SUMMARY && (\n              <SummaryUsage />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.PROJECTS} title=\"Projects\">\n            {tab === INSIGHTS_TABS.PROJECTS && (\n              <ProjectsUsage />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.COMPONENTS} title=\"Components\">\n            {tab === INSIGHTS_TABS.COMPONENTS && (\n              <ComponentsUsage data={components} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.HOOKS} title=\"Hooks\">\n            {tab === INSIGHTS_TABS.HOOKS && (\n              <HooksUsage data={hooks} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.UTILS} title=\"Utils\">\n            {tab === INSIGHTS_TABS.UTILS && (\n              <UtilsUsage data={utils} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.ICONS} title=\"Icons\">\n            {tab === INSIGHTS_TABS.ICONS && (\n              <IconsUsage data={icons} />\n            )}\n          </Tab>\n        </Tabs>\n      </Container>\n    </Layout>\n  );\n}\n\nInsightsPage.propTypes = {\n  pageContext: PropTypes.shape({\n    tab: PropTypes.oneOf(Object.values(INSIGHTS_TABS)),\n  }).isRequired,\n};\n\nComponentUsage.propTypes = {\n  name: PropTypes.string.isRequired,\n  componentUsageInProjects: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    folderName: PropTypes.string,\n    version: PropTypes.string,\n    repositoryUrl: PropTypes.string,\n    componentUsageCount: PropTypes.number,\n    usages: PropTypes.arrayOf(PropTypes.shape({\n      column: PropTypes.number,\n      filePath: PropTypes.string,\n      line: PropTypes.number,\n      version: PropTypes.string,\n    })),\n  })).isRequired,\n};\n\nconst usagePropTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nComponentsUsage.propTypes = usagePropTypes;\nHooksUsage.propTypes = usagePropTypes;\nUtilsUsage.propTypes = usagePropTypes;\nIconsUsage.propTypes = usagePropTypes;\n","/* eslint-disable */\nconst hasFeatureFlagEnabled = require('./utils/hasFeatureFlagEnabled');\n/* eslint-enable */\n\n// Feature flags used throughout the site should be configured here.\n// You should generally allow two ways of enabling a feature flag:\n// 1. Through environment variables which will enable a feature flag at build time\n//    without a way of disabling it, to do so during local development edit the\n//    .env.development file located at the root of docs site project (note that\n//    you will need to restart development server for the changes to take effect).\n//    See DIRECTION_SWITCHER feature for example of configuring feature flags this way.\n// 2. As a query parameter in the URL, using`hasFeatureFlagEnabled` util function.\n//    This will allow to enable feature flag by providing its name as a feature?\n//    query parameter in the URL. (e.g. to enable LANGUAGE_SWITCHER feature you would append\n//    '?feature=LANGUAGE_SWITCHER' to the URL)\nconst FEATURES = {};\n\nconst LANGUAGES = [\n  {\n    label: 'English',\n    code: 'en',\n  },\n  {\n    label: 'Arabic',\n    code: 'ar',\n  },\n  {\n    label: 'Catalan',\n    code: 'ca',\n  },\n  {\n    label: 'Chinese',\n    code: 'zh-cn',\n  },\n  {\n    label: 'French',\n    code: 'fr',\n  },\n  {\n    label: 'Hebrew',\n    code: 'he',\n  },\n  {\n    label: 'Indonesian',\n    code: 'id',\n  },\n  {\n    label: 'Italian (Italy)',\n    code: 'it-it',\n  },\n  {\n    label: 'Polish',\n    code: 'pl',\n  },\n  // {\n  //   label: 'Portuguese (Brazil)',\n  //   code: 'pt-br',\n  // },\n  {\n    label: 'Portuguese (Portugal)',\n    code: 'pt-pt',\n  },\n  {\n    label: 'Russian',\n    code: 'ru',\n  },\n  {\n    label: 'Spanish',\n    code: 'es-419',\n  },\n  {\n    label: 'Spanish (Argentina)',\n    code: 'es-ar',\n  },\n  {\n    label: 'Spanish (Spain)',\n    code: 'es-es',\n  },\n  {\n    label: 'Thai',\n    code: 'th',\n  },\n  {\n    label: 'Ukrainian',\n    code: 'uk',\n  },\n  // {\n  //   label: 'Korean',\n  //   code: 'ko-kr',\n  // },\n  {\n    label: 'Turkish (Turkey)',\n    code: 'tr-tr',\n  },\n];\n\nconst INSIGHTS_TABS = Object.freeze({\n  SUMMARY: 'Summary',\n  PROJECTS: 'Projects',\n  COMPONENTS: 'Components',\n  HOOKS: 'Hooks',\n  UTILS: 'Utils',\n  ICONS: 'Icons',\n});\n\nconst INSIGHTS_PAGES = [\n  {\n    tab: INSIGHTS_TABS.SUMMARY,\n    path: '/insights',\n  },\n  {\n    tab: INSIGHTS_TABS.PROJECTS,\n    path: '/insights/projects',\n  },\n  {\n    tab: INSIGHTS_TABS.COMPONENTS,\n    path: '/insights/components',\n  },\n  {\n    tab: INSIGHTS_TABS.HOOKS,\n    path: '/insights/hooks',\n  },\n  {\n    tab: INSIGHTS_TABS.UTILS,\n    path: '/insights/utils',\n  },\n  {\n    tab: INSIGHTS_TABS.ICONS,\n    path: '/insights/icons',\n  },\n];\n\nmodule.exports = {\n  INSIGHTS_TABS,\n  INSIGHTS_PAGES,\n  FEATURES,\n  LANGUAGES,\n};\n","/**\n * Determines whether a specified feature flag is enabled.\n *\n * @param {string} featureFlag\n * @returns true if feature flag is in `?feature` query parameter\n */\nfunction hasFeatureFlagEnabled(featureFlag) {\n  const { location } = global;\n  if (!location) {\n    return false;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  const features = searchParams.getAll('feature');\n  return features.includes(featureFlag);\n}\n\nmodule.exports = hasFeatureFlagEnabled;\n"],"names":["components","useStaticQuery","all","React","Container","className","size","map","node","ComponentNavItem","Object","assign","key","id","Settings","_ref","showMinimizedTitle","settings","handleSettingsChange","showSettings","closeSettings","useContext","SettingsContext","Sheet","position","show","variant","onClose","IconButton","src","Close","iconAs","Icon","alt","onClick","Stack","gap","Form","name","onChange","e","target","value","direction","as","language","LANGUAGES","lang","code","label","containerWidth","Nav","Link","to","href","defaultProps","Toc","data","active","setActive","useState","observer","useRef","useEffect","current","IntersectionObserver","entries","intersectionRatio","rootMargin","threshold","document","querySelectorAll","forEach","elem","_observer$current","observe","_observer$current2","disconnect","generateTree","headings","_headings$items","items","length","heading","url","classNames","title","tocTree","Sticky","offset","itemsShape","PropTypes","undefined","Layout","_data$site$siteMetada","children","hideFooterComponentMenu","isMdx","tocData","isMobile","useMediaQuery","maxWidth","breakpoints","Header","siteTitle","site","siteMetadata","fluid","Row","Col","xl","Menu","lg","md","ComponentsList","row","componentUsagesExample","original","usages","_ref2","projectName","projectUsages","repositoryUrl","_ref3","filePath","line","Hyperlink","destination","split","slice","orderedComponentUsages","keys","sort","reduce","obj","componentName","usagesArray","usage","repository","parts","githubDomainIndex","findIndex","part","splice","join","replace","ICON_TYPE","TABLE_PAGE_SIZE","lastModified","analysisLastUpdated","dependentProjectsUsages","dependentProjectsAnalysis","dependentProjects","componentsUsage","accumulator","project","push","_objectSpread","getGithubProjectUrl","count","values","acc","concat","folderName","version","componentUsageCount","componentsInUsage","round","n","Math","getEmptyMessage","text","SummaryUsage","paragonTypes","isParagonIcon","InsightsContext","isMedium","minWidth","typeCount","type","includes","filterValues","filter","v","i","a","indexOf","number","iconsType","summaryComponentsUsage","componentUsageCounts","summaryTableData","b","toUpperCase","averageComponentsUsedPerProject","DataTable","isPaginated","isExpandable","isSortable","showFiltersInSidebar","isFilterable","defaultColumnValues","Filter","TextFilter","itemCount","renderRowSubComponent","SummaryUsageExamples","initialState","pageSize","columns","Cell","accessor","disableFilters","CheckboxFilter","filterChoices","content","ProjectsUsage","ProjectUsageExamples","ComponentUsage","_ref4","componentUsageInProjects","_ref5","ComponentUsageExamples","ComponentsUsage","_ref6","HooksUsage","_ref7","UtilsUsage","_ref8","IconsUsage","_ref9","InsightsPage","_ref10","pageContext","tab","hooks","utils","icons","SEO","Date","toLocaleDateString","Tabs","activeKey","onSelect","global","analytics","track","toLowerCase","trim","navigate","INSIGHTS_PAGES","item","path","Tab","eventKey","INSIGHTS_TABS","require","freeze","SUMMARY","PROJECTS","COMPONENTS","HOOKS","UTILS","ICONS","module","exports","FEATURES","featureFlag","location","URLSearchParams","search","getAll"],"sourceRoot":""}