{"version":3,"file":"component---src-pages-status-tsx-108f9b25366e6979144e.js","mappings":"iQASO,SAASA,EAAgB,GAA6C,IAA7C,OAAEC,EAAM,aAAEC,GAAgC,EACxE,OAAKD,EAEH,wBACEE,UAAY,oBAAmBD,GAC1B,2BAA2BD,EAAOG,cAAcC,QAAQ,IAAK,QAElE,4BAAOJ,IANW,IASxB,CAOAD,EAAgBM,aAAe,CAC7BJ,cAAc,G,0BCfD,SAASK,IACtB,OACE,gBAAC,IAAM,KACL,gBAACC,EAAA,EAAS,CAACC,KAAK,KAAKN,UAAU,QAE7B,gBAACO,EAAA,EAAG,CAACC,MAAM,WACX,0BAAI,kBAEJ,0BAAI,qBACJ,gBAAC,EAAAC,YAAW,CACVC,MAAK,aAeLC,OAAQ,IAAgB,IAAf,OAAEC,GAAQ,EACjB,IAAKA,IAAWA,EAAOC,MAAS,OAAO,KACvC,MAAMC,EAAaF,EAAOC,MAAME,KAAI,QAAC,YAAEC,GAA0B,SAAKA,CAAW,IAC9EC,QAAO,QAAC,MAAET,GAAoB,QAAe,iBAAVA,CAAwB,IAU9D,OACE,gBAACU,EAAA,EAAS,CACRC,KAAML,EAAWC,KAAI,QAAC,MACpBP,EAAK,OAAEV,EAAM,aAAEsB,EAAY,UAAEC,EAAS,MAAEC,GACjC,QAAM,CACbC,KACE,uBAAKvB,UAAU,4BACb,0BAAKQ,EAAM,IAAC,gBAACX,EAAe,CAACC,OAAQA,KACrC,2BAAMwB,IAGVF,aAAc,gBAACvB,EAAe,CAACC,OAAQsB,IACvCC,UAAW,gBAACxB,EAAe,CAACC,OAAQuB,IACrC,IACDG,QAAS,CACP,CACEC,OAAQ,YACRC,SAAU,QAEZ,CACED,OAAQ,SACRC,SAAU,gBAEZ,CACED,OAAQ,cACRC,SAAU,eAId,gBAACR,EAAA,QAAe,MACN,KAO1B,C","sources":["webpack://paragon-pattern-library-documentation/./src/components/doc-elements.tsx","webpack://paragon-pattern-library-documentation/./src/pages/status.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface IComponentStatus {\n  status: string,\n  noLeftMargin?: string,\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport function ComponentStatus({ status, noLeftMargin }: IComponentStatus) {\n  if (!status) { return null; }\n  return (\n    <span\n      className={`status-indicator ${noLeftMargin\n        && 'status-no-left-margin'} ${status.toLowerCase().replace(' ', '-')}`}\n    >\n      <span>{status}</span>\n    </span>\n  );\n}\n\nComponentStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  noLeftMargin: PropTypes.bool,\n};\n\nComponentStatus.defaultProps = {\n  noLeftMargin: false,\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { DataTable, Container } from '~paragon-react'; // eslint-disable-line\nimport { ComponentStatus } from '../components/doc-elements';\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\n\nexport interface IComponents {\n  frontmatter?: string,\n  title?: string,\n}\n\nexport default function StatusPage() {\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Status\" />\n        <h1>Library Status</h1>\n\n        <h3>Components Status</h3>\n        <StaticQuery\n          query={graphql`query ComponentStatusQuery {\n            allMdx(filter: {frontmatter: {type: {eq: \"component\"}}}, sort: {fields: frontmatter___title}) {\n              nodes {\n                frontmatter {\n                  designStatus\n                  devStatus\n                  status\n                  notes\n                  status\n                  title\n                  type\n                }\n              }\n            }\n          }`}\n          render={({ allMdx }) => {\n            if (!allMdx || !allMdx.nodes) { return null; }\n            const components = allMdx.nodes.map(({ frontmatter }: IComponents) => frontmatter)\n              .filter(({ title }: IComponents) => title !== 'My Component');\n\n            interface ITable {\n              title: string,\n              status: string,\n              designStatus: string,\n              devStatus: string,\n              notes: string,\n            }\n\n            return (\n              <DataTable\n                data={components.map(({\n                  title, status, designStatus, devStatus, notes,\n                }: ITable) => ({\n                  name: (\n                    <div className=\"status-indicator-wrapper\">\n                      <h5>{title} <ComponentStatus status={status} /></h5>\n                      <pre>{notes}</pre>\n                    </div>\n                  ),\n                  designStatus: <ComponentStatus status={designStatus} />,\n                  devStatus: <ComponentStatus status={devStatus} />,\n                }))}\n                columns={[\n                  {\n                    Header: 'Component',\n                    accessor: 'name',\n                  },\n                  {\n                    Header: 'Design',\n                    accessor: 'designStatus',\n                  },\n                  {\n                    Header: 'Development',\n                    accessor: 'devStatus',\n                  },\n                ]}\n              >\n                <DataTable.Table />\n              </DataTable>\n            );\n          }}\n        />\n      </Container>\n    </Layout>\n  );\n}\n"],"names":["ComponentStatus","status","noLeftMargin","className","toLowerCase","replace","defaultProps","StatusPage","Container","size","SEO","title","StaticQuery","query","render","allMdx","nodes","components","map","frontmatter","filter","DataTable","data","designStatus","devStatus","notes","name","columns","Header","accessor"],"sourceRoot":""}