{"version":3,"file":"component---src-pages-status-tsx-5b3d98c38eee330533df.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/ComponentsList.tsx","webpack://paragon-pattern-library-documentation/./src/components/Settings.tsx","webpack://paragon-pattern-library-documentation/./src/components/Toc.tsx","webpack://paragon-pattern-library-documentation/./src/components/LeaveFeedback.tsx","webpack://paragon-pattern-library-documentation/./src/components/PageLayout.tsx","webpack://paragon-pattern-library-documentation/./src/components/doc-elements.tsx","webpack://paragon-pattern-library-documentation/./src/pages/status.tsx","webpack://paragon-pattern-library-documentation/./src/config.js","webpack://paragon-pattern-library-documentation/./src/utils/hasFeatureFlagEnabled.js"],"sourcesContent":["import * as React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport { Container } from '~paragon-react';\nimport { ComponentNavItem, IComponentNavItem } from './Menu';\n\nconst componentsQuery = graphql`\n  query componentsQuery {\n    components: allMdx(\n      filter: {\n        parent: {\n          internal: { owner: { nin: \"gatsby-transformer-react-docgen\" } }\n        }\n        frontmatter: { type: {} }\n      }\n      sort: { fields: frontmatter___title }\n    ) {\n      all: nodes {\n        ...ComponentPage\n      }\n    }\n  }\n\n  fragment ComponentPage on Mdx {\n    id\n    frontmatter {\n      categories\n      type\n      title\n      status\n    }\n    fields {\n      slug\n    }\n  }\n`;\n\nfunction ComponentsList() {\n  const { components } = useStaticQuery(componentsQuery);\n  const { all } = components;\n\n  return (\n    <Container className=\"py-3 bg-light-200 border-top border-light-300\">\n      <Container size=\"xl\" className=\"py-5\">\n        <div className=\"pgn-doc__menu-all-components pt-5\">\n          <h3 className=\"mb-4\">All components (A-Z)</h3>\n          <ul className=\"pgn-doc__menu-component-list list-unstyled small mb-4\">\n            {all.map((node: IComponentNavItem) => <ComponentNavItem key={node.id} {...node} />)}\n          </ul>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n\nexport default ComponentsList;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Sheet,\n  Form,\n  Icon,\n  IconButton,\n  Stack,\n  Nav,\n} from '~paragon-react';\nimport { Close } from '~paragon-icons';\n\nimport { Link } from 'gatsby';\nimport { LANGUAGES } from '../config';\n\nimport { SettingsContext } from '../context/SettingsContext';\n\nexport interface ISetting {\n  showMinimizedTitle?: boolean,\n}\n\nfunction Settings({ showMinimizedTitle }: ISetting) {\n  const {\n    settings,\n    handleSettingsChange,\n    showSettings,\n    closeSettings,\n  } = useContext(SettingsContext);\n\n  return (\n    <Sheet\n      position=\"right\"\n      show={showSettings}\n      variant=\"light\"\n      onClose={closeSettings}\n    >\n      <div className=\"pgn-doc__settings\">\n        <div className=\"pgn-doc__settings-title\">\n          <h3 className=\"mb-0\">Settings</h3>\n          <IconButton\n            src={Close}\n            iconAs={Icon}\n            alt=\"Close settings\"\n            onClick={closeSettings}\n            size=\"sm\"\n          />\n        </div>\n        <Stack gap={1}>\n          <Form.Group className=\"pgn-doc__settings-direction\">\n            <Form.Label className=\"pgn-doc__settings-label\">Text direction</Form.Label>\n            <Form.RadioSet\n              name=\"direction\"\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('direction', e.target.value)}\n              value={settings.direction}\n            >\n              <Form.Radio value=\"ltr\">Left to right</Form.Radio>\n              <Form.Radio value=\"rtl\">Right to left</Form.Radio>\n            </Form.RadioSet>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"pgn-doc__settings-label\">Language</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={settings.language}\n              onChange={(e: { target: { value: string; }; }) => handleSettingsChange('language', e.target.value)}\n            >\n              {LANGUAGES.map(lang => (\n                <option\n                  key={lang.code}\n                  value={lang.code}\n                >\n                  {lang.label}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          {!showMinimizedTitle && (\n            <Form.Group>\n              <Form.Label className=\"pgn-doc__settings-label\">Container Width</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={settings.containerWidth}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) => handleSettingsChange('containerWidth', e.target.value)}\n              >\n                <option value=\"xs\">xs</option>\n                <option value=\"sm\">sm</option>\n                <option value=\"md\">md (default)</option>\n                <option value=\"lg\">lg</option>\n                <option value=\"xl\">xl</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n          <Nav className=\"pgn-doc__settings-nav--items\">\n            <Nav.Item>\n              <Link className=\"nav-link\" to=\"/changelog\">\n                Changelog\n              </Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link href=\"https://github.com/openedx/paragon\">\n                GitHub\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Stack>\n      </div>\n    </Sheet>\n  );\n}\n\nSettings.propTypes = {\n  showMinimizedTitle: PropTypes.bool,\n};\n\nSettings.defaultProps = {\n  showMinimizedTitle: false,\n};\n\nexport default Settings;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Sticky } from '~paragon-react';\n\ninterface IItems {\n  url?: string,\n  title?: string,\n  items?: Array<IItems>,\n}\n\nexport interface IToc {\n  data: {\n    items?: Array<IItems>\n  },\n  className?: string,\n}\n\nfunction Toc({ data, className }: IToc) {\n  const [active, setActive] = useState('');\n  const observer = useRef<IntersectionObserver>();\n\n  useEffect(() => {\n    const handleObserver = (entries: IntersectionObserverEntry[]) => {\n      if (entries[0].intersectionRatio >= 0.5) {\n        setActive(entries[0].target.id);\n      }\n    };\n\n    observer.current = new IntersectionObserver(handleObserver, { rootMargin: '-50px 0px -80% 0px', threshold: 0.5 });\n    const elements = document.querySelectorAll('main h2, main h3, main h4, main h5, main h6');\n    elements.forEach((elem) => observer.current?.observe(elem));\n\n    return () => observer.current?.disconnect();\n  }, [data]);\n\n  const generateTree = (headings: { items?: Array<IItems> }) => (headings?.items?.length\n    ? (\n      <ul className=\"pgn-doc__toc-list\">\n        {headings.items.map(heading => (\n          <li key={heading.url}>\n            <a\n              href={heading.url}\n              className={classNames({ active: `#${active}` === heading.url })}\n            >\n              {heading.title}\n            </a>\n            {!!heading.items && generateTree(heading)}\n          </li>\n        ))}\n      </ul>\n    ) : null);\n\n  const tocTree = generateTree(data);\n\n  return tocTree ? (\n    <Sticky\n      offset={6}\n      className={classNames('pgn-doc__toc', className)}\n    >\n      <p className=\"pgn-doc__toc-header\">Contents</p>\n      {tocTree}\n    </Sticky>\n  ) : null;\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nToc.propTypes = {\n  data: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }).isRequired,\n  className: PropTypes.string,\n};\n\nToc.defaultProps = {\n  className: undefined,\n};\n\nexport default Toc;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Nav } from '~paragon-react';\nimport { useLocation } from '@reach/router';\n\nfunction LeaveFeedback(props) {\n  const location = useLocation();\n  const FEEDBACK_URL = `https://github.com/openedx/paragon/issues/new?title=%5Bparagon-openedx.netlify.app%5D%20Feedback%20(on%20${location.pathname})&amp;labels=docs&template=feedback_template.md`;\n\n  const handleLinkFeedbackClick = () => {\n    global.analytics.track('openedx.paragon.docs.leave_feedback.clicked');\n  };\n\n  return (\n    <Nav.Link onClick={handleLinkFeedbackClick} href={FEEDBACK_URL} target=\"_blank\" {...props}>\n      Leave feedback\n    </Nav.Link>\n  );\n}\n\nLeaveFeedback.propTypes = {\n  className: PropTypes.string,\n};\n\nLeaveFeedback.defaultProps = {\n  className: 'muted-link',\n};\n\nexport default LeaveFeedback;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport {\n  Container,\n  Nav,\n  Row,\n  Col,\n  Sticky,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport ComponentsList from './ComponentsList';\nimport Header from './header';\nimport Menu from './Menu';\nimport Settings from './Settings';\nimport Toc from './Toc';\nimport { SettingsContext } from '../context/SettingsContext';\nimport LeaveFeedback from './LeaveFeedback';\n\nif (process.env.NODE_ENV === 'development') {\n  /* eslint-disable-next-line global-require */\n  require('~paragon-style/core/core.scss');\n}\n\nexport interface ILayout {\n  children: React.ReactNode,\n  showMinimizedTitle: boolean,\n  hideFooterComponentMenu: boolean,\n  isMdx: boolean,\n  tocData: Array<number>,\n}\n\nfunction Layout({\n  children,\n  showMinimizedTitle,\n  hideFooterComponentMenu,\n  isMdx,\n  tocData,\n}: ILayout) {\n  const isMobile = useMediaQuery({ maxWidth: breakpoints.extraLarge.minWidth });\n  const { settings } = useContext(SettingsContext);\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title || 'Title'}\n        showMinimizedTitle={isMobile || showMinimizedTitle}\n      />\n      <Settings showMinimizedTitle={showMinimizedTitle} />\n      {isMdx || !hideFooterComponentMenu ? (\n        <Container fluid>\n          <Row className=\"flex-xl-nowrap\">\n            <Col className=\"d-none d-xl-block p-0\" xl={settings.containerWidth === 'xl' ? 'auto' : 2}>\n              <Sticky offset={6} className=\"pgn-doc__toc p-0 pt-3\">\n                <Menu />\n              </Sticky>\n            </Col>\n            <Col\n              xl={settings.containerWidth === 'xl' ? 10 : 8}\n              lg={9}\n              md={12}\n              as=\"main\"\n              className=\"flex-grow-1\"\n            >\n              {children}\n              <Container size=\"md\">\n                <hr />\n                <LeaveFeedback className=\"pgn__docs-page-feedback-link\" />\n              </Container>\n            </Col>\n            <Col\n              xl={2}\n              lg={3}\n              as={Toc}\n              data={tocData}\n              className=\"d-none d-lg-block\"\n            />\n          </Row>\n        </Container>\n      ) : (\n        <main className=\"flex-grow-1\">\n          {children}\n        </main>\n      )}\n      {!hideFooterComponentMenu && <ComponentsList />}\n      <Container as=\"footer\" className=\"py-3 border-top border-light-300\">\n        <Nav className=\"d-flex align-items-center\">\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/status\">\n              Library status\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Link className=\"nav-link muted-link\" to=\"/insights\">\n              Usage insights\n            </Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              className=\"muted-link\"\n              href=\"https://github.com/openedx/.github/blob/master/CODE_OF_CONDUCT.md\"\n            >\n              Code of Conduct\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link className=\"muted-link\" href=\"https://open.edx.org/\">\n              Open edX\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <LeaveFeedback />\n          </Nav.Item>\n          <div className=\"flex-grow-1\" />\n          <a href=\"https://www.netlify.com\">\n            <img\n              src=\"https://www.netlify.com/img/global/badges/netlify-light.svg\"\n              alt=\"Deploys by Netlify\"\n            />\n          </a>\n        </Nav>\n      </Container>\n    </div>\n  );\n}\n\nconst itemsShape = {\n  url: PropTypes.string,\n  title: PropTypes.string,\n  items: PropTypes.array,\n};\nitemsShape.items = PropTypes.arrayOf(PropTypes.shape(itemsShape));\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  tocData: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape(itemsShape)),\n  }),\n  showMinimizedTitle: PropTypes.bool,\n  hideFooterComponentMenu: PropTypes.bool,\n  isMdx: PropTypes.bool,\n};\n\nLayout.defaultProps = {\n  tocData: {},\n  showMinimizedTitle: false,\n  hideFooterComponentMenu: false,\n  isMdx: false,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport interface IComponentStatus {\n  status: string,\n  noLeftMargin?: string,\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport function ComponentStatus({ status, noLeftMargin }: IComponentStatus) {\n  if (!status) { return null; }\n  return (\n    <span\n      className={`status-indicator ${noLeftMargin\n        && 'status-no-left-margin'} ${status.toLowerCase().replace(' ', '-')}`}\n    >\n      <span>{status}</span>\n    </span>\n  );\n}\n\nComponentStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  noLeftMargin: PropTypes.bool,\n};\n\nComponentStatus.defaultProps = {\n  noLeftMargin: false,\n};\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Table, Container } from '~paragon-react';\nimport { ComponentStatus } from '../components/doc-elements';\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\n\nexport interface IComponents {\n  frontmatter?: string,\n  title?: string,\n}\n\nexport default function StatusPage() {\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Status\" />\n        <h1>Library Status</h1>\n\n        <h3>Components Status</h3>\n        <StaticQuery\n          query={graphql`query ComponentStatusQuery {\n            allMdx(filter: {frontmatter: {type: {eq: \"component\"}}}, sort: {fields: frontmatter___title}) {\n              nodes {\n                frontmatter {\n                  designStatus\n                  devStatus\n                  status\n                  notes\n                  status\n                  title\n                  type\n                }\n              }\n            }\n          }`}\n          render={({ allMdx }) => {\n            if (!allMdx || !allMdx.nodes) { return null; }\n            const components = allMdx.nodes.map(({ frontmatter }: IComponents) => frontmatter)\n              .filter(({ title }: IComponents) => title !== 'My Component');\n\n            interface ITable {\n              title: string,\n              status: string,\n              designStatus: string,\n              devStatus: string,\n              notes: string,\n            }\n\n            return (\n              <Table\n                className=\"pgn-doc__status-table\"\n                data={components.map(({\n                  title, status, designStatus, devStatus, notes,\n                }: ITable) => ({\n                  name: (\n                    <div>\n                      <h6>{title} <ComponentStatus status={status} /></h6>\n                      <pre>{notes}</pre>\n                    </div>\n                  ),\n                  designStatus: <ComponentStatus status={designStatus} />,\n                  devStatus: <ComponentStatus status={devStatus} />,\n                }))}\n                columns={[\n                  {\n                    label: 'Component',\n                    key: 'name',\n                    width: 'col-2',\n                  },\n                  {\n                    label: 'Design',\n                    key: 'designStatus',\n                    width: 'col-3',\n                  },\n                  {\n                    label: 'Development',\n                    key: 'devStatus',\n                    width: 'col-3',\n                  },\n                ]}\n              />\n            );\n          }}\n        />\n      </Container>\n    </Layout>\n  );\n}\n","/* eslint-disable */\nconst hasFeatureFlagEnabled = require('./utils/hasFeatureFlagEnabled');\n/* eslint-enable */\n\n// Feature flags used throughout the site should be configured here.\n// You should generally allow two ways of enabling a feature flag:\n// 1. Through environment variables which will enable a feature flag at build time\n//    without a way of disabling it, to do so during local development edit the\n//    .env.development file located at the root of docs site project (note that\n//    you will need to restart development server for the changes to take effect).\n//    See DIRECTION_SWITCHER feature for example of configuring feature flags this way.\n// 2. As a query parameter in the URL, using`hasFeatureFlagEnabled` util function.\n//    This will allow to enable feature flag by providing its name as a feature?\n//    query parameter in the URL. (e.g. to enable LANGUAGE_SWITCHER feature you would append\n//    '?feature=LANGUAGE_SWITCHER' to the URL)\nconst FEATURES = {};\n\nconst LANGUAGES = [\n  {\n    label: 'English',\n    code: 'en',\n  },\n  {\n    label: 'Arabic',\n    code: 'ar',\n  },\n  {\n    label: 'Catalan',\n    code: 'ca',\n  },\n  {\n    label: 'Chinese',\n    code: 'zh-cn',\n  },\n  {\n    label: 'French',\n    code: 'fr',\n  },\n  {\n    label: 'Hebrew',\n    code: 'he',\n  },\n  {\n    label: 'Indonesian',\n    code: 'id',\n  },\n  {\n    label: 'Italian (Italy)',\n    code: 'it-it',\n  },\n  {\n    label: 'Polish',\n    code: 'pl',\n  },\n  // {\n  //   label: 'Portuguese (Brazil)',\n  //   code: 'pt-br',\n  // },\n  {\n    label: 'Portuguese (Portugal)',\n    code: 'pt-pt',\n  },\n  {\n    label: 'Russian',\n    code: 'ru',\n  },\n  {\n    label: 'Spanish',\n    code: 'es-419',\n  },\n  {\n    label: 'Spanish (Argentina)',\n    code: 'es-ar',\n  },\n  {\n    label: 'Spanish (Spain)',\n    code: 'es-es',\n  },\n  {\n    label: 'Thai',\n    code: 'th',\n  },\n  {\n    label: 'Ukrainian',\n    code: 'uk',\n  },\n  // {\n  //   label: 'Korean',\n  //   code: 'ko-kr',\n  // },\n  {\n    label: 'Turkish (Turkey)',\n    code: 'tr-tr',\n  },\n];\n\nconst INSIGHTS_TABS = Object.freeze({\n  SUMMARY: 'Summary',\n  PROJECTS: 'Projects',\n  COMPONENTS: 'Components',\n  HOOKS: 'Hooks',\n  UTILS: 'Utils',\n  ICONS: 'Icons',\n});\n\nconst INSIGHTS_PAGES = [\n  {\n    tab: INSIGHTS_TABS.SUMMARY,\n    path: '/insights',\n  },\n  {\n    tab: INSIGHTS_TABS.PROJECTS,\n    path: '/insights/projects',\n  },\n  {\n    tab: INSIGHTS_TABS.COMPONENTS,\n    path: '/insights/components',\n  },\n  {\n    tab: INSIGHTS_TABS.HOOKS,\n    path: '/insights/hooks',\n  },\n  {\n    tab: INSIGHTS_TABS.UTILS,\n    path: '/insights/utils',\n  },\n  {\n    tab: INSIGHTS_TABS.ICONS,\n    path: '/insights/icons',\n  },\n];\n\nmodule.exports = {\n  INSIGHTS_TABS,\n  INSIGHTS_PAGES,\n  FEATURES,\n  LANGUAGES,\n};\n","/**\n * Determines whether a specified feature flag is enabled.\n *\n * @param {string} featureFlag\n * @returns true if feature flag is in `?feature` query parameter\n */\nfunction hasFeatureFlagEnabled(featureFlag) {\n  const { location } = global;\n  if (!location) {\n    return false;\n  }\n  const searchParams = new URLSearchParams(location.search);\n  const features = searchParams.getAll('feature');\n  return features.includes(featureFlag);\n}\n\nmodule.exports = hasFeatureFlagEnabled;\n"],"names":["componentsQuery","components","useStaticQuery","all","React","Container","className","size","map","node","ComponentNavItem","Object","assign","key","id","Settings","_ref","showMinimizedTitle","settings","handleSettingsChange","showSettings","closeSettings","useContext","SettingsContext","Sheet","position","show","variant","onClose","IconButton","src","Close","iconAs","Icon","alt","onClick","Stack","gap","Form","name","onChange","e","target","value","direction","as","language","LANGUAGES","lang","code","label","containerWidth","Nav","Link","to","href","defaultProps","Toc","data","active","setActive","useState","observer","useRef","useEffect","current","IntersectionObserver","entries","intersectionRatio","rootMargin","threshold","document","querySelectorAll","forEach","elem","_observer$current","observe","_observer$current2","disconnect","generateTree","headings","_headings$items","items","length","heading","url","classNames","title","tocTree","Sticky","offset","itemsShape","PropTypes","undefined","LeaveFeedback","props","FEEDBACK_URL","useLocation","pathname","handleLinkFeedbackClick","global","analytics","track","Layout","_data$site$siteMetada","children","hideFooterComponentMenu","isMdx","tocData","isMobile","useMediaQuery","maxWidth","breakpoints","Header","siteTitle","site","siteMetadata","fluid","Row","Col","xl","Menu","lg","md","ComponentsList","ComponentStatus","status","noLeftMargin","toLowerCase","replace","StatusPage","SEO","StaticQuery","query","render","allMdx","nodes","_ref2","frontmatter","filter","_ref3","Table","_ref4","designStatus","devStatus","notes","columns","width","require","INSIGHTS_TABS","freeze","SUMMARY","PROJECTS","COMPONENTS","HOOKS","UTILS","ICONS","INSIGHTS_PAGES","tab","path","module","exports","FEATURES","featureFlag","location","URLSearchParams","search","getAll","includes"],"sourceRoot":""}