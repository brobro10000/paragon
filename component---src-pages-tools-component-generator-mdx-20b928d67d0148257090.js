"use strict";(self.webpackChunkparagon_pattern_library_documentation=self.webpackChunkparagon_pattern_library_documentation||[]).push([[409],{83615:function(e,n,t){var o=t(27378);n.Z=function(e){let{h:n,children:t,id:a}=e;const r=`h${n}`;return o.createElement(r,{id:a,className:"pgn-doc__heading"},t)}},78115:function(e,n,t){t.d(n,{Z:function(){return u}});var o=t(27378),a=t(35318),r=t(58391),s=t(85403),m=t(7552),i=t(46197),c=t(42980),p=t(83615),d=t(40504);const l={h1:e=>o.createElement(p.Z,Object.assign({h:"1"},e)),h2:e=>o.createElement(p.Z,Object.assign({h:"2"},e)),h3:e=>o.createElement(p.Z,Object.assign({h:"3"},e)),h4:e=>o.createElement(p.Z,Object.assign({h:"4"},e)),h5:e=>o.createElement(p.Z,Object.assign({h:"5"},e)),h6:e=>o.createElement(p.Z,Object.assign({h:"6"},e)),pre:e=>o.createElement("div",e),code:m.Z,Link:r.Link};function u(e){var n;let{children:t,pageContext:r}=e;const{settings:m}=(0,o.useContext)(d.SettingsContext);return o.createElement(i.Z,{isAutoToc:!0},o.createElement(c.Z,{title:null==r||null===(n=r.frontmatter)||void 0===n?void 0:n.title}),o.createElement(s.Z,{size:m.containerWidth,className:"py-5"},o.createElement(a.MDXProvider,{components:l},t)))}},77671:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return m},default:function(){return p}});var o=t(53782),a=(t(27378),t(35318)),r=t(78115);const s=["components"],m={},i={_frontmatter:m},c=r.Z;function p(e){let{components:n}=e,t=(0,o.Z)(e,s);return(0,a.mdx)(c,Object.assign({},i,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"component-generation"},"Component generation",(0,a.mdx)("a",{parentName:"h1","aria-hidden":"true",tabIndex:-1,href:"#component-generation"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,"Component generation offers pre-defined templates of the necessary files to kickstart development and automatically export the created components for use in the project. In this document, we will explore the process of component generation and the steps required to get started with this powerful feature."),(0,a.mdx)("h2",{id:"1-start-the-documentation-site-development-server"},"1. Start the documentation site development server",(0,a.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#1-start-the-documentation-site-development-server"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,"The Paragon documentation site serves both as documentation and as a workbench to create your component within. To see your component in action, you need to run the documentation site locally."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"npm install\nnpm start\n")),(0,a.mdx)("h2",{id:"2-create-new-component"},"2. Create new component",(0,a.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#2-create-new-component"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,"To create new component run"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"npm run generate-component MyComponent\n")),(0,a.mdx)("p",null,"where ",(0,a.mdx)("inlineCode",{parentName:"p"},"MyComponent")," is your new component's name."),(0,a.mdx)("p",null,"This will create a directory in ",(0,a.mdx)("inlineCode",{parentName:"p"},"/src/")," that will contain templates for all necessary files to start developing the component:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"MyComponent\n├── index.jsx\n├── README.md\n├── MyComponent.scss\n├── _variables.scss\n└── MyComponent.test.jsx\n")),(0,a.mdx)("p",null,"The script will also automatically export your component from Paragon."),(0,a.mdx)("h2",{id:"3-start-developing"},"3. Start developing",(0,a.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#3-start-developing"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,(0,a.mdx)("inlineCode",{parentName:"p"},"/src/MyComponent/index.jsx")," is where your component lives, the file is created with the following template, edit it to implement your own component."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst MyComponent = React.forwardRef(({ className, children }, ref) => (\n  <div ref={ref} className={classNames('png__MyComponent', className)}>\n    {children}\n  </div>\n));\n\nMyComponent.defaultProps = {\n  className: undefined,\n};\n\nMyComponent.propTypes = {\n  /** A class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n};\n\nexport default MyComponent;\n\n")),(0,a.mdx)("h2",{id:"4-optional-add-styles-to-your-component"},"4. (Optional) Add styles to your component.",(0,a.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#4-optional-add-styles-to-your-component"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,"If your component requires additional styling (which most likely is the case), edit created SCSS style sheet in your\ncomponent's directory ",(0,a.mdx)("inlineCode",{parentName:"p"},"/src/MyComponent/MyComponent.scss")," which by default contains an empty class for your component."),(0,a.mdx)("p",null,"If you wish to use SASS variables (which is the preferred way of styling the components since values can be\neasily overridden and customized by the consumers of Paragon), add them in ",(0,a.mdx)("inlineCode",{parentName:"p"},"/src/MyComponent/_variables.scss")," (this file should contain all variables specific to your component).\nThis way the variables will also get automatically picked up by documentation site and displayed on your component's page."),(0,a.mdx)("p",null,(0,a.mdx)("strong",{parentName:"p"},"Please note that you need to follow ",(0,a.mdx)("a",{parentName:"strong",href:"https://github.com/openedx/paragon/blob/master/docs/decisions/0012-css-styling-conventions"},"Paragon's CSS styling conventions"),".")),(0,a.mdx)("h2",{id:"5-document-your-component"},"5. Document your component",(0,a.mdx)("a",{parentName:"h2","aria-hidden":"true",tabIndex:-1,href:"#5-document-your-component"},(0,a.mdx)("span",{parentName:"a",className:"pgn-doc__anchor"},"#"))),(0,a.mdx)("p",null,"The documentation for your component lives in ",(0,a.mdx)("inlineCode",{parentName:"p"},"src/MyComponent/README.md"),". The documentation site scans this directory for markdown or mdx files to create pages. By default, the file is created with following content:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-md"},"---\ntitle: 'MyComponent'\ntype: 'component'\ncomponents:\n- MyComponent\nstatus: 'New'\ndesignStatus: 'Done'\ndevStatus: 'Done'\nnotes: |\n  Something special about this component\n---\n\nDescribe your component here and give usage examples.\n\n### Basic Usage\n\n```jsx live\n<MyComponent>\n  Hello!\n</MyComponent>\n```\n\n")))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-tools-component-generator-mdx-20b928d67d0148257090.js.map