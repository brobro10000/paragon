{"version":3,"file":"dba6d12e4b8f2f7110c9fbf33055c02769c5062d-3f0d38ef6d2f4f56cb0b.js","mappings":"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","sources":["webpack://paragon-pattern-library-documentation/./src/components/insights/UsagesList.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/SummaryUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ProjectUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/components/insights/ComponentUsageExamples.tsx","webpack://paragon-pattern-library-documentation/./src/utils/getGithubProjectUrl.ts","webpack://paragon-pattern-library-documentation/./src/pages/insights.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Hyperlink } from '~paragon-react';\n\ntype UsagesType = {\n  filePath: string,\n  line: number,\n};\n\ninterface UsagesListPropTypes {\n  repositoryUrl: string,\n  componentName: string,\n  projectName: string,\n  usages: Array<UsagesType>,\n}\n\nexport default function UsagesList({\n  usages,\n  repositoryUrl,\n  componentName,\n  projectName,\n} : UsagesListPropTypes) {\n  const handleUsageLinkClick = (linkToUsage) => {\n    global.analytics.track(\n      'openedx.paragon.docs.usage-insights.component-usage-link.clicked',\n      { project: projectName, component: componentName, linkToUsage },\n    );\n  };\n\n  return (\n    <ul className=\"list-unstyled\">\n      {usages.map((usage) => {\n        const PATH_TO_USAGE = `${repositoryUrl}/${usage.filePath}#L${usage.line}`;\n        return (\n          <li key={`${usage.filePath}L#${usage.line}`}>\n            {repositoryUrl ? (\n              <>\n                <Hyperlink\n                  destination={PATH_TO_USAGE}\n                  target=\"_blank\"\n                  onClick={() => handleUsageLinkClick(PATH_TO_USAGE)}\n                >\n                  {usage.filePath}\n                </Hyperlink>\n                {' '}(line {usage.line})\n              </>\n            ) : (\n              <>{usage.filePath} (line {usage.line})</>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nUsagesList.propTypes = {\n  projectName: PropTypes.string.isRequired,\n  componentName: PropTypes.string.isRequired,\n  repositoryUrl: PropTypes.string.isRequired,\n  usages: PropTypes.arrayOf(PropTypes.shape({\n    filePath: PropTypes.string.isRequired,\n    line: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UsagesList from './UsagesList';\n\nexport interface ISummaryUsageExamples {\n  row: {\n    original: {\n      usages: [],\n      name: string\n    },\n  }\n}\n\nfunction SummaryUsageExamples({ row }: ISummaryUsageExamples) {\n  interface IComponentUsages {\n    folderName: string,\n    usages: [],\n    repositoryUrl: string,\n  }\n\n  const { usages: componentUsages, name: componentName } = row.original;\n\n  const componentUsagesExample = componentUsages.map(({\n    folderName: projectName,\n    usages: projectUsages,\n    repositoryUrl,\n  }: IComponentUsages) => (\n    <div className=\"pgn-doc__summary-usages__project mb-4\" key={projectName}>\n      <h5 className=\"font-weight-bold\">{projectName}</h5>\n      <UsagesList\n        usages={projectUsages}\n        componentName={componentName}\n        repositoryUrl={repositoryUrl}\n        projectName={projectName}\n      />\n    </div>\n  ));\n\n  return <div>{componentUsagesExample}</div>;\n}\n\nSummaryUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        folderName: PropTypes.string.isRequired,\n        repositoryUrl: PropTypes.string.isRequired,\n        usages: PropTypes.arrayOf(PropTypes.shape({\n          filePath: PropTypes.string.isRequired,\n          line: PropTypes.number.isRequired,\n        })),\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default SummaryUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UsagesList from './UsagesList';\n\ntype IProjectUsages = {\n  filePath: string,\n  line: number,\n};\n\nexport interface IProjectUsageExamples {\n  row: {\n    original: {\n      folderName: string,\n      repositoryUrl: string,\n      usages: { [key: string]: Array<IProjectUsages> },\n    },\n  },\n}\n\nfunction ProjectUsageExamples({ row }: IProjectUsageExamples) {\n  const { repositoryUrl, usages, folderName: projectName } = row.original;\n\n  const orderedComponentUsages: { [key: string]: Array<IProjectUsages> } = Object.keys(usages)\n    .sort().reduce((obj: { [index: string]: any }, key) => {\n    // eslint-disable-next-line no-param-reassign\n      obj[key] = usages[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      {Object.keys(usages).length === 0 && (\n        <p>This project does not import any Paragon components, but may still use its SCSS styles.</p>\n      )}\n      {Object.entries(orderedComponentUsages).map(([componentName, usagesArray]) => (\n        <div className=\"pgn-doc__usages-modal mb-4\" key={componentName}>\n          <h5 className=\"font-weight-bold\">{componentName}</h5>\n          <UsagesList\n            usages={usagesArray}\n            componentName={componentName}\n            repositoryUrl={repositoryUrl}\n            projectName={projectName}\n          />\n        </div>\n      ))}\n    </>\n  );\n}\n\nProjectUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      folderName: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      }))).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ProjectUsageExamples;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UsagesList from './UsagesList';\n\ntype ProjectUsagesTypes = {\n  filePath: string,\n  line: number,\n};\n\nexport interface IComponentUsageExamples {\n  row: {\n    original: {\n      folderName: string,\n      repositoryUrl: string,\n      usages: Array<ProjectUsagesTypes>,\n    },\n  },\n  componentName: string,\n}\n\nfunction ComponentUsageExamples({ row, componentName }: IComponentUsageExamples) {\n  const { repositoryUrl, usages, folderName: projectName } = row.original;\n\n  return (\n    <div className=\"pgn-doc__component-usage__project\">\n      <UsagesList\n        usages={usages}\n        componentName={componentName}\n        repositoryUrl={repositoryUrl}\n        projectName={projectName}\n      />\n    </div>\n  );\n}\n\nComponentUsageExamples.propTypes = {\n  row: PropTypes.shape({\n    original: PropTypes.shape({\n      folderName: PropTypes.string.isRequired,\n      repositoryUrl: PropTypes.string,\n      usages: PropTypes.arrayOf(PropTypes.shape({\n        filePath: PropTypes.string.isRequired,\n        line: PropTypes.number.isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ComponentUsageExamples;\n","const getGithubProjectUrl = (repository?: string | { type: string, url: string }): string | undefined => {\n  let repositoryUrl;\n  if (typeof repository === 'string') {\n    repositoryUrl = repository;\n  } else if (repository?.url) {\n    repositoryUrl = repository.url;\n  } else {\n    // unsupported repository field\n    return undefined;\n  }\n  const parts = repositoryUrl.split('/');\n  const githubDomainIndex = parts.findIndex((part: string) => part === 'github.com');\n  parts.splice(0, githubDomainIndex);\n  const parsedRepositoryUrl = parts.join('/').replace('.git', '');\n  return `https://${parsedRepositoryUrl}/blob/master`;\n};\n\nexport default getGithubProjectUrl;\n","import React, { useContext } from 'react';\nimport { navigate } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  DataTable,\n  Tabs,\n  Tab,\n  Container,\n  TextFilter,\n  CheckboxFilter,\n  useMediaQuery,\n  breakpoints,\n} from '~paragon-react';\nimport SEO from '../components/SEO';\nimport Layout from '../components/PageLayout';\nimport SummaryUsageExamples, { ISummaryUsageExamples } from '../components/insights/SummaryUsageExamples';\nimport ProjectUsageExamples, { IProjectUsageExamples } from '../components/insights/ProjectUsageExamples';\nimport ComponentUsageExamples, { IComponentUsageExamples } from '../components/insights/ComponentUsageExamples';\nimport getGithubProjectUrl from '../utils/getGithubProjectUrl';\n// @ts-ignore\nimport dependentProjectsAnalysis from '../../../dependent-usage.json'; // eslint-disable-line\nimport { INSIGHTS_TABS, INSIGHTS_PAGES } from '../config';\nimport InsightsContext from '../context/InsightsContext';\n\nconst ICON_TYPE = 'Icon';\nconst TABLE_PAGE_SIZE = 10;\n\nconst {\n  lastModified: analysisLastUpdated,\n  projectUsages: dependentProjectsUsages,\n} = dependentProjectsAnalysis;\n\ninterface IUsage {\n  filePath: string,\n  line: number,\n  column: number,\n  version: string,\n}\n\ninterface IDependentUsage {\n  version?: string,\n  name?: string,\n  repository?: { type: string, url: string },\n  repositoryUrl?: string,\n  count: number,\n  folderName?: string,\n  usages: {\n    [key: string]: IUsage[],\n  },\n}\n\ninterface IComponentUsageData {\n  componentUsageCount: number,\n  folderName: string,\n  name: string,\n  repositoryUrl: string,\n  usages: IUsage[],\n  version: string,\n}\n\ninterface IInsightsContext {\n  paragonTypes: {\n    [key: string]: string\n  },\n  isParagonIcon: Function,\n}\n\ninterface IFilterData {\n  name: string,\n  number: number | undefined,\n  value: string\n}\n\ninterface TabsDataType {\n  components: string[],\n  hooks: string[],\n  utils: string[],\n  icons: string[],\n}\n\nexport interface IComponentUsage {\n  name: string,\n  componentUsageInProjects: IComponentUsageData[],\n}\n\nconst dependentProjects: IDependentUsage[] = [];\n\nconst componentsUsage: Record<string, IComponentUsageData[]> = dependentProjectsUsages\n  .reduce((accumulator: any, project: any) => {\n    dependentProjects.push({\n      ...project,\n      repositoryUrl: getGithubProjectUrl(project.repository),\n      count: Object.values<IUsage[]>(project.usages).reduce((acc, usage) => acc + usage.length, 0),\n    });\n\n    Object.keys(project.usages).forEach(componentName => {\n      // The next line is necessary for the same naming of the components both in the file with the\n      // repositories of use and in the data structures GraphQL.\n      const newComponentName = componentName.replace(/\\./g, '');\n      if (!accumulator[newComponentName]) {\n        accumulator[newComponentName] = [];\n      }\n      accumulator[newComponentName] = accumulator[newComponentName].concat({\n        name: project.name,\n        folderName: project.folderName,\n        version: project.version,\n        repositoryUrl: getGithubProjectUrl(project.repository),\n        componentUsageCount: project.usages[componentName].length,\n        usages: project.usages[componentName],\n      });\n    });\n    return accumulator;\n  }, {});\n\nexport const componentsInUsage = Object.keys(componentsUsage);\n\nconst round = (n: number) => Math.round(n * 10) / 10;\n\nconst getEmptyMessage = (text: string) => `Currently there are no ${text} usage yet`;\n\nfunction SummaryUsage() {\n  const { paragonTypes = {}, isParagonIcon = () => false } = useContext(InsightsContext) as IInsightsContext;\n  const isMedium = useMediaQuery({ minWidth: breakpoints.large.minWidth });\n\n  const typeCount = Object.keys(paragonTypes)\n    .reduce((accumulator: { [key: string]: number | undefined }, componentName) => {\n      const type = paragonTypes[componentName] || (isParagonIcon(componentName) && ICON_TYPE);\n      if (componentsInUsage.includes(componentName)) {\n        accumulator[type] = (accumulator[type] || 0) + 1;\n      }\n      return accumulator;\n    }, {});\n\n  const filterValues: IFilterData[] = Object.keys(paragonTypes)\n    .map((key) => paragonTypes[key])\n    .filter((v, i, a) => a.indexOf(v) === i)\n    .map(type => ({ name: type, number: typeCount[type], value: type }));\n  // Number of Icons is calculated in the statement below. Initialized as `undefined` to not display '0'.\n  const iconsType: IFilterData = { name: ICON_TYPE, number: undefined, value: ICON_TYPE };\n\n  const summaryComponentsUsage = Object.entries<IComponentUsageData[]>(componentsUsage).map(\n    ([componentName, usages]) => {\n      const componentUsageCounts = usages\n        .reduce((accumulator, project) => accumulator + project.componentUsageCount, 0);\n      let type = paragonTypes[componentName];\n      if (!type && isParagonIcon(componentName)) {\n        type = ICON_TYPE;\n        iconsType.number = (iconsType.number || 0) + 1;\n      }\n      return {\n        name: componentName,\n        count: componentUsageCounts,\n        usages: componentsUsage[componentName],\n        type,\n      };\n    },\n  );\n  filterValues.push(iconsType);\n  typeCount[ICON_TYPE] = iconsType.number;\n\n  const summaryTableData = summaryComponentsUsage.sort((a, b) => {\n    const nameA = a.name.toUpperCase();\n    const nameB = b.name.toUpperCase();\n    return nameA < nameB ? -1 : 1;\n  });\n\n  const averageComponentsUsedPerProject = dependentProjects\n    .reduce((accumulator, project) => accumulator + project.count, 0) / dependentProjects.length;\n\n  return (\n    <div className=\"pt-5 mb-5\">\n      <div className=\"mb-5\">\n        <h2>Overview</h2>\n        <p>\n          Paragon is used by at least <strong>{dependentProjects.length} projects</strong>, with an average\n          of <strong>{round(averageComponentsUsedPerProject)} imports</strong> per project.\n        </p>\n      </div>\n      <h3>Overall usage</h3>\n      <DataTable\n        isPaginated\n        isExpandable\n        isSortable\n        showFiltersInSidebar={isMedium}\n        isFilterable\n        defaultColumnValues={{ Filter: TextFilter }}\n        itemCount={summaryTableData.length}\n        data={summaryTableData}\n        renderRowSubComponent={({ row }: ISummaryUsageExamples) => <SummaryUsageExamples row={row} />}\n        initialState={{ pageSize: TABLE_PAGE_SIZE }}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Component Name',\n            accessor: 'name',\n          },\n          {\n            Header: 'Instance Count',\n            accessor: 'count',\n            disableFilters: true,\n          },\n          {\n            Header: 'Type',\n            accessor: 'type',\n            Filter: CheckboxFilter,\n            filter: 'includesValue',\n            filterChoices: filterValues,\n          },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No summary available\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n}\n\n// Paragon version in all projects\nfunction ProjectsUsage() {\n  return (\n    <div className=\"pt-5 mb-5\">\n      <h3 className=\"mb-4\">Projects in Open edX consuming Paragon</h3>\n      <DataTable\n        isExpandable\n        isSortable\n        itemCount={dependentProjects.length}\n        data={dependentProjects}\n        renderRowSubComponent={({ row }: IProjectUsageExamples) => <ProjectUsageExamples row={row} />}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Project Name',\n            accessor: 'folderName',\n          },\n          { Header: 'Paragon Version', accessor: 'version' },\n          { Header: 'Import Count', accessor: 'count' },\n        ]}\n      >\n        <DataTable.TableControlBar />\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No projects\" />\n        <DataTable.TableFooter />\n      </DataTable>\n    </div>\n  );\n}\n\n// Usage info about a single component\nfunction ComponentUsage({ name, componentUsageInProjects }: IComponentUsage) {\n  return (\n    <div className=\"mb-5\">\n      <h3 className=\"mb-4\">{name}</h3>\n      <DataTable\n        isExpandable\n        isSortable\n        itemCount={componentUsageInProjects.length} // eslint-disable-line\n        data={componentUsageInProjects}\n        renderRowSubComponent={({ row }: IComponentUsageExamples) => (\n          <ComponentUsageExamples row={row} componentName={name} />\n        )}\n        columns={[\n          {\n            id: 'expander',\n            Header: DataTable.ExpandAll,\n            Cell: DataTable.ExpandRow,\n          },\n          {\n            Header: 'Project Name',\n            accessor: 'folderName',\n          },\n          { Header: 'Paragon Version', accessor: 'version' },\n          { Header: 'Instance Count', accessor: 'componentUsageCount' },\n        ]}\n      >\n        <DataTable.Table />\n        <DataTable.EmptyTable content=\"No usages\" />\n      </DataTable>\n    </div>\n  );\n}\n\n// Usage info for all components\nexport function ComponentsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => {\n        if (componentsUsage[name]) {\n          return (\n            <ComponentUsage\n              key={name}\n              name={name}\n              componentUsageInProjects={componentsUsage[name]}\n            />\n          );\n        }\n        return null;\n      }) : getEmptyMessage('components')}\n    </div>\n  );\n}\n\n// Usage info for all hooks\nfunction HooksUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('hooks')}\n    </div>\n  );\n}\n\n// Usage info for all utils\nfunction UtilsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('utils')}\n    </div>\n  );\n}\n\n// Usage info for all utils\nfunction IconsUsage({ data }: { data: string[] }) {\n  return (\n    <div className=\"pt-5 mb-5\">\n      {data.length ? data.sort().map(name => (\n        <ComponentUsage\n          key={name}\n          name={name}\n          componentUsageInProjects={componentsUsage[name]}\n        />\n      )) : getEmptyMessage('utils')}\n    </div>\n  );\n}\n\nexport default function InsightsPage({ pageContext: { tab } }: { pageContext: { tab: string } }) {\n  const { paragonTypes = {}, isParagonIcon = () => false } = useContext(InsightsContext) as IInsightsContext;\n  const {\n    components, hooks, utils, icons,\n  } = Object.keys(componentsUsage).reduce<TabsDataType>((acc, usage) => {\n    if (paragonTypes[usage] === 'Component') {\n      acc.components.push(usage);\n    } else if (paragonTypes[usage] === 'Hook') {\n      acc.hooks.push(usage);\n    } else if (['Text', 'Function', 'Object'].includes(paragonTypes[usage])) {\n      acc.utils.push(usage);\n    } else if (isParagonIcon(usage)) {\n      acc.icons.push(usage);\n    }\n    return acc;\n  }, {\n    components: [], hooks: [], utils: [], icons: [],\n  });\n\n  const handleOnSelect = (value: string) => {\n    if (value !== tab) {\n      global.analytics.track(`openedx.paragon.docs.insights.tabs.${value.toLowerCase().trim()}.clicked`);\n      navigate(INSIGHTS_PAGES.find(item => item.tab === value)!.path);\n    }\n  };\n\n  return (\n    <Layout>\n      <Container size=\"md\" className=\"py-5\">\n        {/* eslint-disable-next-line react/jsx-pascal-case */}\n        <SEO title=\"Usage Insights\" />\n        <header className=\"mb-5\">\n          <h1>Usage Insights</h1>\n          <p>Last updated: {new Date(analysisLastUpdated).toLocaleDateString()}</p>\n        </header>\n        <Tabs\n          activeKey={tab}\n          id=\"uncontrolled-tab-example\"\n          onSelect={handleOnSelect}\n        >\n          <Tab eventKey={INSIGHTS_TABS.SUMMARY} title=\"Summary\">\n            {tab === INSIGHTS_TABS.SUMMARY && (\n              <SummaryUsage />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.PROJECTS} title=\"Projects\">\n            {tab === INSIGHTS_TABS.PROJECTS && (\n              <ProjectsUsage />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.COMPONENTS} title=\"Components\">\n            {tab === INSIGHTS_TABS.COMPONENTS && (\n              <ComponentsUsage data={components} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.HOOKS} title=\"Hooks\">\n            {tab === INSIGHTS_TABS.HOOKS && (\n              <HooksUsage data={hooks} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.UTILS} title=\"Utils\">\n            {tab === INSIGHTS_TABS.UTILS && (\n              <UtilsUsage data={utils} />\n            )}\n          </Tab>\n          <Tab eventKey={INSIGHTS_TABS.ICONS} title=\"Icons\">\n            {tab === INSIGHTS_TABS.ICONS && (\n              <IconsUsage data={icons} />\n            )}\n          </Tab>\n        </Tabs>\n      </Container>\n    </Layout>\n  );\n}\n\nInsightsPage.propTypes = {\n  pageContext: PropTypes.shape({\n    tab: PropTypes.oneOf(Object.values(INSIGHTS_TABS)),\n  }).isRequired,\n};\n\nComponentUsage.propTypes = {\n  name: PropTypes.string.isRequired,\n  componentUsageInProjects: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    folderName: PropTypes.string,\n    version: PropTypes.string,\n    repositoryUrl: PropTypes.string,\n    componentUsageCount: PropTypes.number,\n    usages: PropTypes.arrayOf(PropTypes.shape({\n      column: PropTypes.number,\n      filePath: PropTypes.string,\n      line: PropTypes.number,\n      version: PropTypes.string,\n    })),\n  })).isRequired,\n};\n\nconst usagePropTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nComponentsUsage.propTypes = usagePropTypes;\nHooksUsage.propTypes = usagePropTypes;\nUtilsUsage.propTypes = usagePropTypes;\nIconsUsage.propTypes = usagePropTypes;\n"],"names":["UsagesList","_ref","usages","repositoryUrl","componentName","projectName","React","className","map","usage","PATH_TO_USAGE","filePath","line","key","Hyperlink","destination","target","onClick","handleUsageLinkClick","linkToUsage","global","analytics","track","project","component","row","componentUsages","name","original","componentUsagesExample","_ref2","folderName","projectUsages","orderedComponentUsages","Object","keys","sort","reduce","obj","length","entries","usagesArray","repository","url","parts","split","githubDomainIndex","findIndex","part","splice","join","replace","ICON_TYPE","TABLE_PAGE_SIZE","lastModified","analysisLastUpdated","dependentProjectsUsages","dependentProjectsAnalysis","dependentProjects","componentsUsage","accumulator","push","_objectSpread","getGithubProjectUrl","count","values","acc","forEach","newComponentName","concat","version","componentUsageCount","componentsInUsage","round","n","Math","getEmptyMessage","text","SummaryUsage","paragonTypes","isParagonIcon","useContext","InsightsContext","isMedium","useMediaQuery","minWidth","breakpoints","typeCount","type","includes","filterValues","filter","v","i","a","indexOf","number","value","iconsType","undefined","summaryComponentsUsage","componentUsageCounts","summaryTableData","b","toUpperCase","averageComponentsUsedPerProject","DataTable","isPaginated","isExpandable","isSortable","showFiltersInSidebar","isFilterable","defaultColumnValues","Filter","TextFilter","itemCount","data","renderRowSubComponent","SummaryUsageExamples","initialState","pageSize","columns","id","Header","Cell","accessor","disableFilters","CheckboxFilter","filterChoices","content","ProjectsUsage","_ref3","ProjectUsageExamples","ComponentUsage","_ref4","componentUsageInProjects","_ref5","ComponentUsageExamples","ComponentsUsage","_ref6","HooksUsage","_ref7","UtilsUsage","_ref8","IconsUsage","_ref9","InsightsPage","_ref10","pageContext","tab","components","hooks","utils","icons","Layout","Container","size","SEO","title","Date","toLocaleDateString","Tabs","activeKey","onSelect","toLowerCase","trim","navigate","INSIGHTS_PAGES","item","path","Tab","eventKey","INSIGHTS_TABS"],"sourceRoot":""}