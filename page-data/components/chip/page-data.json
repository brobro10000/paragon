{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/chip/","result":{"data":{"mdx":{"id":"dbf8290b-3c6d-5fcb-80c4-7d2d02e15a02","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Chip\",\n  \"type\": \"component\",\n  \"components\": [\"Chip\"],\n  \"categories\": [\"Buttonlike\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chips`), ` are compact elements that represent an input, attribute, or action. Similar to the `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/paragon/components/badge\"\n  }, `Badge`), ` component, but interactive.`), mdx(\"h2\", {\n    \"id\": \"basic-usage\"\n  }, `Basic Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<div>\n  <Chip>New</Chip>\n  <Chip disabled>New</Chip>\n  <Chip variant=\"dark\">New</Chip>\n</div>\n`)), mdx(\"h2\", {\n    \"id\": \"with-icon-before-and-after\"\n  }, `With Icon Before and After`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#with-icon-before-and-after\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<div>\n  <Chip iconBefore={Person}>New</Chip>\n  <Chip\n    variant=\"dark\"\n    iconBefore={Person}\n    iconAfter={Close}\n    onIconAfterClick={() => console.log('Remove Chip')}\n  >\n    New\n  </Chip>\n  <Chip\n    variant=\"dark\"\n    iconBefore={Person}\n    iconAfter={Close}\n    onIconAfterClick={() => console.log('Remove Chip')}\n    disabled\n  >\n    New\n  </Chip>\n</div>\n`)), mdx(\"h2\", {\n    \"id\": \"chip-carousel\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, `Chip`), ` Carousel`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#chip-carousel\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<OverflowScroll ariaLabel=\"example chip carousel\" hasInteractiveChildren>\n  <OverflowScrollContext.Consumer>\n    {({\n      setOverflowRef,\n      isScrolledToStart,\n      isScrolledToEnd,\n      scrollToPrevious,\n      scrollToNext,\n    }) => (\n      <>\n        <div className=\"mb-3\">\n          <Button\n            onClick={scrollToPrevious}\n            className=\"mr-2\"\n            size=\"sm\"\n            disabled={isScrolledToStart}\n          >\n            Previous\n          </Button>\n          <Button\n            onClick={scrollToNext}\n            size=\"sm\"\n            disabled={isScrolledToEnd}\n          >\n            Next\n          </Button>\n        </div>\n        <div ref={setOverflowRef} className=\"d-flex\">\n          <OverflowScroll.Items>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n            <Chip iconAfter={Close}>New</Chip>\n          </OverflowScroll.Items>\n        </div>\n      </>\n    )}\n  </OverflowScrollContext.Consumer>\n</OverflowScroll>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Chip","status":"New","notes":"","components":["Chip"]},"tableOfContents":{"items":[{"url":"#basic-usage","title":"Basic Usage"},{"url":"#with-icon-before-and-after","title":"With Icon Before and After"},{"url":"#chip-carousel","title":"Chip Carousel"}]}},"components":{"nodes":[{"displayName":"Chip","props":[{"defaultValue":null,"name":"children","type":{"name":"node","raw":null,"value":null},"required":true,"docblock":"Specifies the content of the `Chip`.","doclets":[],"description":{"id":"d7cac4d3-23df-51ae-b393-accbb3e02da9","text":"Specifies the content of the `Chip`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the content of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chip`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies an additional `className` to add to the base element.","doclets":[],"description":{"id":"e0e5d171-82c8-5687-95fd-43fddf6377ec","text":"Specifies an additional `className` to add to the base element.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies an additional `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `className`), ` to add to the base element.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'light'"},"name":"variant","type":{"name":"enum","raw":null,"value":[{"value":"'light'","computed":false},{"value":"'dark'","computed":false}]},"required":false,"docblock":"The `Chip` style variant to use.","doclets":[],"description":{"id":"56d98479-5d23-5666-895d-ee7989f211c4","text":"The `Chip` style variant to use.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chip`), ` style variant to use.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"disabled","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Disables the `Chip`.","doclets":[],"description":{"id":"a153d819-eb7e-5b5d-8b20-bb6f74a90af1","text":"Disables the `Chip`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Disables the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chip`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"iconBefore","type":{"name":"union","raw":null,"value":[{"name":"element"},{"name":"func"}]},"required":false,"docblock":"An icon component to render before the content.\nExample import of a Paragon icon component:\n\n`import { Check } from '@edx/paragon/icons';`","doclets":[],"description":{"id":"01451660-bc1f-5bab-aac6-fd056aa68e84","text":"An icon component to render before the content.\nExample import of a Paragon icon component:\n\n`import { Check } from '@edx/paragon/icons';`","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `An icon component to render before the content.\nExample import of a Paragon icon component:`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `import { Check } from '@edx/paragon/icons';`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"onIconBeforeClick","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"A click handler for the `Chip` icon before.","doclets":[],"description":{"id":"8bd00194-f76d-5cab-b264-4689ab63130b","text":"A click handler for the `Chip` icon before.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A click handler for the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chip`), ` icon before.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"iconAfter","type":{"name":"union","raw":null,"value":[{"name":"element"},{"name":"func"}]},"required":false,"docblock":"An icon component to render before after the content.\nExample import of a Paragon icon component:\n\n`import { Check } from '@edx/paragon/icons';`","doclets":[],"description":{"id":"edcde2a5-1e27-5ff2-b334-ddfdc044e448","text":"An icon component to render before after the content.\nExample import of a Paragon icon component:\n\n`import { Check } from '@edx/paragon/icons';`","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `An icon component to render before after the content.\nExample import of a Paragon icon component:`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `import { Check } from '@edx/paragon/icons';`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"onIconAfterClick","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"A click handler for the `Chip` icon after.","doclets":[],"description":{"id":"73bb885b-c737-5300-9f77-0aab26280d9d","text":"A click handler for the `Chip` icon after.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A click handler for the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Chip`), ` icon after.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"dbf8290b-3c6d-5fcb-80c4-7d2d02e15a02","components":["Chip"],"scssVariablesData":{"openedx":"$chip-padding-x:  var(--pgn-spacing-chip-padding-x) !default;\n$chip-padding-y:  var(--pgn-spacing-chip-padding-y) !default;\n$chip-padding-to-icon:  var(--pgn-spacing-chip-padding-to-icon) !default;\n$chip-icon-padding:  var(--pgn-spacing-chip-padding-icon) !default;\n$chip-margin:  var(--pgn-spacing-chip-margin) !default;\n$chip-border-radius:  var(--pgn-size-chip-border-radius) !default;\n$chip-disable-opacity:  var(--pgn-other-chip-opacity-disabled) !default;\n$chip-icon-size:  var(--pgn-size-chip-icon) !default;\n$chip-light-bg:  var(--pgn-color-chip-bg-light) !default;\n$chip-light-color:  var(--pgn-color-chip-text-light) !default;\n$chip-dark-bg:  var(--pgn-color-chip-bg-dark) !default;\n$chip-dark-color:  var(--pgn-color-chip-text-dark) !default;\n","edxorg":"$chip-padding-x:  var(--pgn-spacing-chip-padding-x) !default;\n$chip-padding-y:  var(--pgn-spacing-chip-padding-y) !default;\n$chip-padding-to-icon:  var(--pgn-spacing-chip-padding-to-icon) !default;\n$chip-icon-padding:  var(--pgn-spacing-chip-padding-icon) !default;\n$chip-margin:  var(--pgn-spacing-chip-margin) !default;\n$chip-border-radius:  var(--pgn-size-chip-border-radius) !default;\n$chip-disable-opacity:  var(--pgn-other-chip-opacity-disabled) !default;\n$chip-icon-size:  var(--pgn-size-chip-icon) !default;\n$chip-light-bg:  var(--pgn-color-chip-bg-light) !default;\n$chip-light-color:  var(--pgn-color-chip-text-light) !default;\n$chip-dark-bg:  var(--pgn-color-chip-bg-dark) !default;\n$chip-dark-color:  var(--pgn-color-chip-text-dark) !default;\n"}}},"staticQueryHashes":["1303225137","3649515864","63159454"]}