{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/form/form-control/","result":{"data":{"mdx":{"id":"c5fb98cd-76ca-5c4b-8cc6-f84ef942d6d2","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Form.Control\",\n  \"type\": \"component\",\n  \"components\": [\"FormControl\"],\n  \"categories\": [\"Forms\"],\n  \"status\": \"Stable\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A form control renders a space for user input (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `input`), ` or `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `select`), `). It can be\ndecorated with leading or trailing elements, and have a floating label.`), mdx(\"p\", null, `Prefer to use the Form.Control component inside a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Form.Group`), `. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Form.Group`), `\nprovides a context for the control to ensure accessibility requirements for\nlabels and descriptions are met.`), mdx(\"p\", null, `Note: extra props added to this component are passed as attributes to the\nunderlying DOM node (`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `input`), ` by default). See MDN for documentation on available\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes\"\n  }, `input attributes`), `\nor `, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attributes\"\n  }, `select attributes`), `.`), mdx(\"h2\", {\n    \"id\": \"usage-with-decorators-and-floating-label\"\n  }, `Usage with decorators and floating label`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#usage-with-decorators-and-floating-label\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [value, setValue] = useState('');\n  return (\n    <Form.Group>\n      <Form.Control\n        leadingElement={<Icon src={FavoriteBorder} />}\n        trailingElement={<Icon src={Verified} />}\n        floatingLabel=\"What kind of cats?\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </Form.Group>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"input-types\"\n  }, `Input types`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#input-types\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  {/* start example state */}\n  const [type, setType] = useState('default');\n  {/* end example state */}\n\n  const inputs = {\n    default: (\n      <>\n        <h3>Default</h3>\n        <Form.Group>\n          <Form.Control\n            value={value}\n            onChange={handleChange}\n            leadingElement={<Icon src={FavoriteBorder} />}\n            floatingLabel=\"What kind of cats?\"\n          />\n        </Form.Group>\n      </>\n    ),\n    textarea: (<>\n      <h3>Textarea</h3>\n      <Form.Group>\n        <Form.Control\n          as=\"textarea\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"What kind of cats?\"\n        />\n      </Form.Group>\n    </>),\n    select: (<>\n      <h3>Select</h3>\n      <Form.Group>\n        <Form.Control\n          as=\"select\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"What kind of cats?\"\n        >\n          <option value=\"\">Select a cat</option>\n          <option>Persian cat</option>\n          <option>British Shorthair</option>\n          <option>Maine Coon</option>\n          <option>Siamese cat</option>\n        </Form.Control>\n      </Form.Group>\n    </>),\n    password: (<>\n      <h3>Password</h3>\n      <Form.Group>\n        <Form.Control\n          type=\"password\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"Password cats?\"\n        />\n      </Form.Group>\n    </>),\n    date: (<>\n      <h3>Date picker</h3>\n      <Form.Group>\n        <Form.Control\n          type=\"date\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"When cats?\"\n        />\n      </Form.Group>\n    </>),\n    number: (<>\n      <h3>Number</h3>\n      <Form.Group>\n        <Form.Control\n          type=\"number\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"How many cats?\"\n        />\n      </Form.Group>\n    </>),\n    time: (<>\n      <h3>Time picker</h3>\n      <Form.Group>\n        <Form.Control\n          type=\"time\"\n          value={value}\n          onChange={handleChange}\n          leadingElement={<Icon src={FavoriteBorder} />}\n          floatingLabel=\"Time cats?\"\n        />\n      </Form.Group>\n    </>),\n  };\n  const [value, setValue] = useState('');\n  const handleChange = (e) => setValue(e.target.value);\n  return (\n    <>\n      {/* start example form block */}\n      <ExamplePropsForm\n        inputs={[\n          { value: type, setValue: setType, options: Object.keys(inputs), name: 'Input type' },\n        ]}\n      />\n      {/* end example form block */}\n      \n      {inputs[type]}\n    </>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"textarea-autoresize\"\n  }, `Textarea autoResize`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#textarea-autoresize\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `autoResize`), ` prop allows input to be resized according to the content height.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Form.Control\n  as=\"textarea\"\n  autoResize\n  floatingLabel=\"Write something long\"\n/>\n`)), mdx(\"h2\", {\n    \"id\": \"validation\"\n  }, `Validation`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#validation\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [value, setValue] = useState('');\n  const handleChange = (e) => setValue(e.target.value);\n  return (\n    <>\n      <Form.Group>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n\n      <Form.Group isInvalid>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n\n      <Form.Group isValid>\n        <FormLabel>What kind of cats?</FormLabel>\n        <Form.Control value={value} onChange={handleChange} />\n      </Form.Group>\n    </>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"sizes\"\n  }, `Sizes`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#sizes\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [value, setValue] = useState('');\n  return (\n    <>\n      <Form.Group size=\"sm\">\n        <Form.Control\n          leadingElement={<Icon src={FavoriteBorder} />}\n          trailingElement={<Icon src={Verified} />}\n          floatingLabel=\"What kind of cats?\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Control\n          leadingElement={<Icon src={FavoriteBorder} />}\n          trailingElement={<Icon src={Verified} />}\n          floatingLabel=\"What kind of cats?\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group size=\"lg\">\n        <Form.Control\n          leadingElement={<Icon src={FavoriteBorder} />}\n          trailingElement={<Icon src={Verified} />}\n          floatingLabel=\"What kind of cats?\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </Form.Group>\n    </>\n  );\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Form.Control","status":"Stable","notes":"","components":["FormControl"]},"tableOfContents":{"items":[{"url":"#usage-with-decorators-and-floating-label","title":"Usage with decorators and floating label"},{"url":"#input-types","title":"Input types"},{"url":"#textarea-autoresize","title":"Textarea autoResize"},{"url":"#validation","title":"Validation"},{"url":"#sizes","title":"Sizes"}]}},"components":{"nodes":[{"displayName":"FormControl","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element.","doclets":[],"description":{"id":"205bfc6e-9bd8-5346-9095-0508a8462f62","text":"Specifies class name to append to the base element.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name to append to the base element.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'input'"},"name":"as","type":{"name":"elementType","raw":null,"value":null},"required":false,"docblock":"Specifies base element for the control component.","doclets":[],"description":{"id":"431bf06e-ceb8-57e9-838f-ff2d44af751e","text":"Specifies base element for the control component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies base element for the control component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"onChange","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Specifies function that is triggered on input value change.","doclets":[],"description":{"id":"fa714ea0-e127-51d0-900d-ef29e9692161","text":"Specifies function that is triggered on input value change.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies function that is triggered on input value change.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"defaultValue","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"number"}]},"required":false,"docblock":"Specifies default value of the input component.","doclets":[],"description":{"id":"373fa77d-575b-5bd1-bc92-9dfaa1873538","text":"Specifies default value of the input component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies default value of the input component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"value","type":{"name":"union","raw":null,"value":[{"name":"string"},{"name":"number"}]},"required":false,"docblock":"Specifies current value of the input component.","doclets":[],"description":{"id":"e08048a1-94e2-55dc-82a8-99c9ec843226","text":"Specifies current value of the input component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies current value of the input component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"id","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies id of the control component.","doclets":[],"description":{"id":"0c161632-3f8a-55f1-9d49-7c1ce689ea15","text":"Specifies id of the control component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies id of the control component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"controlClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name for the control component.","doclets":[],"description":{"id":"b5731a03-8166-500a-9b6c-cc045f429b12","text":"Specifies class name for the control component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name for the control component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"size","type":{"name":"enum","raw":null,"value":[{"value":"'sm'","computed":false},{"value":"'lg'","computed":false}]},"required":false,"docblock":"Specifies size for the control component.","doclets":[],"description":{"id":"e241bea0-754e-5780-a89a-a0f7891dc479","text":"Specifies size for the control component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies size for the control component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"leadingElement","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Specifies leading element to display for the input component.","doclets":[],"description":{"id":"0a226676-33b6-5d2e-947c-710799c91cab","text":"Specifies leading element to display for the input component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies leading element to display for the input component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"trailingElement","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Specifies trailing element to display for the input component.","doclets":[],"description":{"id":"29429afe-7d07-5b76-9171-49c6a3e2e293","text":"Specifies trailing element to display for the input component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies trailing element to display for the input component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"floatingLabel","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Specifies floating label to display for the input component.","doclets":[],"description":{"id":"eec32bb7-254c-5c9c-a62a-3dcc73abac83","text":"Specifies floating label to display for the input component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies floating label to display for the input component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"plaintext","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether to render input as plain text.","doclets":[],"description":{"id":"4f6cad12-42ab-5c0e-a774-4d27586e31c2","text":"Specifies whether to render input as plain text.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies whether to render input as plain text.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"isValid","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether to display control in valid state, this affects styling.","doclets":[],"description":{"id":"4719ee6d-c119-5b96-ae56-cf147fc272d1","text":"Specifies whether to display control in valid state, this affects styling.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies whether to display control in valid state, this affects styling.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"isInvalid","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether to display control in invalid state, this affects styling.","doclets":[],"description":{"id":"d9832c12-1bbe-5f8f-ba29-5f03157404a9","text":"Specifies whether to display control in invalid state, this affects styling.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies whether to display control in invalid state, this affects styling.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"autoResize","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Only for `as=\"textarea\"`. Specifies whether the input can be resized according to the height of content.","doclets":[],"description":{"id":"140b6dc7-7cc7-55a1-a1d7-f9db6aee4dd5","text":"Only for `as=\"textarea\"`. Specifies whether the input can be resized according to the height of content.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Only for `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `as=\"textarea\"`), `. Specifies whether the input can be resized according to the height of content.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"c5fb98cd-76ca-5c4b-8cc6-f84ef942d6d2","components":["FormControl"],"cssVariablesData":["var(--pgn-typography-font-size-small-base)","var(--pgn-color-text-muted)","var(--pgn-color-form-feedback-valid)","var(--pgn-color-form-feedback-invalid)","var(--pgn-color-gray-900)","var(--pgn-typography-font-size-base)","var(--pgn-typography-line-height-base)","var(--pgn-spacing-form-control-gutter)","var(--pgn-size-form-control-indicator-base)","var(--pgn-spacing-form-control-spacer-x)","var(--pgn-color-form-control-indicator-checked-base)","var(--pgn-color-form-control-indicator-checked-border-base)","var(--pgn-elevation-form-control-indicator-checked-base)","var(--pgn-color-form-control-indicator-checked-bg-base)","var(--pgn-elevation-form-control-indicator-checked-focus)","var(--pgn-color-form-control-indicator-checked-border-focus)","var(--pgn-color-form-control-indicator-active-base)","var(--pgn-color-form-control-indicator-active-bg)","var(--pgn-color-form-control-indicator-active-border)","var(--pgn-elevation-form-control-indicator-active)","var(--pgn-color-form-control-label-disabled)","var(--pgn-color-form-control-indicator-bg-disabled)","var(--pgn-color-form-control-label-base)","var(--pgn-other-form-control-cursor)","var(--pgn-color-form-control-indicator-bg-base)","var(--pgn-size-form-control-indicator-border-width)","var(--pgn-color-form-control-indicator-border)","var(--pgn-elevation-form-control-indicator-base)","var(--pgn-size-form-control-indicator-bg)","var(--pgn-size-form-control-border-checkbox-indicator-radius)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-base)","var(--pgn-color-form-control-checkbox-indicator-indeterminate-border)","var(--pgn-elevation-form-control-checkbox-indicator-indeterminate)","var(--pgn-color-form-control-checkbox-indicator-indeterminate-bg)","var(--pgn-other-content-form-control-checkbox-indicator-indeterminate-icon)","var(--pgn-color-form-control-indicator-checked-bg-disabled)","var(--pgn-size-form-control-border-radio-indicator-radius)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-base)","var(--pgn-size-form-control-switch-width)","var(--pgn-size-form-control-switch-indicator-border-radius)","var(--pgn-size-form-control-switch-indicator-base)","var(--pgn-transition-form-control)","var(--pgn-size-form-control-select-height-base)","var(--pgn-spacing-form-control-select-padding-y-base)","var(--pgn-spacing-form-control-select-padding-x-base)","var(--pgn-spacing-form-control-select-indicator-padding)","var(--pgn-typography-form-control-select-font-family)","var(--pgn-typography-form-control-select-font-weight)","var(--pgn-typography-form-control-select-line-height)","var(--pgn-color-form-control-select-base)","var(--pgn-color-form-control-select-bg-base)","var(--pgn-other-content-form-control-select-bg)","var(--pgn-size-form-control-select-border-width-base)","var(--pgn-color-form-control-select-border-base)","var(--pgn-elevation-form-control-select-border-base)","var(--pgn-typography-form-control-select-font-size-base)","var(--pgn-size-form-control-select-border-radius)","var(--pgn-color-form-control-select-border-focus)","var(--pgn-elevation-form-control-select-border-focus)","var(--pgn-color-form-input-base)","var(--pgn-color-form-input-bg-base)","var(--pgn-color-form-control-select-disabled)","var(--pgn-color-form-control-select-bg-disabled)","var(--pgn-size-form-control-select-height-sm)","var(--pgn-spacing-form-control-select-padding-y-sm)","var(--pgn-spacing-form-control-select-padding-x-sm)","var(--pgn-typography-form-control-select-font-size-sm)","var(--pgn-size-form-control-select-height-lg)","var(--pgn-spacing-form-control-select-padding-y-lg)","var(--pgn-spacing-form-control-select-padding-x-lg)","var(--pgn-typography-form-control-select-font-size-lg)","var(--pgn-size-form-control-file-height-base)","var(--pgn-color-form-control-file-border-focus)","var(--pgn-elevation-form-control-file-focus)","var(--pgn-color-form-control-file-bg-disabled)","var(--pgn-other-form-control-custom-file-content)","var(--pgn-spacing-form-control-file-padding-y)","var(--pgn-spacing-form-control-file-padding-x)","var(--pgn-typography-form-control-file-font-family)","var(--pgn-typography-form-control-file-font-weight)","var(--pgn-typography-form-control-file-line-height)","var(--pgn-color-form-control-file-base)","var(--pgn-color-form-control-file-bg-base)","var(--pgn-size-form-control-file-width)","var(--pgn-color-form-control-file-border-base)","var(--pgn-elevation-form-control-file-base)","var(--pgn-size-form-control-file-border-radius)","var(--pgn-size-form-control-file-height-inner)","var(--pgn-color-form-control-file-button-base)","var(--pgn-color-form-control-file-button-bg)","var(--pgn-size-form-control-range-thumb-height)","var(--pgn-size-form-control-range-thumb-focus-width)","var(--pgn-elevation-form-control-range-thumb-focus)","var(--pgn-size-form-control-range-thumb-width)","var(--pgn-size-form-control-range-track-height)","var(--pgn-size-form-control-range-thumb-border-base)","var(--pgn-elevation-form-control-range-thumb-base)","var(--pgn-color-form-control-range-thumb-bg-base)","var(--pgn-size-form-control-range-thumb-border-radius)","var(--pgn-color-form-control-range-thumb-bg-active)","var(--pgn-size-form-control-range-track-width)","var(--pgn-other-form-control-range-track-cursor)","var(--pgn-color-form-control-range-track-bg)","var(--pgn-elevation-form-control-range-track)","var(--pgn-size-form-control-range-track-border-radius)","var(--pgn-color-form-control-range-thumb-bg-disabled)","var(--pgn-size-form-input-height-base)","var(--pgn-spacing-form-input-padding-y-base)","var(--pgn-spacing-form-input-padding-x-base)","var(--pgn-typography-form-input-font-family)","var(--pgn-typography-form-input-font-size-base)","var(--pgn-typography-form-input-font-weight)","var(--pgn-typography-form-input-line-height-base)","var(--pgn-size-form-input-width-border)","var(--pgn-color-form-input-border)","var(--pgn-transition-form-input)","var(--pgn-elevation-form-input-base)","var(--pgn-size-form-input-radius-border-base)","var(--pgn-color-form-input-placeholder)","var(--pgn-color-form-input-bg-disabled)","var(--pgn-spacing-form-input-padding-y-lg)","var(--pgn-typography-form-input-font-size-lg)","var(--pgn-typography-form-input-line-height-lg)","var(--pgn-spacing-form-input-padding-y-sm)","var(--pgn-typography-form-input-font-size-sm)","var(--pgn-typography-form-input-line-height-sm)","var(--pgn-color-form-input-plaintext)","var(--pgn-size-form-input-height-sm)","var(--pgn-spacing-form-input-padding-x-sm)","var(--pgn-size-form-input-radius-border-sm)","var(--pgn-size-form-input-height-lg)","var(--pgn-spacing-form-input-padding-x-lg)","var(--pgn-size-form-input-radius-border-lg)","var(--pgn-spacing-form-group-margin-bottom)","var(--pgn-spacing-form-text-margin-top)","var(--pgn-size-form-grid-gutter-width)","var(--pgn-spacing-form-input-check-gutter)","var(--pgn-spacing-form-input-check-margin-y)","var(--pgn-spacing-form-check-inline-margin-x)","var(--pgn-spacing-form-input-check-margin-x-inline)","var(--pgn-other-content-form-feedback-icon-valid)","var(--pgn-color-form-feedback-tooltip-valid)","var(--pgn-color-form-feedback-tooltip-bg-valid)","var(--pgn-color-form-feedback-tooltip-box-shadow-focus-valid)","var(--pgn-color-form-feedback-checked-valid)","var(--pgn-other-content-form-feedback-icon-invalid)","var(--pgn-color-form-feedback-tooltip-bg-invalid)","var(--pgn-color-form-feedback-tooltip-box-shadow-focus-invalid)","var(--pgn-color-form-feedback-checked-invalid)","var(--pgn-spacing-form-input-check-margin-x-base)","var(--pgn-size-form-input-width-hover)","var(--pgn-color-dark-700)","var(--pgn-size-form-control-icon-width)","var(--pgn-spacing-form-control-select-icon-padding)","var(--pgn-color-gray-500)","var(--pgn-color-white)","var(--pgn-color-form-control-label-floating-text)","var(--pgn-other-content-form-control-select-indicator-icon)","var(--pgn-color-form-input-focus-border)","var(--pgn-spacing-form-check-position-axis)","var(--pgn-size-form-border-radius-width)","var(--pgn-size-form-border-radius-check-focus)","var(--pgn-other-content-form-control-switch-indicator-icon-off)","var(--pgn-color-form-control-switch-indicator-checked-bg)","var(--pgn-other-content-form-control-switch-indicator-icon-on)","var(--pgn-typography-font-size-xs)","var(--pgn-color-black)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-invalid)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-valid)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-invalid)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-valid)","var(--pgn-size-form-autosuggest-icon-height)","var(--pgn-size-form-autosuggest-icon-width)","var(--pgn-size-border-radius-sm)","var(--pgn-elevation-dropdown-zindex)","var(--pgn-size-form-autosuggest-spinner-width)","var(--pgn-size-form-autosuggest-spinner-height)","var(--pgn-size-form-autosuggest-border-width)","var(--pgn-typography-font-weight-normal)","var(--pgn-color-form-input-group-addon-base)","var(--pgn-color-form-input-group-addon-bg)","var(--pgn-color-form-input-group-addon-border)","var(--pgn-color-form-input-focus-base)","var(--pgn-color-form-input-focus-bg)","var(--pgn-elevation-form-input-focus)","var(--pgn-spacing-form-control-select-feedback-margin-top)","var(--pgn-typography-form-feedback-font-size)","var(--pgn-spacing-form-control-select-feedback-tooltip-padding-y)","var(--pgn-spacing-form-control-select-feedback-tooltip-padding-x)","var(--pgn-typography-form-feedback-tooltip-font-size)","var(--pgn-typography-form-feedback-tooltip-line-height)","var(--pgn-size-form-feedback-tooltip-border-radius)","var(--pgn-size-form-input-height-inner-base)","var(--pgn-size-form-input-height-inner-quarter)","var(--pgn-size-form-input-height-inner-half)","var(--pgn-size-form-input-width-focus)","var(--pgn-spacing-form-control-select-feedback-icon-padding-right)","var(--pgn-spacing-form-control-select-feedback-icon-position)","var(--pgn-size-form-control-select-feedback-icon)"],"componentsUsageInsights":["Alert","Button","DataTable","DataTable.TableControlBar","DataTable.Table","DataTable.TableFooter","Container","Row","Spinner","Icon","InputText","InputSelect","TextArea","StatusAlert","Hyperlink","Table","CheckCircle","Error","WarningFilled","Alert.Heading","Form.Checkbox","ModalDialog","Form","ModalDialog.Header","ModalDialog.Title","ModalDialog.Body","Form.Group","Form.Label","Form.RadioSet","Form.Radio","ModalDialog.Footer","ActionRow","ModalDialog.CloseButton","StatefulButton","AlertModal","ValidationFormGroup","Input","ModalLayer","ModalCloseButton","Form.Control","useToggle","Form.Text","useWindowSize","breakpoints","OpenInNew","Col","TransitionReplace","Form.Check","Collapsible","Alert.Link","ArrowForwardIos","Collapsible.Advanced","Collapsible.Trigger","Collapsible.Body","OverlayTrigger","Tooltip","InfoOutline","ArrowBack","Form.Switch","Skeleton","Info","Card","Card.Section","Badge","Stack","AutoFixHigh","Groups","Lightbulb","ArrowOutward","Undo","DataTable.EmptyTable","Toast","BookOpen","ErrorOutline","DataTable.RowStatus","Stepper","Stepper.Step","Stepper.ActionRow","MailtoLink","IconButton","Delete","DataTableContext.Provider","CheckboxControl","Popover","Popover.Title","Popover.Content","Modal","Tab","Tabs","Pagination","SpinnerIcon","Plus","Warning","Close","Check","Add","Card.ImageCap","Card.Header","Card.Footer","CardGrid","ActionRow.Spacer","FullscreenModal","Stepper.Header","Assignment","AddCircle","CardView","EditCircle","Pagination.Reduced","FileDownload","MediaQuery","ErrorIcon","Dropdown","Dropdown.Toggle","AvatarButton","Dropdown.Menu","Dropdown.Item","Navbar","Nav","Nav.Link","Mail","DoNotDisturbOn","ModalPopup","Chip","Send","Timelapse","Card.Body","DataTable.FilterStatus","Breadcrumb","useMediaQuery","ProgressBar.Annotated","Search","FormControl.Feedback","ProductTour","FormControl","Download","SearchField","ContentCopy","Dropzone","Image","Card.Status","Sync","MoreVert","PlayCircleFilled","RemoveCircle","Edit","KeyOff","Key","ArrowForward","Bubble","School","TrendingUp","InsertChartOutlined","Tag","CreditCard","MoneyOutline","Description","Settings","Support","Email","ArrowBackIos","ResponsiveContext.Provider","PageBanner","Login","Institution","VisibilityOff","Visibility","Remove","ExpandMore","ChevronLeft","FormAutosuggestOption","FormAutosuggest","FormControlFeedback","Form.CheckboxSet","Event","SpinnerSimple","Cancel","Nav.Item","Layout","Layout.Element","IconAdd","IconButtonWithTooltip","DeleteOutline","EditOutline","AddIcon","CalendarIcon","ArrowCircleDownIcon","Truncate","MoreHoriz","Dropdown.Divider","ClosedCaption","useCheckboxSetValues","SelectableBox.Set","SelectableBox","Locked","LockOpen","Menu","MenuItem","Tune","Sheet","ChevronRight","VideoFile","Collapsible.Visible","ExpandLess","FileUploadIcon","Card.Divider","InfoIcon","Calendar","SwitchControl","WarningIcon","IconSettings","Form.Row","ButtonGroup","CheckCircleOutline","EmailIcon","CheckCircleIcon","Copyright","Cc","Attribution","Nc","Nd","Sa","FormLabel","RotateRightIcon","CloseIcon","SearchField.Advanced","SearchField.Label","SearchField.Input","SearchIcon","PostOutline","HelpOutline","Report","Avatar","DropdownButton","Post","Help","People","ModalDialog.Hero","Launch","Book","EventNote","Program","FilterAlt","CloseSmall","paragon","MarketingModal","Dropdown.Header","PersonSearch","FormGroup","Lock","StarFilled","AccessTime","Speed","Equalizer","Person","RocketLaunch","ContentPasteGo","Navbar.Brand","VerifiedBadge","StandardModal","LibraryBooks","CalendarMonth","ExpandCircleDown","FormatQuote","CardCarousel","CardDeck","ZoomOut","MenuIcon","Dropdown.Deprecated","AccountBalance","SearchField.ClearButton","SearchField.SubmitButton","WatchFilled","Blocked","ArrowDropDown","ArrowDropUp","QuestionAnswer","WatchOutline","Compass","MoneyFilled","TextFields","VideoCamera","CheckIcon","DjangoShort","Form.AutosuggestOption","Form.Autosuggest","NotificationsNone","CheckCircleLightOutline","AutoAwesome","FeedbackOutline","KeyboardArrowDown","KeyboardArrowUp","FileUpload","InputGroup","DragIndicator","icons","Scrollable","DropdownToggle","SelectMenu","Form.SwitchSet","Facebook","BsTwitter","BsLinkedin","Reddit","Thunderstorm","Minimize","Recommend","useArrowKeyNavigation","CallMade","KeyboardArrowRight","ArrowUpward","ArrowRightAlt","LocalOffer","LocationOn","Done","CheckBoxGroup","CheckBox","Variant","Fieldset"],"githubEditPath":"https://github.com/openedx/paragon/edit/master/src/Form/form-control.mdx"}},"staticQueryHashes":["3617884278","3649515864","3773363936","63159454"]}