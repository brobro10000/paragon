{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/form/form-switch/","result":{"data":{"mdx":{"id":"07b0c1ef-6f86-5271-829e-fd78d8761932","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Form.Switch\",\n  \"type\": \"component\",\n  \"components\": [\"FormSwitch\", \"SwitchControl\"],\n  \"categories\": [\"Forms\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A switch control for use with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Form.SwitchSet`), `. This component has identical\nprops to `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Form.Checkbox`), ` and is interoperable with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Form.SwitchSet`), ` and\n`, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `useCheckboxSetValues`), `.`), mdx(\"p\", null, `Note: extra props added to this component are passed as attributes to the\nunderlying `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `input`), ` node. See MDN for documentation on available\n`, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attributes\"\n  }, `input attributes`), `.`), mdx(\"h2\", {\n    \"id\": \"controlled-standalone-usage\"\n  }, `Controlled Standalone Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#controlled-standalone-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [isChecked, setChecked] = useState(false);\n  const handleChange = e => setChecked(e.target.checked);\n  return (\n    <Form.Switch checked={isChecked} onChange={handleChange}>\n      I want pizza.\n    </Form.Switch>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"unlabeled-control\"\n  }, `Unlabeled control`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#unlabeled-control\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [isChecked, setChecked] = useState(false);\n  const handleChange = e => setChecked(e.target.checked);\n  return (\n    <SwitchControl\n      checked={isChecked}\n      onChange={handleChange}\n      aria-label=\"Form switch\"\n    />\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"controlled-group-usage-with-usecheckboxsetvalues\"\n  }, `Controlled Group Usage with useCheckboxSetValues`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#controlled-group-usage-with-usecheckboxsetvalues\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `useCheckboxSetValues(initialValues[])`), ` returns an array: `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `[state, dispatchers]`), `.`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `dispatchers`), ` includes `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `add(value)`), ` `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `remove(value)`), ` `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `set(values[])`), ` and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `clear()`)), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n\n  const [colorValues, { add, remove }] = useCheckboxSetValues(['green']);\n\n  const handleChange = e => {\n    if (e.target.checked) {\n      add(e.target.value);\n    } else {\n      remove(e.target.value);\n    }\n  }\n  return (\n    <Form.Group>\n      <Form.Label>Which Color?</Form.Label>\n      <Form.SwitchSet\n        name=\"colors\"\n        onChange={handleChange}\n        value={colorValues}\n      >\n        <Form.Switch value=\"red\">Red</Form.Switch>\n        <Form.Switch value=\"green\">Green</Form.Switch>\n        <Form.Switch value=\"blue\">Blue</Form.Switch>\n        <Form.Switch value=\"cyan\" disabled>Cyan</Form.Switch>\n      </Form.SwitchSet>\n    </Form.Group>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"uncontrolled-usage\"\n  }, `Uncontrolled Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#uncontrolled-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Form.Group>\n  <Form.Label>Which Color?</Form.Label>\n  <Form.SwitchSet\n    name=\"color-two\"\n    onChange={(e) => console.log(e.target.value)}\n    defaultValue={['green']}\n  >\n    <Form.Switch value=\"red\">Red</Form.Switch>\n    <Form.Switch value=\"green\">Green</Form.Switch>\n    <Form.Switch value=\"blue\">Blue</Form.Switch>\n    <Form.Switch value=\"cyan\" disabled>Cyan</Form.Switch>\n  </Form.SwitchSet>\n</Form.Group>\n`)), mdx(\"h2\", {\n    \"id\": \"indeterminate-usage\"\n  }, `Indeterminate Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#indeterminate-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const allCheeseOptions = ['swiss', 'cheddar', 'pepperjack'];\n  const [checkedCheeses, { add, remove, set, clear }] = useCheckboxSetValues(['swiss']);\n\n  const handleChange = e => {\n    e.target.checked ? add(e.target.value) : remove(e.target.value);\n  };\n\n  const handleCheckAllChange = e => {\n    e.target.checked ? set(allCheeseOptions) : clear();\n  };\n\n  const allChecked = allCheeseOptions.every(value => checkedCheeses.includes(value));\n  const someChecked = allCheeseOptions.some(value => checkedCheeses.includes(value));\n  const isIndeterminate = someChecked && !allChecked;\n\n  return (\n    <>\n      <div className=\"d-flex\">\n        <Form.Switch\n          checked={allChecked}\n          isIndeterminate={isIndeterminate}\n          onChange={handleCheckAllChange}\n        >\n          All the cheese\n        </Form.Switch>\n      </div>\n      <Form.SwitchSet\n        className=\"p-2\"\n        value={checkedCheeses}\n        onChange={handleChange}\n      >\n        <Form.Switch value=\"swiss\">Swiss</Form.Switch>\n        <Form.Switch value=\"cheddar\">Cheddar</Form.Switch>\n        <Form.Switch value=\"pepperjack\">Pepperjack</Form.Switch>\n      </Form.SwitchSet>\n    </>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"inline-layout\"\n  }, `Inline layout`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#inline-layout\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Form.Group>\n  <Form.Label>Which Color?</Form.Label>\n  <Form.SwitchSet\n    name=\"color-three\"\n    onChange={(e) => console.log(e.target.value)}\n    defaultValue={['green']}\n    isInline\n  >\n    <Form.Switch value=\"red\">Red</Form.Switch>\n    <Form.Switch value=\"green\">Green</Form.Switch>\n    <Form.Switch value=\"blue\">Blue</Form.Switch>\n    <Form.Switch value=\"cyan\" disabled>Cyan</Form.Switch>\n  </Form.SwitchSet>\n</Form.Group>\n`)), mdx(\"h2\", {\n    \"id\": \"label-position\"\n  }, `Label Position`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#label-position\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `The label is positioned to the right of the switch control by default. The label can be rendered on the left instead\nby passing the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `floatLabelLeft`), ` prop.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Form.Group>\n  <Form.SwitchSet>\n    <Form.Switch value=\"red\">Red</Form.Switch>\n    <Form.Switch value=\"blue\" floatLabelLeft>Blue</Form.Switch>\n  </Form.SwitchSet>\n</Form.Group>\n`)), mdx(\"h2\", {\n    \"id\": \"helper-text\"\n  }, `Helper Text`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#helper-text\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `A helper text component can be passed in to be rendered below the switch control.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<Form.Group>\n  <Form.SwitchSet>\n    <Form.Switch\n      value=\"red\"\n      helperText={\n        <span>Helper text for red switch</span>\n      }\n    >\n      Red\n    </Form.Switch>\n    <Form.Switch\n      value=\"blue\"\n      helperText={\n        <span>Helper text for blue switch</span>\n      }\n    >\n      Blue\n    </Form.Switch>\n  </Form.SwitchSet>\n</Form.Group>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Form.Switch","status":"New","notes":"","components":["FormSwitch","SwitchControl"]},"tableOfContents":{"items":[{"url":"#controlled-standalone-usage","title":"Controlled Standalone Usage"},{"url":"#unlabeled-control","title":"Unlabeled control"},{"url":"#controlled-group-usage-with-usecheckboxsetvalues","title":"Controlled Group Usage with useCheckboxSetValues"},{"url":"#uncontrolled-usage","title":"Uncontrolled Usage"},{"url":"#indeterminate-usage","title":"Indeterminate Usage"},{"url":"#inline-layout","title":"Inline layout"},{"url":"#label-position","title":"Label Position"},{"url":"#helper-text","title":"Helper Text"}]}},"components":{"nodes":[{"displayName":"SwitchControl","props":[{"defaultValue":{"value":"false"},"name":"isIndeterminate","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies whether input should be rendered in indeterminate state.","doclets":[],"description":{"id":"dcec219d-5b31-51b7-8723-68a380365ffe","text":"Specifies whether input should be rendered in indeterminate state.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies whether input should be rendered in indeterminate state.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element.","doclets":[],"description":{"id":"f45fe2e3-adbf-5fde-af8f-8086ac54ff9c","text":"Specifies class name to append to the base element.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name to append to the base element.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"FormSwitch","props":[{"defaultValue":null,"name":"children","type":{"name":"node","raw":null,"value":null},"required":true,"docblock":"Specifies contents of the component.","doclets":[],"description":{"id":"bdbeddca-7939-5ce6-9a4f-047d34ecbd1e","text":"Specifies contents of the component.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies contents of the component.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element.","doclets":[],"description":{"id":"b5ea793a-8285-551c-9e5e-74aab99efd1d","text":"Specifies class name to append to the base element.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name to append to the base element.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"labelClassName","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"940f2c52-5ee0-5dfe-942d-6a90b1f2bef9","text":"","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"helperText","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"242c6bba-ae8b-5e38-9a4e-35dd6c8812b4","text":"","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"floatLabelLeft","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"aa4fd17e-343e-5b37-bc9f-2ae92adc06b1","text":"","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"07b0c1ef-6f86-5271-829e-fd78d8761932","components":["FormSwitch","SwitchControl"],"cssVariablesData":["var(--pgn-typography-font-size-small-base)","var(--pgn-color-text-muted)","var(--pgn-color-form-feedback-valid)","var(--pgn-color-form-feedback-invalid)","var(--pgn-color-gray-900)","var(--pgn-typography-font-size-base)","var(--pgn-typography-line-height-base)","var(--pgn-spacing-form-control-gutter)","var(--pgn-size-form-control-indicator-base)","var(--pgn-spacing-form-control-spacer-x)","var(--pgn-color-form-control-indicator-checked-base)","var(--pgn-color-form-control-indicator-checked-border-base)","var(--pgn-elevation-form-control-indicator-checked-base)","var(--pgn-color-form-control-indicator-checked-bg-base)","var(--pgn-elevation-form-control-indicator-checked-focus)","var(--pgn-color-form-control-indicator-checked-border-focus)","var(--pgn-color-form-control-indicator-active-base)","var(--pgn-color-form-control-indicator-active-bg)","var(--pgn-color-form-control-indicator-active-border)","var(--pgn-elevation-form-control-indicator-active)","var(--pgn-color-form-control-label-disabled)","var(--pgn-color-form-control-indicator-bg-disabled)","var(--pgn-color-form-control-label-base)","var(--pgn-other-form-control-cursor)","var(--pgn-color-form-control-indicator-bg-base)","var(--pgn-size-form-control-indicator-border-width)","var(--pgn-color-form-control-indicator-border)","var(--pgn-elevation-form-control-indicator-base)","var(--pgn-size-form-control-indicator-bg)","var(--pgn-size-form-control-border-checkbox-indicator-radius)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-base)","var(--pgn-color-form-control-checkbox-indicator-indeterminate-border)","var(--pgn-elevation-form-control-checkbox-indicator-indeterminate)","var(--pgn-color-form-control-checkbox-indicator-indeterminate-bg)","var(--pgn-other-content-form-control-checkbox-indicator-indeterminate-icon)","var(--pgn-color-form-control-indicator-checked-bg-disabled)","var(--pgn-size-form-control-border-radio-indicator-radius)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-base)","var(--pgn-size-form-control-switch-width)","var(--pgn-size-form-control-switch-indicator-border-radius)","var(--pgn-size-form-control-switch-indicator-base)","var(--pgn-transition-form-control)","var(--pgn-size-form-control-select-height-base)","var(--pgn-spacing-form-control-select-padding-y-base)","var(--pgn-spacing-form-control-select-padding-x-base)","var(--pgn-spacing-form-control-select-indicator-padding)","var(--pgn-typography-form-control-select-font-family)","var(--pgn-typography-form-control-select-font-weight)","var(--pgn-typography-form-control-select-line-height)","var(--pgn-color-form-control-select-base)","var(--pgn-color-form-control-select-bg-base)","var(--pgn-other-content-form-control-select-bg)","var(--pgn-size-form-control-select-border-width-base)","var(--pgn-color-form-control-select-border-base)","var(--pgn-elevation-form-control-select-border-base)","var(--pgn-typography-form-control-select-font-size-base)","var(--pgn-size-form-control-select-border-radius)","var(--pgn-color-form-control-select-border-focus)","var(--pgn-elevation-form-control-select-border-focus)","var(--pgn-color-form-input-base)","var(--pgn-color-form-input-bg-base)","var(--pgn-color-form-control-select-disabled)","var(--pgn-color-form-control-select-bg-disabled)","var(--pgn-size-form-control-select-height-sm)","var(--pgn-spacing-form-control-select-padding-y-sm)","var(--pgn-spacing-form-control-select-padding-x-sm)","var(--pgn-typography-form-control-select-font-size-sm)","var(--pgn-size-form-control-select-height-lg)","var(--pgn-spacing-form-control-select-padding-y-lg)","var(--pgn-spacing-form-control-select-padding-x-lg)","var(--pgn-typography-form-control-select-font-size-lg)","var(--pgn-size-form-control-file-height-base)","var(--pgn-color-form-control-file-border-focus)","var(--pgn-elevation-form-control-file-focus)","var(--pgn-color-form-control-file-bg-disabled)","var(--pgn-other-form-control-custom-file-content)","var(--pgn-spacing-form-control-file-padding-y)","var(--pgn-spacing-form-control-file-padding-x)","var(--pgn-typography-form-control-file-font-family)","var(--pgn-typography-form-control-file-font-weight)","var(--pgn-typography-form-control-file-line-height)","var(--pgn-color-form-control-file-base)","var(--pgn-color-form-control-file-bg-base)","var(--pgn-size-form-control-file-width)","var(--pgn-color-form-control-file-border-base)","var(--pgn-elevation-form-control-file-base)","var(--pgn-size-form-control-file-border-radius)","var(--pgn-size-form-control-file-height-inner)","var(--pgn-color-form-control-file-button-base)","var(--pgn-color-form-control-file-button-bg)","var(--pgn-size-form-control-range-thumb-height)","var(--pgn-size-form-control-range-thumb-focus-width)","var(--pgn-elevation-form-control-range-thumb-focus)","var(--pgn-size-form-control-range-thumb-width)","var(--pgn-size-form-control-range-track-height)","var(--pgn-size-form-control-range-thumb-border-base)","var(--pgn-elevation-form-control-range-thumb-base)","var(--pgn-color-form-control-range-thumb-bg-base)","var(--pgn-size-form-control-range-thumb-border-radius)","var(--pgn-color-form-control-range-thumb-bg-active)","var(--pgn-size-form-control-range-track-width)","var(--pgn-other-form-control-range-track-cursor)","var(--pgn-color-form-control-range-track-bg)","var(--pgn-elevation-form-control-range-track)","var(--pgn-size-form-control-range-track-border-radius)","var(--pgn-color-form-control-range-thumb-bg-disabled)","var(--pgn-size-form-input-height-base)","var(--pgn-spacing-form-input-padding-y-base)","var(--pgn-spacing-form-input-padding-x-base)","var(--pgn-typography-form-input-font-family)","var(--pgn-typography-form-input-font-size-base)","var(--pgn-typography-form-input-font-weight)","var(--pgn-typography-form-input-line-height-base)","var(--pgn-size-form-input-width-border)","var(--pgn-color-form-input-border)","var(--pgn-transition-form-input)","var(--pgn-elevation-form-input-base)","var(--pgn-size-form-input-radius-border-base)","var(--pgn-color-form-input-placeholder)","var(--pgn-color-form-input-bg-disabled)","var(--pgn-spacing-form-input-padding-y-lg)","var(--pgn-typography-form-input-font-size-lg)","var(--pgn-typography-form-input-line-height-lg)","var(--pgn-spacing-form-input-padding-y-sm)","var(--pgn-typography-form-input-font-size-sm)","var(--pgn-typography-form-input-line-height-sm)","var(--pgn-color-form-input-plaintext)","var(--pgn-size-form-input-height-sm)","var(--pgn-spacing-form-input-padding-x-sm)","var(--pgn-size-form-input-radius-border-sm)","var(--pgn-size-form-input-height-lg)","var(--pgn-spacing-form-input-padding-x-lg)","var(--pgn-size-form-input-radius-border-lg)","var(--pgn-spacing-form-group-margin-bottom)","var(--pgn-spacing-form-text-margin-top)","var(--pgn-size-form-grid-gutter-width)","var(--pgn-spacing-form-input-check-gutter)","var(--pgn-spacing-form-input-check-margin-y)","var(--pgn-spacing-form-check-inline-margin-x)","var(--pgn-spacing-form-input-check-margin-x-inline)","var(--pgn-other-content-form-feedback-icon-valid)","var(--pgn-color-form-feedback-tooltip-valid)","var(--pgn-color-form-feedback-tooltip-bg-valid)","var(--pgn-color-form-feedback-tooltip-box-shadow-focus-valid)","var(--pgn-color-form-feedback-checked-valid)","var(--pgn-other-content-form-feedback-icon-invalid)","var(--pgn-color-form-feedback-tooltip-bg-invalid)","var(--pgn-color-form-feedback-tooltip-box-shadow-focus-invalid)","var(--pgn-color-form-feedback-checked-invalid)","var(--pgn-spacing-form-input-check-margin-x-base)","var(--pgn-size-form-input-width-hover)","var(--pgn-color-dark-700)","var(--pgn-size-form-control-icon-width)","var(--pgn-spacing-form-control-select-icon-padding)","var(--pgn-color-gray-500)","var(--pgn-color-white)","var(--pgn-color-form-control-label-floating-text)","var(--pgn-other-content-form-control-select-indicator-icon)","var(--pgn-color-form-input-focus-border)","var(--pgn-spacing-form-check-position-axis)","var(--pgn-size-form-border-radius-width)","var(--pgn-size-form-border-radius-check-focus)","var(--pgn-other-content-form-control-switch-indicator-icon-off)","var(--pgn-color-form-control-switch-indicator-checked-bg)","var(--pgn-other-content-form-control-switch-indicator-icon-on)","var(--pgn-typography-font-size-xs)","var(--pgn-color-black)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-invalid)","var(--pgn-other-content-form-control-checkbox-indicator-icon-checked-valid)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-invalid)","var(--pgn-other-content-form-control-radio-indicator-icon-checked-valid)","var(--pgn-size-form-autosuggest-icon-height)","var(--pgn-size-form-autosuggest-icon-width)","var(--pgn-size-border-radius-sm)","var(--pgn-elevation-dropdown-zindex)","var(--pgn-size-form-autosuggest-spinner-width)","var(--pgn-size-form-autosuggest-spinner-height)","var(--pgn-size-form-autosuggest-border-width)","var(--pgn-typography-font-weight-normal)","var(--pgn-color-form-input-group-addon-base)","var(--pgn-color-form-input-group-addon-bg)","var(--pgn-color-form-input-group-addon-border)","var(--pgn-color-form-input-focus-base)","var(--pgn-color-form-input-focus-bg)","var(--pgn-elevation-form-input-focus)","var(--pgn-spacing-form-control-select-feedback-margin-top)","var(--pgn-typography-form-feedback-font-size)","var(--pgn-spacing-form-control-select-feedback-tooltip-padding-y)","var(--pgn-spacing-form-control-select-feedback-tooltip-padding-x)","var(--pgn-typography-form-feedback-tooltip-font-size)","var(--pgn-typography-form-feedback-tooltip-line-height)","var(--pgn-size-form-feedback-tooltip-border-radius)","var(--pgn-size-form-input-height-inner-base)","var(--pgn-size-form-input-height-inner-quarter)","var(--pgn-size-form-input-height-inner-half)","var(--pgn-size-form-input-width-focus)","var(--pgn-spacing-form-control-select-feedback-icon-padding-right)","var(--pgn-spacing-form-control-select-feedback-icon-position)","var(--pgn-size-form-control-select-feedback-icon)"],"componentsUsageInsights":["Alert","Button","DataTable","DataTable.TableControlBar","DataTable.Table","DataTable.TableFooter","Container","Row","Spinner","Icon","InputText","InputSelect","TextArea","StatusAlert","Hyperlink","Table","CheckCircle","Error","WarningFilled","Alert.Heading","Form.Checkbox","ModalDialog","Form","ModalDialog.Header","ModalDialog.Title","ModalDialog.Body","Form.Group","Form.Label","Form.RadioSet","Form.Radio","ModalDialog.Footer","ActionRow","ModalDialog.CloseButton","StatefulButton","AlertModal","ValidationFormGroup","Input","ModalLayer","ModalCloseButton","Form.Control","useToggle","Form.Text","useWindowSize","breakpoints","OpenInNew","Col","TransitionReplace","Form.Check","Collapsible","Alert.Link","ArrowForwardIos","Collapsible.Advanced","Collapsible.Trigger","Collapsible.Body","OverlayTrigger","Tooltip","InfoOutline","ArrowBack","Form.Switch","Skeleton","Info","Lightbulb","ArrowOutward","Undo","Badge","DataTable.EmptyTable","Toast","BookOpen","ErrorOutline","DataTable.RowStatus","Stepper","Stepper.Step","Stepper.ActionRow","MailtoLink","Stack","Card","Card.Section","IconButton","Delete","DataTableContext.Provider","CheckboxControl","Popover","Popover.Title","Popover.Content","Modal","Tab","Tabs","Pagination","SpinnerIcon","Plus","Warning","Close","Check","Add","Card.ImageCap","Card.Header","Card.Footer","CardGrid","ActionRow.Spacer","FullscreenModal","Stepper.Header","Assignment","AddCircle","CardView","EditCircle","Pagination.Reduced","FileDownload","MediaQuery","ErrorIcon","Dropdown","Dropdown.Toggle","AvatarButton","Dropdown.Menu","Dropdown.Item","Navbar","Nav","Nav.Link","Breadcrumb","Card.Body","ProgressBar.Annotated","DataTable.FilterStatus","Search","FormControl.Feedback","Groups","ProductTour","FormControl","Download","SearchField","ContentCopy","Dropzone","Image","Card.Status","Sync","MoreVert","PlayCircleFilled","RemoveCircle","Edit","ArrowForward","Bubble","School","TrendingUp","InsertChartOutlined","Tag","CreditCard","MoneyOutline","Description","Settings","Support","Email","ArrowBackIos","ResponsiveContext.Provider","PageBanner","Login","Institution","VisibilityOff","Visibility","Remove","ExpandMore","ChevronLeft","useMediaQuery","FormAutosuggestOption","FormAutosuggest","FormControlFeedback","Form.CheckboxSet","Send","Event","SpinnerSimple","Cancel","Nav.Item","Layout","Layout.Element","ModalPopup","IconAdd","IconButtonWithTooltip","DeleteOutline","EditOutline","AddIcon","CalendarIcon","ArrowCircleDownIcon","Truncate","Dropdown.Divider","Chip","SelectableBox.Set","SelectableBox","Collapsible.Visible","ExpandLess","FileUploadIcon","Card.Divider","InfoIcon","Calendar","SwitchControl","WarningIcon","IconSettings","Form.Row","ButtonGroup","CheckCircleOutline","EmailIcon","CheckCircleIcon","Copyright","Cc","Attribution","Nc","Nd","Sa","FormLabel","RotateRightIcon","CloseIcon","Tune","SearchField.Advanced","SearchField.Label","SearchField.Input","SearchIcon","PostOutline","HelpOutline","Report","MoreHoriz","Avatar","DropdownButton","Post","Help","People","Locked","ModalDialog.Hero","Launch","Book","EventNote","Program","FilterAlt","CloseSmall","Sheet","useCheckboxSetValues","paragon","MarketingModal","Dropdown.Header","PersonSearch","FormGroup","ChevronRight","Lock","StarFilled","AccessTime","Speed","Equalizer","VideoFile","Person","RocketLaunch","ContentPasteGo","Navbar.Brand","VerifiedBadge","StandardModal","LibraryBooks","CalendarMonth","ExpandCircleDown","FormatQuote","CardCarousel","CardDeck","ZoomOut","MenuIcon","Dropdown.Deprecated","AccountBalance","WatchFilled","Blocked","ArrowDropDown","ArrowDropUp","Menu","QuestionAnswer","WatchOutline","Compass","MoneyFilled","TextFields","VideoCamera","CheckIcon","DjangoShort","Form.AutosuggestOption","Form.Autosuggest","NotificationsNone","CheckCircleLightOutline","AutoAwesome","SearchField.ClearButton","SearchField.SubmitButton","FeedbackOutline","KeyboardArrowDown","KeyboardArrowUp","FileUpload","ClosedCaption","InputGroup","DragIndicator","icons","Scrollable","DropdownToggle","SelectMenu","MenuItem","Form.SwitchSet","Facebook","BsTwitter","BsLinkedin","Reddit","Thunderstorm","Minimize","Recommend","useArrowKeyNavigation","CallMade","KeyboardArrowRight","ArrowUpward","Verified","Timelapse","ArrowRightAlt","LocalOffer","LocationOn","Done","CheckBoxGroup","CheckBox","Variant","Fieldset"],"githubEditPath":"https://github.com/openedx/paragon/edit/master/src/Form/form-switch.mdx"}},"staticQueryHashes":["3617884278","3649515864","3773363936","63159454"]}