{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/hooks/usetoggle/","result":{"data":{"mdx":{"id":"4a0ab8fa-4119-5951-ab27-6d281fc22e22","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"useToggle\",\n  \"type\": \"hook\",\n  \"categories\": [\"Hooks\"],\n  \"components\": [\"useToggle\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Toggle a boolean value on or off with handlers`), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `const [state, setOn, setOff, toggle] = useToggle(initialState, handlers);`)), mdx(\"h2\", {\n    \"id\": \"sample-usage\"\n  }, `Sample Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#sample-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const defaultIsOn = true;\n  const handlers = {\n    handleToggleOn: () => console.log('called handleToggleOn'),\n    handleToggleOff: () => console.log('called handleToggleOff'),\n    handleToggle: () => console.log('called handleToggle'),\n  }\n\n  const [isOn, setOn, setOff, toggle] = useToggle(defaultIsOn, handlers);\n\n  return (\n    <div>\n      <p>\n        Toggle is\n        {isOn\n          ? <Badge variant=\"success\">On</Badge>\n          : <Badge variant=\"light\">Off</Badge>\n        }\n      </p>\n\n      <Button onClick={setOn} className=\"mr-2\" variant=\"outline-primary\">set on</Button>\n      <Button onClick={setOff} className=\"mr-2\" variant=\"outline-primary\">set off</Button>\n      <Button onClick={toggle} className=\"mr-2\" variant=\"outline-primary\">toggle</Button>\n    </div>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"basic-usage\"\n  }, `Basic Usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [isOpen, open, close] = useToggle(false);\n\n  return (\n    <Card style={{ width: '18rem' }}>\n      <Card.ImageCap src=\"https://picsum.photos/400/200/\" srcAlt=\"Image description\" />\n      <Card.Header title=\"Card Title\"/>\n      <Card.Section>\n        <p>\n          Some quick example text to build on the card title and make up the bulk of\n          the card's content.\n        </p>\n        {\n          isOpen ? (\n            <>\n              <p>Poutine cred portland heirloom seitan sartorial 90's cray. Humblebrag blue bottle venmo, cloud bread cronut neutra sartorial whatever slow-carb tattooed cliche helvetica poutine squid. Direct trade health goth gentrify kitsch, heirloom blog umami synth ennui seitan messenger bag. Literally poutine slow-carb, hexagon leggings seitan readymade.</p>\n              <Button block variant=\"outline-primary\" onClick={close}>Close</Button>\n            </>\n          ) : (\n            <Button block variant=\"outline-primary\" onClick={open}>See more</Button>\n          )\n        }\n      </Card.Section>\n    </Card>\n  );\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"useToggle","status":"New","notes":"","components":["useToggle"]},"tableOfContents":{"items":[{"url":"#sample-usage","title":"Sample Usage"},{"url":"#basic-usage","title":"Basic Usage"}]}},"components":{"nodes":[]}},"pageContext":{"id":"4a0ab8fa-4119-5951-ab27-6d281fc22e22","components":["useToggle"],"scssVariablesData":{},"componentsUsageInsights":["Alert","Button","DataTable","DataTable.TableControlBar","DataTable.Table","DataTable.TableFooter","Container","Row","Spinner","Icon","InputText","InputSelect","TextArea","StatusAlert","Hyperlink","Table","CheckCircle","Error","WarningFilled","Alert.Heading","Form.Checkbox","ModalDialog","Form","ModalDialog.Header","ModalDialog.Title","ModalDialog.Body","Form.Group","Form.Label","Form.RadioSet","Form.Radio","ModalDialog.Footer","ActionRow","ModalDialog.CloseButton","StatefulButton","Form.Control","Form.Switch","AlertModal","ValidationFormGroup","Input","ModalLayer","ModalCloseButton","useToggle","Form.Text","useWindowSize","breakpoints","OpenInNew","Col","TransitionReplace","Form.Check","Collapsible","Alert.Link","ArrowForwardIos","Collapsible.Advanced","Collapsible.Trigger","Collapsible.Body","OverlayTrigger","Tooltip","InfoOutline","ArrowBack","Skeleton","Lightbulb","ArrowOutward","Badge","DataTable.EmptyTable","Toast","BookOpen","ErrorOutline","DataTable.RowStatus","Stepper","Stepper.Step","Stepper.ActionRow","MailtoLink","Stack","Card","Card.Section","IconButton","Delete","DataTableContext.Provider","CheckboxControl","Popover","Popover.Title","Popover.Content","Modal","Tab","Tabs","Info","Pagination","Warning","Add","Card.ImageCap","Card.Header","Card.Footer","CardGrid","ActionRow.Spacer","FullscreenModal","Stepper.Header","Assignment","AddCircle","CardView","EditCircle","Pagination.Reduced","CheckBox","MediaQuery","ErrorIcon","Dropdown","Dropdown.Toggle","AvatarButton","Dropdown.Menu","Dropdown.Item","Navbar","Nav","Nav.Link","ProgressBar.Annotated","useMediaQuery","Search","FormControl.Feedback","ProductTour","FormControl","SearchField","Dropzone","Image","Download","Check","Card.Status","Sync","Breadcrumb","MoreVert","PlayCircleFilled","RemoveCircle","Edit","ArrowForward","Bubble","MoneyOutline","Email","Card.Body","ResponsiveContext.Provider","PageBanner","Login","Institution","VisibilityOff","Visibility","Remove","ExpandMore","ChevronLeft","FormAutosuggestOption","FormAutosuggest","FormControlFeedback","Close","Form.CheckboxSet","Send","Event","SpinnerSimple","Cancel","Nav.Item","Layout","Layout.Element","ModalPopup","IconButtonWithTooltip","EditOutline","DeleteOutline","Collapsible.Visible","ExpandLess","SwitchControl","WarningIcon","Form.Row","ButtonGroup","SelectableBox.Set","SelectableBox","Settings","Tune","SearchField.Advanced","SearchField.Label","SearchField.Input","SearchIcon","PostOutline","HelpOutline","Report","MoreHoriz","Dropdown.Divider","School","Avatar","DropdownButton","Post","Help","People","Locked","Truncate","ModalDialog.Hero","Launch","Book","EventNote","Program","FilterAlt","Chip","CloseSmall","Sheet","useCheckboxSetValues","paragon","MarketingModal","Dropdown.Header","FormLabel","PersonSearch","FormGroup","ChevronRight","Lock","StarFilled","Navbar.Brand","VerifiedBadge","StandardModal","CardCarousel","CardDeck","ZoomOut","MenuIcon","Dropdown.Deprecated","ContentCopy","AccountBalance","WatchFilled","Blocked","ArrowDropDown","ArrowDropUp","Menu","ChatBubbleOutline","ArrowBackIos","QuestionAnswer","WatchOutline","Compass","MoneyFilled","CheckIcon","DataTable.FilterStatus","DjangoShort","Form.AutosuggestOption","Form.Autosuggest","NotificationsNone","SearchField.ClearButton","SearchField.SubmitButton","FeedbackOutline","KeyboardArrowDown","KeyboardArrowUp","FileUpload","Copyright","Cc","Attribution","Nc","Nd","Sa","ClosedCaption","DragIndicator","icons","Scrollable","Form.SwitchSet","Facebook","BsTwitter","BsLinkedin","Reddit","Groups","Message","Minimize","Recommend","useArrowKeyNavigation","CallMade","KeyboardArrowRight","Person","ArrowUpward","Verified","Card.Divider","Timelapse","ArrowRightAlt","ExpandCircleDown","LocalOffer","CreditCard","LibraryBooks","AccessTime","FormatQuote","CalendarMonth","LocationOn","Calendar","Done","MenuItem","CheckBoxGroup","Variant","Fieldset"]}},"staticQueryHashes":["3617884278","3649515864","3773363936","63159454"]}