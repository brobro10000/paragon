{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/inputtext/","result":{"data":{"mdx":{"id":"90005de3-ec3c-5e44-a520-cfb5c6a53efb","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"InputText\",\n  \"type\": \"component\",\n  \"components\": [\"InputText\"],\n  \"categories\": [\"Forms (deprecated)\"],\n  \"status\": \"Deprecate Soon\",\n  \"designStatus\": \"TBD\",\n  \"devStatus\": \"To Do\",\n  \"notes\": \"Replaced by Input and ValidationFormGroup\\n\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"minimal-usage\"\n  }, `minimal usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#minimal-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText name=\"name\" label=\"First Name\" value=\"Foo Bar\" />\n`)), mdx(\"h2\", {\n    \"id\": \"read-only\"\n  }, `read only`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#read-only\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText name=\"inputState\" label=\"Input State\" value=\"Read Only\" readOnly />\n`)), mdx(\"h2\", {\n    \"id\": \"validation\"\n  }, `validation`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#validation\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText\n  id=\"username\"\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={value => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n      };\n    }\n    return feedback;\n  }}\n/>\n`)), mdx(\"h3\", {\n    \"id\": \"validation-with-danger-theme\"\n  }, `validation with danger theme`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#validation-with-danger-theme\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText\n  name=\"username\"\n  label=\"Username\"\n  description=\"The unique name that identifies you throughout the site.\"\n  validator={value => {\n    let feedback = { isValid: true };\n    if (value.length < 3) {\n      feedback = {\n        isValid: false,\n        validationMessage: 'Username must be at least 3 characters in length.',\n        dangerIconDescription: 'Error',\n      };\n    }\n    return feedback;\n  }}\n  themes={['danger']}\n/>\n`)), mdx(\"h3\", {\n    \"id\": \"label-as-element\"\n  }, `label as element`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#label-as-element\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText\n  name=\"username\"\n  label={<span lang=\"en\">Element</span>}\n  value=\"Label is wrapped in language span\"\n/>\n`)), mdx(\"h3\", {\n    \"id\": \"focus-test\"\n  }, `focus test`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#focus-test\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `class FocusInputWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { open: true };\n\n    this.resetStatusAlertWrapperState = this.resetStatusAlertWrapperState.bind(\n      this,\n    );\n  }\n\n  resetStatusAlertWrapperState() {\n    this.setState({ open: false });\n    this.inputForm.focus();\n  }\n\n  render() {\n    return (\n      <div>\n        <StatusAlert\n          alertType=\"info\"\n          open={this.state.open}\n          dialog=\"Close me to input data!\"\n          onClose={this.resetStatusAlertWrapperState}\n        />\n        <InputText\n          id=\"data\"\n          name=\"data\"\n          label=\"Data Input\"\n          inputRef={input => {\n            this.inputForm = input;\n          }}\n        />\n      </div>\n    );\n  }\n}\n`)), mdx(\"h3\", {\n    \"id\": \"different-textual-input-types\"\n  }, `different textual input types`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#different-textual-input-types\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<form>\n  <InputText\n    name=\"search\"\n    label=\"Search\"\n    value=\"what is paragon\"\n    type=\"search\"\n    id=\"input-search\"\n  />\n  <InputText\n    name=\"email\"\n    label=\"Email\"\n    value=\"paragon@edx.org\"\n    type=\"email\"\n    id=\"input-email\"\n  />\n  <InputText\n    name=\"url\"\n    label=\"Url\"\n    value=\"https://edx.github.io/paragon\"\n    type=\"url\"\n    id=\"input-url\"\n  />\n  <InputText\n    name=\"telephone\"\n    label=\"Telephone\"\n    value=\"1-(555)-555-5555\"\n    type=\"tel\"\n    id=\"input-tel\"\n  />\n  <InputText\n    name=\"password\"\n    label=\"Password\"\n    value=\"hunter2\"\n    type=\"password\"\n    id=\"input-password\"\n  />\n  <InputText\n    name=\"number\"\n    label=\"Number\"\n    value={42}\n    type=\"number\"\n    id=\"input-number\"\n  />\n  <InputText\n    name=\"datetime-local\"\n    label=\"Date and time\"\n    value=\"2017-04-27T13:45:00\"\n    type=\"datetime-local\"\n    id=\"input-datetime-local\"\n  />\n  <InputText\n    name=\"date\"\n    label=\"Date\"\n    value=\"2017-04-27\"\n    type=\"date\"\n    id=\"input-date\"\n  />\n  <InputText\n    name=\"month\"\n    label=\"Month\"\n    value=\"2017-04\"\n    type=\"month\"\n    id=\"input-month\"\n  />\n  <InputText\n    name=\"week\"\n    label=\"Week\"\n    value=\"2017-W33\"\n    type=\"week\"\n    id=\"input-week\"\n  />\n  <InputText\n    name=\"time\"\n    label=\"Time\"\n    value=\"13:45:00\"\n    type=\"time\"\n    id=\"input-time\"\n  />\n  <InputText\n    name=\"color\"\n    label=\"Color\"\n    value=\"#BF472C\"\n    type=\"color\"\n    id=\"input-color\"\n  />\n</form>\n`)), mdx(\"h3\", {\n    \"id\": \"price-with-step\"\n  }, `price with step`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#price-with-step\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText\n  name=\"price\"\n  label=\"Price\"\n  type=\"number\"\n  value={3.5}\n  min={0}\n  step={0.01}\n/>\n`)), mdx(\"h3\", {\n    \"id\": \"displayed-inline\"\n  }, `displayed inline`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#displayed-inline\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<InputText name=\"username\" label=\"Username\" value=\"foobar\" inline />\n`)), mdx(\"h3\", {\n    \"id\": \"with-input-group-addons\"\n  }, `with input group addons`, mdx(\"a\", {\n    parentName: \"h3\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#with-input-group-addons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `<form>\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupPrepend={<div className=\"input-group-text\">{'@'}</div>}\n  />\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupAppend={<div className=\"input-group-text\">{'@example.com'}</div>}\n  />\n  <InputText\n    name=\"money\"\n    label=\"Money\"\n    type=\"number\"\n    value={1000}\n    inputGroupPrepend={<div className=\"input-group-text\">{'$'}</div>}\n    inputGroupAppend={<div className=\"input-group-text\">{'.00'}</div>}\n  />\n  <InputText\n    name=\"search\"\n    label=\"Search\"\n    value=\"what is paragon\"\n    inputGroupAppend={(\n      <Button variant=\"outline-secondary\">Go</Button>\n    )}\n  />\n  <InputText\n    name=\"username\"\n    label=\"Username\"\n    value=\"foobar\"\n    inputGroupAppend={[\n      <div className=\"input-group-text\">\n        <Icon\n          id=\"checkmark\"\n          className=\"fa fa-check\"\n          screenReaderText=\"Checkmark\"\n        />\n      </div>,\n      <Button variant=\"outline-secondary\">Go</Button>,\n    ]}\n  />\n  <InputText\n    name=\"password\"\n    label=\"Password\"\n    value=\"secret\"\n    inputGroupAppend={\n      <div className=\"input-group-text\">\n        <Icon\n          id=\"checkmark\"\n          className=\"fa fa-check\"\n          screenReaderText=\"Checkmark\"\n        />\n      </div>\n    }\n  />\n</form>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"InputText","status":"Deprecate Soon","notes":"Replaced by Input and ValidationFormGroup\n","components":["InputText"]},"tableOfContents":{"items":[{"url":"#minimal-usage","title":"minimal usage"},{"url":"#read-only","title":"read only"},{"url":"#validation","title":"validation","items":[{"url":"#validation-with-danger-theme","title":"validation with danger theme"},{"url":"#label-as-element","title":"label as element"},{"url":"#focus-test","title":"focus test"},{"url":"#different-textual-input-types","title":"different textual input types"},{"url":"#price-with-step","title":"price with step"},{"url":"#displayed-inline","title":"displayed inline"},{"url":"#with-input-group-addons","title":"with input group addons"}]}]}},"components":{"nodes":[]}},"pageContext":{"id":"90005de3-ec3c-5e44-a520-cfb5c6a53efb","components":["InputText"],"scssVariablesData":{}}},"staticQueryHashes":["1303225137","3649515864","63159454"]}