{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/menu/","result":{"data":{"mdx":{"id":"006082bc-0199-52af-8dd7-510dde09a11e","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Menu\",\n  \"type\": \"component\",\n  \"components\": [\"Menu\", \"MenuItem\"],\n  \"categories\": [\"Navigation\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"menu\"\n  }, `Menu`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#menu\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `An arrow-key navigable `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Menu`), ` which consists of `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItems`), `. A `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Menu`), ` can be employed to produce its common variants, including dropdown menus, select menus, and others. `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Menus`), ` are keyboard navigable with both tab and arrow keys.`), mdx(\"h2\", {\n    \"id\": \"menuitem\"\n  }, `MenuItem`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#menuitem\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `A `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItem`), ` is its own distinct component that is used by any kind of menu overlays i.e. dropdown menu and navigation menu.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  return (\n    <Menu>\n      <MenuItem> A Menu Item</MenuItem>\n      <MenuItem iconBefore={Check}>A Menu Item With an Icon Before</MenuItem>\n      <MenuItem iconAfter={Check}>A Menu Item With an Icon After </MenuItem>\n      <MenuItem disabled>A Disabled Menu Item</MenuItem>\n      <MenuItem as={Hyperlink} destination=\"https://en.wikipedia.org/wiki/Hyperlink\">A Link Menu Item</MenuItem>\n      <MenuItem as={Button} variant=\"tertiary\" size=\"inline\">A Button Menu Item</MenuItem>\n      <MenuItem as={Form.Checkbox}>A Checkbox Menu Item</MenuItem>\n    </Menu>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"with-form\"\n  }, `With Form`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#with-form\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `A `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Menu`), ` can include things like forms.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  return (\n    <Form.Group>\n      <Form.CheckboxSet\n          name=\"color-two\"\n          onChange={(e) => console.log(e.target.value)}\n          defaultValue={['green']}\n        >\n        <Form.Label>Which Color?</Form.Label>\n        <Menu>\n          <MenuItem as={Form.Checkbox} value=\"red\">Red</MenuItem>\n          <MenuItem as={Form.Checkbox} value=\"blue\">Blue</MenuItem>\n          <MenuItem as={Form.Checkbox} value=\"green\">Green</MenuItem>\n          <MenuItem as={Form.Checkbox} value=\"yellow\">Yellow</MenuItem>\n        </Menu>\n      </Form.CheckboxSet>\n    </Form.Group>\n  );\n}\n`)), mdx(\"h2\", {\n    \"id\": \"with-modal\"\n  }, `With Modal`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#with-modal\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `A `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Menu`), ` can be implemented to appear inside a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `modalpopup`), ` for a wide variety of use cases. The `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Modal`), ` brings focus to the first menu element upon the click of the trigger, and can be escaped on click away or key press.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const [isOpen, open, close] = useToggle(false);\n  const [target, setTarget] = React.useState(null);\n  const [selected, setSelected] = useState('...');\n\n  return (\n    <>\n      <Badge variant=\"secondary\">I like {selected}</Badge>\n      <Button ref={setTarget} variant=\"primary\" size=\"inline\" onClick={open}>Click Me To Pick:</Button>\n      <ModalPopup positionRef={target} isOpen={isOpen} onClose={close} style={{\n        width: 500, height: 50\n      }}>\n      <div className=\"bg-white\">\n        <Menu>\n          <MenuItem as={Button} variant=\"tertiary\" size=\"inline\" onClick= {()=>setSelected('Beans')}>Beans</MenuItem>\n          <MenuItem as={Button} variant=\"tertiary\" size=\"inline\" onClick= {()=>setSelected('Greens')}>Greens</MenuItem>\n          <MenuItem as={Button} variant=\"tertiary\" size=\"inline\" onClick= {()=>setSelected('Tomatoes')}>Tomatoes</MenuItem>\n          <MenuItem as={Button} variant=\"tertiary\" size=\"inline\" onClick= {()=>setSelected('Potatoes')}>Potatoes</MenuItem>\n        </Menu>\n      </div>\n      </ModalPopup>\n    </>\n  )\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Menu","status":"New","notes":"","components":["Menu","MenuItem"]},"tableOfContents":{"items":[{"url":"#menu","title":"Menu"},{"url":"#menuitem","title":"MenuItem"},{"url":"#with-form","title":"With Form"},{"url":"#with-modal","title":"With Modal"}]}},"components":{"nodes":[{"displayName":"MenuItem","props":[{"defaultValue":{"value":"false"},"name":"defaultSelected","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Specifies that this ``MenuItem`` is selected inside the ``SelectMenu``","doclets":[],"description":{"id":"fc351e97-42b0-5612-9ec8-fd50086f1319","text":"Specifies that this ``MenuItem`` is selected inside the ``SelectMenu``","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies that this `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItem`), ` is selected inside the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `SelectMenu`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element","doclets":[],"description":{"id":"7d38a149-e164-5cd5-9634-002d3743a937","text":"Specifies class name to append to the base element","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name to append to the base element`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"children","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Specifies the content of the ``MenuItem``","doclets":[],"description":{"id":"074aa1ea-5c93-53e8-992b-77b9c9bc573c","text":"Specifies the content of the ``MenuItem``","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the content of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItem`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'button'"},"name":"as","type":{"name":"elementType","raw":null,"value":null},"required":false,"docblock":"Specifies the base element","doclets":[],"description":{"id":"c887d5e6-657d-5fe1-9e25-3320b82b334f","text":"Specifies the base element","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the base element`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"iconBefore","type":{"name":"union","raw":null,"value":[{"name":"element"},{"name":"func"}]},"required":false,"docblock":"Specifies the jsx before the content of the ``MenuItem``","doclets":[],"description":{"id":"47d44729-eb32-55be-a245-33b20b9d4bd8","text":"Specifies the jsx before the content of the ``MenuItem``","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the jsx before the content of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItem`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"iconAfter","type":{"name":"union","raw":null,"value":[{"name":"element"},{"name":"func"}]},"required":false,"docblock":"Specifies the jsx after the content of the ``MenuItem``","doclets":[],"description":{"id":"a4493a9c-43cd-5cf6-85ef-b17f5375f034","text":"Specifies the jsx after the content of the ``MenuItem``","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the jsx after the content of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `MenuItem`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]},{"displayName":"Menu","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies class name to append to the base element","doclets":[],"description":{"id":"7bd286a3-0e93-534e-af43-2048bffb2a50","text":"Specifies class name to append to the base element","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies class name to append to the base element`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'a:not(:disabled),button:not(:disabled),input:not(:disabled)'"},"name":"arrowKeyNavigationSelector","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Specifies the CSS selector string that indicates to which elements\nthe user can navigate using the arrow keys","doclets":[],"description":{"id":"eb8141cd-3efa-5240-a85f-2c7982006cb2","text":"Specifies the CSS selector string that indicates to which elements\nthe user can navigate using the arrow keys","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the CSS selector string that indicates to which elements\nthe user can navigate using the arrow keys`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'div'"},"name":"as","type":{"name":"elementType","raw":null,"value":null},"required":false,"docblock":"Specifies the base element","doclets":[],"description":{"id":"c5d6f7a5-5cd2-5bd9-8374-ad73d3c5fba9","text":"Specifies the base element","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the base element`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"null"},"name":"children","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"Specifies the content of the menu","doclets":[],"description":{"id":"6a61636e-53f6-5d88-a71e-ec2b1dd08fb5","text":"Specifies the content of the menu","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the content of the menu`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"006082bc-0199-52af-8dd7-510dde09a11e","components":["Menu","MenuItem"],"scssVariablesData":{"openedx":"$menu-box-shadow:                                 $box-shadow !default;\n$menu-border-radius:                              .25em !default;\n$menu-bg:                                         $white !default;\n$menu-max-height:                                 16.813rem !default;\n$menu-item-height:                                3rem !default;\n$menu-item-width:                                 19rem !default;\n$menu-item-width-xs:                              13.438rem !default;\n$menu-item-color:                                 $body-color !default;\n$menu-item-bg:                                    transparent !default;\n$menu-item-border-color:                          $menu-item-bg !default;\n$menu-item-border-width:                          $btn-border-width !default;\n$menu-item-hover-border:                          $menu-item-bg !default;\n$menu-item-padding-x:                             $btn-padding-x !default;\n$menu-item-padding-y:                             $btn-padding-y !default;\n$menu-item-hover-color:                           $btn-tertiary-color !default;\n$menu-item-hover-border-color:                    $menu-item-bg !default;\n$menu-item-hover-bg:                              $btn-tertiary-hover-bg !default;\n$menu-item-icon-margin-left:                      .25em !default;\n$menu-item-icon-margin-right:                     $menu-item-icon-margin-left !default;\n$menu-item-focus-bg:                              $btn-tertiary-active-bg !default;\n$menu-item-border:                                $menu-item-border-width solid $menu-item-border-color !default;\n$menu-select-btn-link-color:                      $primary-500 !default;\n$menu-select-btn-link-text-decoration-line:       underline !default;\n$menu-select-btn-link-text-decoration-thickness:  .125rem !default;\n","edxorg":"$menu-box-shadow:                                 $box-shadow !default;\n$menu-border-radius:                              .25em !default;\n$menu-bg:                                         $white !default;\n$menu-max-height:                                 16.813rem !default;\n$menu-item-height:                                3rem !default;\n$menu-item-width:                                 19rem !default;\n$menu-item-width-xs:                              13.438rem !default;\n$menu-item-color:                                 $body-color !default;\n$menu-item-bg:                                    transparent !default;\n$menu-item-border-color:                          $menu-item-bg !default;\n$menu-item-border-width:                          $btn-border-width !default;\n$menu-item-hover-border:                          $menu-item-bg !default;\n$menu-item-padding-x:                             $btn-padding-x !default;\n$menu-item-padding-y:                             $btn-padding-y !default;\n$menu-item-hover-color:                           $btn-tertiary-color !default;\n$menu-item-hover-border-color:                    $menu-item-bg !default;\n$menu-item-hover-bg:                              $btn-tertiary-hover-bg !default;\n$menu-item-icon-margin-left:                      .25em !default;\n$menu-item-icon-margin-right:                     $menu-item-icon-margin-left !default;\n$menu-item-focus-bg:                              $btn-tertiary-active-bg !default;\n$menu-item-border:                                $menu-item-border-width solid $menu-item-border-color !default;\n$menu-select-btn-link-color:                      $primary-500 !default;\n$menu-select-btn-link-text-decoration-line:       underline !default;\n$menu-select-btn-link-text-decoration-thickness:  .125rem !default;\n"},"componentsUsageInsights":["Alert","Button","DataTable","DataTable.TableControlBar","DataTable.Table","DataTable.TableFooter","Container","Row","Spinner","Icon","InputText","InputSelect","TextArea","StatusAlert","Hyperlink","Table","CheckCircle","Error","WarningFilled","Alert.Heading","Form.Checkbox","ModalDialog","Form","ModalDialog.Header","ModalDialog.Title","ModalDialog.Body","Form.Group","Form.Label","Form.RadioSet","Form.Radio","ModalDialog.Footer","ActionRow","ModalDialog.CloseButton","StatefulButton","AlertModal","ValidationFormGroup","Input","ModalLayer","ModalCloseButton","Form.Control","useToggle","Form.Text","useWindowSize","breakpoints","OpenInNew","Col","TransitionReplace","Form.Check","Collapsible","Alert.Link","ArrowForwardIos","Collapsible.Advanced","Collapsible.Trigger","Collapsible.Body","OverlayTrigger","Tooltip","InfoOutline","ArrowBack","Form.Switch","Skeleton","Info","Lightbulb","ArrowOutward","Undo","Badge","DataTable.EmptyTable","Toast","BookOpen","ErrorOutline","DataTable.RowStatus","Stepper","Stepper.Step","Stepper.ActionRow","MailtoLink","Stack","Card","Card.Section","IconButton","Delete","DataTableContext.Provider","CheckboxControl","Popover","Popover.Title","Popover.Content","Modal","Tab","Tabs","Pagination","SpinnerIcon","Plus","Warning","Close","Check","Add","Card.ImageCap","Card.Header","Card.Footer","CardGrid","ActionRow.Spacer","FullscreenModal","Stepper.Header","Assignment","AddCircle","CardView","EditCircle","Pagination.Reduced","FileDownload","MediaQuery","ErrorIcon","Dropdown","Dropdown.Toggle","AvatarButton","Dropdown.Menu","Dropdown.Item","Navbar","Nav","Nav.Link","Breadcrumb","Card.Body","ProgressBar.Annotated","DataTable.FilterStatus","Search","FormControl.Feedback","Groups","ProductTour","FormControl","Download","SearchField","ContentCopy","Dropzone","Image","Card.Status","Sync","MoreVert","PlayCircleFilled","RemoveCircle","Edit","ArrowForward","Bubble","School","TrendingUp","InsertChartOutlined","Tag","CreditCard","MoneyOutline","Description","Settings","Support","Email","ArrowBackIos","ResponsiveContext.Provider","PageBanner","Login","Institution","VisibilityOff","Visibility","Remove","ExpandMore","ChevronLeft","useMediaQuery","FormAutosuggestOption","FormAutosuggest","FormControlFeedback","Form.CheckboxSet","Send","Event","SpinnerSimple","Cancel","Nav.Item","Layout","Layout.Element","ModalPopup","IconAdd","IconButtonWithTooltip","DeleteOutline","EditOutline","AddIcon","CalendarIcon","ArrowCircleDownIcon","Truncate","Dropdown.Divider","Chip","SelectableBox.Set","SelectableBox","Collapsible.Visible","ExpandLess","FileUploadIcon","Card.Divider","InfoIcon","Calendar","SwitchControl","WarningIcon","IconSettings","Form.Row","ButtonGroup","CheckCircleOutline","EmailIcon","CheckCircleIcon","Copyright","Cc","Attribution","Nc","Nd","Sa","FormLabel","RotateRightIcon","CloseIcon","Tune","SearchField.Advanced","SearchField.Label","SearchField.Input","SearchIcon","PostOutline","HelpOutline","Report","MoreHoriz","Avatar","DropdownButton","Post","Help","People","Locked","ModalDialog.Hero","Launch","Book","EventNote","Program","FilterAlt","CloseSmall","Sheet","useCheckboxSetValues","paragon","MarketingModal","Dropdown.Header","PersonSearch","FormGroup","ChevronRight","Lock","StarFilled","AccessTime","Speed","Equalizer","VideoFile","Person","RocketLaunch","ContentPasteGo","Navbar.Brand","VerifiedBadge","StandardModal","LibraryBooks","CalendarMonth","ExpandCircleDown","FormatQuote","CardCarousel","CardDeck","ZoomOut","MenuIcon","Dropdown.Deprecated","AccountBalance","WatchFilled","Blocked","ArrowDropDown","ArrowDropUp","Menu","QuestionAnswer","WatchOutline","Compass","MoneyFilled","TextFields","VideoCamera","CheckIcon","DjangoShort","Form.AutosuggestOption","Form.Autosuggest","NotificationsNone","CheckCircleLightOutline","AutoAwesome","SearchField.ClearButton","SearchField.SubmitButton","FeedbackOutline","KeyboardArrowDown","KeyboardArrowUp","FileUpload","ClosedCaption","InputGroup","DragIndicator","icons","Scrollable","DropdownToggle","SelectMenu","MenuItem","Form.SwitchSet","Facebook","BsTwitter","BsLinkedin","Reddit","Thunderstorm","Minimize","Recommend","useArrowKeyNavigation","CallMade","KeyboardArrowRight","ArrowUpward","Verified","Timelapse","ArrowRightAlt","LocalOffer","LocationOn","Done","CheckBoxGroup","CheckBox","Variant","Fieldset"],"githubEditPath":"https://github.com/openedx/paragon/edit/master/src/Menu/README.md"}},"staticQueryHashes":["3617884278","3649515864","3773363936","63159454"]}