{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/pagebanner/","result":{"data":{"mdx":{"id":"048c1580-24c8-50c9-8f22-5e768581856c","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"Page Banner\",\n  \"type\": \"component\",\n  \"components\": [\"PageBanner\"],\n  \"categories\": [\"Status & metadata\"],\n  \"status\": \"New\",\n  \"designStatus\": \"Complete\",\n  \"devStatus\": \"In Progress\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), ` displays an important, succinct message, and provides actions for users to address (or dismiss the banner). It requires a user action to be dismissed.`), mdx(\"h2\", {\n    \"id\": \"basic-usage-variants\"\n  }, `Basic Usage Variants`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#basic-usage-variants\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n    const [showPageBanner, setShowPageBanner] = useState(true);\n    const [variant, setVariant] = useState('light');\n\n    return (\n        <>\n          <ExamplePropsForm\n            inputs={[\n              {\n                value: variant, setValue: setVariant, options: [\n                  {name: 'light', value: 'light'},\n                  {name: 'dark', value: 'dark'},\n                  {name: 'accentA', value: 'accentA'},\n                  {name: 'accentB', value: 'accentB'},\n                  {name: 'warning', value: 'warning'}\n                ], name: 'Banner Variants'\n              },\n            ]}\n          />\n\n            <div>\n              <PageBanner\n                show={showPageBanner}\n                variant={variant}\n                dismissible\n                onDismiss={() => setShowPageBanner(false)}\n              >\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore.\n              </PageBanner>\n              {!showPageBanner && (\n                <Button className=\"my-2 mie-2\" onClick={() => setShowPageBanner(true)}>Show Page Banner</Button>)}\n\n            </div>\n        </>\n    )\n}\n`)), mdx(\"h2\", {\n    \"id\": \"warning-banner\"\n  }, `Warning Banner`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#warning-banner\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"p\", null, `The system warning banner is similar to the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Alert Banner`), ` banner in styling, except that the text is always default body (14px) and padding has been modified in order to accommodate the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), ` component. It cannot be dismissed.`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  return (\n    <>\n      <PageBanner\n         variant=\"warning\"\n      >\n        <Icon src={WarningFilled} className=\"mie-2\"/> We will no longer support Internet Explorer 11.\n      </PageBanner>\n    </>\n  )\n}\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Page Banner","status":"New","notes":"","components":["PageBanner"]},"tableOfContents":{"items":[{"url":"#basic-usage-variants","title":"Basic Usage Variants"},{"url":"#warning-banner","title":"Warning Banner"}]}},"components":{"nodes":[{"displayName":"PageBanner","props":[{"defaultValue":{"value":"undefined"},"name":"children","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"An element rendered inside the `Page Banner`.","doclets":[],"description":{"id":"9ae1de21-2b4f-5d96-901c-a776e084600b","text":"An element rendered inside the `Page Banner`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `An element rendered inside the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"false"},"name":"dismissible","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Boolean used to control whether `Page Banner` is dismissible.","doclets":[],"description":{"id":"226c46cc-5562-54f3-8dea-e61870e3cbd6","text":"Boolean used to control whether `Page Banner` is dismissible.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Boolean used to control whether `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), ` is dismissible.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'Dismiss'"},"name":"dismissAltText","type":{"name":"node","raw":null,"value":null},"required":false,"docblock":"An element to be set as the dismiss button's alt text (preferably a translated string).","doclets":[],"description":{"id":"32204ac9-ae18-5424-8100-4f9a95f8daa1","text":"An element to be set as the dismiss button's alt text (preferably a translated string).","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `An element to be set as the dismiss button's alt text (preferably a translated string).`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"() => {}"},"name":"onDismiss","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"A function to be called on dismiss of the `Page Banner`.","doclets":[],"description":{"id":"a9022c20-7c59-5958-9880-ffc1ba912b8a","text":"A function to be called on dismiss of the `Page Banner`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A function to be called on dismiss of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"true"},"name":"show","type":{"name":"bool","raw":null,"value":null},"required":false,"docblock":"Boolean used to control whether the Page Banner shows.","doclets":[],"description":{"id":"0512aa7f-e550-5c72-a2d9-6a80b5a5e876","text":"Boolean used to control whether the Page Banner shows.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Boolean used to control whether the Page Banner shows.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'accentA'"},"name":"variant","type":{"name":"enum","raw":null,"value":[{"value":"'light'","computed":false},{"value":"'dark'","computed":false},{"value":"'warning'","computed":false},{"value":"'accentA'","computed":false},{"value":"'accentB'","computed":false}]},"required":false,"docblock":"A string designating which color variant of the `Page Banner` to display","doclets":[],"description":{"id":"9c42885f-99cc-5294-a1ad-6b6c67f5bc97","text":"A string designating which color variant of the `Page Banner` to display","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A string designating which color variant of the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `Page Banner`), ` to display`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"048c1580-24c8-50c9-8f22-5e768581856c","components":["PageBanner"],"scssVariablesData":{}}},"staticQueryHashes":["1303225137","3649515864","63159454"]}