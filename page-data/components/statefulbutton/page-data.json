{"componentChunkName":"component---src-templates-component-page-template-tsx","path":"/components/statefulbutton/","result":{"data":{"mdx":{"id":"2204c636-5683-5512-bbee-ac1318dde0a1","body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {\n  \"title\": \"StatefulButton\",\n  \"type\": \"component\",\n  \"components\": [\"StatefulButton\"],\n  \"categories\": [\"Buttonlike\"],\n  \"status\": \"Stable\",\n  \"designStatus\": \"Done\",\n  \"devStatus\": \"Done\",\n  \"notes\": \"\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The stateful button is a button used to display an actionable icon.`), mdx(\"h2\", {\n    \"id\": \"basic-usage\"\n  }, `Basic usage`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#basic-usage\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const props = {\n    labels: {\n      default: 'Save',\n      pending: 'Saving',\n      complete: 'Saved',\n      error: 'Error'\n    },\n    variant: 'primary',\n  };\n  return (\n    <Stack direction=\"horizontal\" gap={2}>\n      <StatefulButton {...props} />\n      <StatefulButton state=\"pending\" {...props} />\n      <StatefulButton state=\"complete\" {...props} />\n      <StatefulButton state=\"error\" {...props} />\n    </Stack>\n  );\n};\n`)), mdx(\"h2\", {\n    \"id\": \"custom-icons-and-disabled-states\"\n  }, `Custom icons and disabled states`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#custom-icons-and-disabled-states\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const downloadButtonProps = {\n    labels: {\n      default: 'Download',\n      pending: 'Downloading',\n      complete: 'Downloaded',\n    },\n    icons: {\n      default: <Icon src={Download} />,\n      pending: <Icon src={SpinnerSimple} className=\"icon-spin\" />,\n      complete: <Icon src={Check} />,\n    },\n    disabledStates: ['pending', 'complete'],\n    variant: 'primary',\n  };\n  return (\n    <Stack direction=\"horizontal\" gap={2}>\n      <StatefulButton state=\"default\" {...downloadButtonProps} />\n      <StatefulButton state=\"pending\" {...downloadButtonProps} />\n      <StatefulButton state=\"complete\" {...downloadButtonProps} />\n    </Stack>\n  );\n};\n`)), mdx(\"h2\", {\n    \"id\": \"custom-states-with-paragon-icons\"\n  }, `Custom states with Paragon icons`, mdx(\"a\", {\n    parentName: \"h2\",\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#custom-states-with-paragon-icons\"\n  }, mdx(\"span\", {\n    parentName: \"a\",\n    \"className\": \"pgn-doc__anchor\"\n  }, `#`))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }, `() => {\n  const buttonProps = {\n    labels: {\n      unedited: 'Save (no changes)',\n      edited: 'Save Changes',\n    },\n    icons: {\n      unedited: <Icon src={Add} />,\n      edited: <Icon src={Add} />,\n    },\n    disabledStates: ['unedited'],\n    variant: 'primary',\n  };\n  return (\n    <Stack direction=\"horizontal\" gap={2}>\n      <StatefulButton state=\"unedited\" {...buttonProps} />\n      <StatefulButton state=\"edited\" {...buttonProps} />\n    </Stack>\n  );\n};\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"StatefulButton","status":"Stable","notes":"","components":["StatefulButton"]},"tableOfContents":{"items":[{"url":"#basic-usage","title":"Basic usage"},{"url":"#custom-icons-and-disabled-states","title":"Custom icons and disabled states"},{"url":"#custom-states-with-paragon-icons","title":"Custom states with Paragon icons"}]}},"components":{"nodes":[{"displayName":"StatefulButton","props":[{"defaultValue":{"value":"undefined"},"name":"className","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"","doclets":[],"description":{"id":"e0310b57-6471-54d8-bdfa-875f44032ff5","text":"","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"'default'"},"name":"state","type":{"name":"string","raw":null,"value":null},"required":false,"docblock":"Each state has:\n- A label (required)\n- An icon\n- an option to be disabled\n\nControl the state with the `state` prop. Example usage:\n\n```jsx\n<StatefulButton\n  state=\"pending\"\n  labels={{\n    default: 'Download',\n    pending: 'Downloading',\n    complete: 'Downloaded',\n  }}\n  icons={{\n    default: <Icon className=\"fa fa-download\" />,\n    pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n    complete: <Icon className=\"fa fa-check\" />,\n  }}\n  disabledStates=['pending']\n  className='btn-primary mr-2'\n/>\n```","doclets":[],"description":{"id":"ceed9c3e-9597-51ba-8c44-6209f3616db9","text":"Each state has:\n- A label (required)\n- An icon\n- an option to be disabled\n\nControl the state with the `state` prop. Example usage:\n\n```jsx\n<StatefulButton\n  state=\"pending\"\n  labels={{\n    default: 'Download',\n    pending: 'Downloading',\n    complete: 'Downloaded',\n  }}\n  icons={{\n    default: <Icon className=\"fa fa-download\" />,\n    pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n    complete: <Icon className=\"fa fa-check\" />,\n  }}\n  disabledStates=['pending']\n  className='btn-primary mr-2'\n/>\n```","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Each state has:`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `A label (required)`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `An icon`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `an option to be disabled`)), mdx(\"p\", null, `Control the state with the `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `state`), ` prop. Example usage:`), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, `<StatefulButton\n  state=\"pending\"\n  labels={{\n    default: 'Download',\n    pending: 'Downloading',\n    complete: 'Downloaded',\n  }}\n  icons={{\n    default: <Icon className=\"fa fa-download\" />,\n    pending: <Icon className=\"fa fa-spinner fa-spin\" />,\n    complete: <Icon className=\"fa fa-check\" />,\n  }}\n  disabledStates=['pending']\n  className='btn-primary mr-2'\n/>\n`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":null,"name":"labels","type":{"name":"objectOf","raw":null,"value":{"name":"node"}},"required":true,"docblock":"Required. Each state has a `label`.","doclets":[],"description":{"id":"4e58a301-3736-5f26-afe4-b8b7d57cccc5","text":"Required. Each state has a `label`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Required. Each state has a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `label`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"{\n  default: undefined,\n  pending: <Icon src={SpinnerSimple} className={classNames('icon-spin')} />,\n  complete: <Icon src={CheckCircleOutline} />,\n  error: <Icon src={Cancel} />,\n}"},"name":"icons","type":{"name":"objectOf","raw":null,"value":{"name":"node"}},"required":false,"docblock":"Required. Each state has an `icon`.","doclets":[],"description":{"id":"91ffce8d-412a-59d6-aa14-7da0bf8e9d5c","text":"Required. Each state has an `icon`.","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Required. Each state has an `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `icon`), `.`));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"['pending', 'complete']"},"name":"disabledStates","type":{"name":"arrayOf","raw":null,"value":{"name":"string"}},"required":false,"docblock":"Required. Each state has a `disabledState`","doclets":[],"description":{"id":"511978ac-2d50-5fde-8772-c6801ff4adc1","text":"Required. Each state has a `disabledState`","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Required. Each state has a `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `disabledState`)));\n}\n;\nMDXContent.isMDXComponent = true;"}}},{"defaultValue":{"value":"undefined"},"name":"onClick","type":{"name":"func","raw":null,"value":null},"required":false,"docblock":"Specifies the callback function when the button is clicked","doclets":[],"description":{"id":"dbe5f54d-3d6a-5ba9-9222-4fd417a8b240","text":"Specifies the callback function when the button is clicked","childMdx":{"body":"const _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nconst _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  let {\n      components\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Specifies the callback function when the button is clicked`));\n}\n;\nMDXContent.isMDXComponent = true;"}}}]}]}},"pageContext":{"id":"2204c636-5683-5512-bbee-ac1318dde0a1","components":["StatefulButton"],"scssVariablesData":{}}},"staticQueryHashes":["1303225137","3649515864","63159454"]}